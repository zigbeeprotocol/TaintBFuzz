[kernel] Parsing enum.i (no preprocessing)
[scf] beginning constant propagation
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  
[eva] computing for function f <- main.
  Called from enum.i:11.
[eva] Recording results for f
[eva] Done for function f
[eva] computing for function f <- main.
  Called from enum.i:12.
[eva] Recording results for f
[eva] Done for function f
[eva:alarm] enum.i:13: Warning: signed overflow. assert B + c ≤ 2147483647;
[eva:alarm] enum.i:15: Warning: 
  signed overflow. assert (int)(y + z) + t ≤ 2147483647;
[eva:alarm] enum.i:15: Warning: 
  signed overflow. assert -2147483648 ≤ (int)((int)(y + z) + t) + v;
[eva:alarm] enum.i:15: Warning: 
  signed overflow. assert (int)((int)(y + z) + t) + v ≤ 2147483647;
[eva] Recording results for main
[eva] done for function main
/* Generated by Frama-C */
enum E {
    A = 0,
    B = 1,
    C = 2,
    D = 3
};
int f(enum E e)
{
  int __retres;
  __retres = (int)(e + 1U);
  return __retres;
}

int main(int c, unsigned int u)
{
  int __retres;
  enum E x = A;
  int y = f(0U);
  int z = f(D);
  /*@ assert Eva: signed_overflow: B + c ≤ 2147483647; */
  int t = B + c;
  int v = (int)(2U + u);
  /*@ assert Eva: signed_overflow: (int)(y + z) + t ≤ 2147483647; */
  /*@ assert
      Eva: signed_overflow: -2147483648 ≤ (int)((int)(y + z) + t) + v;
  */
  /*@ assert
      Eva: signed_overflow: (int)((int)(y + z) + t) + v ≤ 2147483647;
  */
  __retres = (5 + t) + v;
  return __retres;
}


[scf] constant propagation done
