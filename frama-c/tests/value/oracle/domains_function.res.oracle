[kernel] Parsing domains_function.c (with preprocessing)
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  undet ∈ [--..--]
  i ∈ {0}
  result ∈ {0}
  t[0..9] ∈ {0}
[eva] domains_function.c:117: starting to merge loop iterations
[eva] computing for function Frama_C_interval <- main.
  Called from domains_function.c:119.
[eva] using specification for function Frama_C_interval
[eva] domains_function.c:119: 
  function Frama_C_interval: precondition 'order' got status valid.
[eva] Done for function Frama_C_interval
[eva] computing for function test <- main.
  Called from domains_function.c:120.
[eva] domains_function.c:92: Frama_C_show_each_top: [-2147483648..2147483647]
[eva] computing for function enabled <- test <- main.
  Called from domains_function.c:93.
[eva] Recording results for enabled
[eva] Done for function enabled
[eva] domains_function.c:94: Frama_C_show_each_singleton: {0}
[eva] computing for function not_enabled <- test <- main.
  Called from domains_function.c:95.
[eva] domains_function.c:77: Frama_C_show_each_top: [-2147483648..2147483647]
[eva] Recording results for not_enabled
[eva] Done for function not_enabled
[eva] domains_function.c:96: Frama_C_show_each_top: [-2147483648..2147483647]
[eva] computing for function disabled <- test <- main.
  Called from domains_function.c:97.
[eva] domains_function.c:84: Frama_C_show_each_top: [-2147483648..2147483647]
[eva] Recording results for disabled
[eva] Done for function disabled
[eva] domains_function.c:98: Frama_C_show_each_top: [-2147483648..2147483647]
[eva] Recording results for test
[eva] Done for function test
[eva] computing for function recursively_enabled <- main.
  Called from domains_function.c:121.
[eva] domains_function.c:107: Frama_C_show_each_singleton: {4}
[eva] computing for function enabled <- recursively_enabled <- main.
  Called from domains_function.c:108.
[eva] Recording results for enabled
[eva] Done for function enabled
[eva] domains_function.c:109: Frama_C_show_each_singleton: {0}
[eva] computing for function not_enabled <- recursively_enabled <- main.
  Called from domains_function.c:110.
[eva] domains_function.c:77: Frama_C_show_each_top: {1}
[eva] Recording results for not_enabled
[eva] Done for function not_enabled
[eva] domains_function.c:111: Frama_C_show_each_singleton: {1}
[eva] computing for function disabled <- recursively_enabled <- main.
  Called from domains_function.c:112.
[eva] domains_function.c:84: Frama_C_show_each_top: [-2147483648..2147483647]
[eva] Recording results for disabled
[eva] Done for function disabled
[eva] domains_function.c:113: Frama_C_show_each_top: [-2147483648..2147483647]
[eva] Recording results for recursively_enabled
[eva] Done for function recursively_enabled
[eva] computing for function test_propagation <- main.
  Called from domains_function.c:122.
[eva] computing for function infer <- test_propagation <- main.
  Called from domains_function.c:53.
[eva] Recording results for infer
[eva] Done for function infer
[eva] computing for function no_use <- test_propagation <- main.
  Called from domains_function.c:54.
[eva] Recording results for no_use
[eva] Done for function no_use
[eva] domains_function.c:55: Frama_C_show_each_top: [-2147483648..2147483647]
[eva] computing for function nothing <- test_propagation <- main.
  Called from domains_function.c:56.
[eva:alarm] domains_function.c:21: Warning: 
  signed overflow. assert -2147483648 ≤ t[i] - t[0];
[eva:alarm] domains_function.c:21: Warning: 
  signed overflow. assert t[i] - t[0] ≤ 2147483647;
[eva] Recording results for nothing
[eva] Done for function nothing
[eva] computing for function use <- test_propagation <- main.
  Called from domains_function.c:57.
[eva] Recording results for use
[eva] Done for function use
[eva] domains_function.c:58: Frama_C_show_each_singleton: {42}
[eva] computing for function kill <- test_propagation <- main.
  Called from domains_function.c:59.
[eva] Recording results for kill
[eva] Done for function kill
[eva] computing for function use <- test_propagation <- main.
  Called from domains_function.c:60.
[eva] Recording results for use
[eva] Done for function use
[eva] domains_function.c:61: Frama_C_show_each_top: [-2147483648..2147483647]
[eva] computing for function no_infer <- test_propagation <- main.
  Called from domains_function.c:62.
[eva] Recording results for no_infer
[eva] Done for function no_infer
[eva] domains_function.c:63: Reusing old results for call to use
[eva] domains_function.c:64: Frama_C_show_each_top: [-2147483648..2147483647]
[eva] Recording results for test_propagation
[eva] Done for function test_propagation
[eva] Recording results for main
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function disabled:
  result ∈ [--..--]
  t[0..9] ∈ [--..--]
[eva:final-states] Values at end of function enabled:
  result ∈ {0}
  t[0..9] ∈ [--..--]
[eva:final-states] Values at end of function infer:
  t[0..9] ∈ [--..--]
[eva:final-states] Values at end of function kill:
  t[0..9] ∈ [--..--]
[eva:final-states] Values at end of function no_infer:
  t[0..9] ∈ [--..--]
[eva:final-states] Values at end of function no_use:
  result ∈ [--..--]
[eva:final-states] Values at end of function not_enabled:
  result ∈ [--..--]
  t[0..9] ∈ [--..--]
[eva:final-states] Values at end of function nothing:
  tmp ∈ [--..--]
[eva:final-states] Values at end of function recursively_enabled:
  result ∈ [--..--]
  t[0..9] ∈ [--..--]
[eva:final-states] Values at end of function test:
  result ∈ [--..--]
  t[0..9] ∈ [--..--]
[eva:final-states] Values at end of function use:
  result ∈ [--..--]
[eva:final-states] Values at end of function test_propagation:
  result ∈ [--..--]
  t[0..9] ∈ [--..--]
[eva:final-states] Values at end of function main:
  Frama_C_entropy_source ∈ [--..--]
  i ∈ [0..9]
  result ∈ [--..--]
  t[0..9] ∈ [--..--]
[from] Computing for function disabled
[from] Done for function disabled
[from] Computing for function enabled
[from] Done for function enabled
[from] Computing for function infer
[from] Done for function infer
[from] Computing for function kill
[from] Done for function kill
[from] Computing for function no_infer
[from] Done for function no_infer
[from] Computing for function no_use
[from] Done for function no_use
[from] Computing for function not_enabled
[from] Done for function not_enabled
[from] Computing for function nothing
[from] Done for function nothing
[from] Computing for function recursively_enabled
[from] Done for function recursively_enabled
[from] Computing for function test
[from] Done for function test
[from] Computing for function use
[from] Done for function use
[from] Computing for function test_propagation
[from] Done for function test_propagation
[from] Computing for function main
[from] Computing for function Frama_C_interval <-main
[from] Done for function Frama_C_interval
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
  These dependencies hold at termination for the executions that terminate:
[from] Function Frama_C_interval:
  Frama_C_entropy_source FROM Frama_C_entropy_source (and SELF)
  \result FROM Frama_C_entropy_source; min; max
[from] Function disabled:
  result FROM i; t[0..9]
  t[0..9] FROM i (and SELF)
[from] Function enabled:
  result FROM i; t[0..9]
  t[0..9] FROM i (and SELF)
[from] Function infer:
  t[0..9] FROM i (and SELF)
[from] Function kill:
  t[0] FROM undet
[from] Function no_infer:
  t[0..9] FROM i (and SELF)
[from] Function no_use:
  result FROM i; t[0..9]
[from] Function not_enabled:
  result FROM i; t[0..9]
  t[0..9] FROM i (and SELF)
[from] Function nothing:
  NO EFFECTS
[from] Function recursively_enabled:
  result FROM i; t[0..9]
  t[0..9] FROM i (and SELF)
[from] Function test:
  result FROM i; t[0..9]
  t[0..9] FROM i (and SELF)
[from] Function use:
  result FROM i; t[0..9]
[from] Function test_propagation:
  result FROM undet; i; t[1..9]
  t[0] FROM undet; i
   [1..9] FROM i (and SELF)
[from] Function main:
  Frama_C_entropy_source FROM Frama_C_entropy_source (and SELF)
  i FROM Frama_C_entropy_source
  result FROM Frama_C_entropy_source; undet; t[1..9]
  t[0] FROM Frama_C_entropy_source; undet
   [1..9] FROM Frama_C_entropy_source; undet (and SELF)
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function disabled:
    result; t[0..9]
[inout] Inputs for function disabled:
    i; result; t[0..9]
[inout] Out (internal) for function enabled:
    result; t[0..9]
[inout] Inputs for function enabled:
    i; t[0..9]
[inout] Out (internal) for function infer:
    t[0..9]
[inout] Inputs for function infer:
    i
[inout] Out (internal) for function kill:
    t[0]
[inout] Inputs for function kill:
    undet
[inout] Out (internal) for function no_infer:
    t[0..9]
[inout] Inputs for function no_infer:
    i
[inout] Out (internal) for function no_use:
    result
[inout] Inputs for function no_use:
    i; t[0..9]
[inout] Out (internal) for function not_enabled:
    result; t[0..9]
[inout] Inputs for function not_enabled:
    i; result; t[0..9]
[inout] Out (internal) for function nothing:
    tmp
[inout] Inputs for function nothing:
    i; t[0..9]
[inout] Out (internal) for function recursively_enabled:
    result; t[0..9]
[inout] Inputs for function recursively_enabled:
    i; result; t[0..9]
[inout] Out (internal) for function test:
    result; t[0..9]
[inout] Inputs for function test:
    i; result; t[0..9]
[inout] Out (internal) for function use:
    result
[inout] Inputs for function use:
    i; t[0..9]
[inout] Out (internal) for function test_propagation:
    result; t[0..9]
[inout] Inputs for function test_propagation:
    undet; i; result; t[0..9]
[inout] Out (internal) for function main:
    Frama_C_entropy_source; i; result; t[0..9]; j
[inout] Inputs for function main:
    Frama_C_entropy_source; undet; i; result; t[0..9]
