[kernel] Parsing bug0196.c (with preprocessing)
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  
[eva] computing for function fact <- main.
  Called from bug0196.c:16.
[eva] bug0196.c:8: assertion got status valid.
[eva] bug0196.c:11: cannot evaluate ACSL term, \at() on a C label is unsupported
[eva:alarm] bug0196.c:11: Warning: assertion got status unknown.
[eva] bug0196.c:7: starting to merge loop iterations
[eva:alarm] bug0196.c:10: Warning: 
  signed overflow. assert r * tmp ≤ 2147483647;
                   (tmp from n--)
[eva] Recording results for fact
[eva] Done for function fact
[eva] Recording results for main
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function fact:
  n ∈ {0}
  r ∈ [1..2147483647]
[eva:final-states] Values at end of function main:
  
[from] Computing for function fact
[from] Done for function fact
[from] Computing for function main
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
  These dependencies hold at termination for the executions that terminate:
[from] Function fact:
  \result FROM n
[from] Function main:
  \result FROM \nothing
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function fact:
    n; r; tmp
[inout] Inputs for function fact:
    \nothing
[inout] Out (internal) for function main:
    tmp
[inout] Inputs for function main:
    \nothing
/* Generated by Frama-C */
int fact(int n)
{
  int r = 1;
  while (n > 0) {
    int tmp;
    /*@ assert n > 0; */ ;
    before:
    { /* sequence */
      tmp = n;
      n --;
      /*@ assert Eva: signed_overflow: r * tmp ≤ 2147483647; */
      r *= tmp;
    }
    /*@ assert r ≡ \at(r * n,before); */ ;
  }
  while_0_break: ;
  return r;
}

int main(void)
{
  int tmp;
  tmp = fact(3);
  return tmp;
}


