[kernel] Parsing backward_add_ptr.c (with preprocessing)
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  rand ∈ [--..--]
[eva] computing for function main1 <- main.
  Called from backward_add_ptr.c:185.
[eva:alarm] backward_add_ptr.c:25: Warning: 
  out of bounds read. assert \valid_read(p + (uintptr_t)q);
[eva] backward_add_ptr.c:26: Frama_C_show_each_only_a: {0; 1}, {{ &a }}, {0}
[eva:alarm] backward_add_ptr.c:32: Warning: 
  out of bounds read. assert \valid_read((char *)p + (uintptr_t)q);
[eva] backward_add_ptr.c:33: 
  Frama_C_show_each_reduced_offset:
  {0; 1}, {{ NULL + {0; 1; 2; 3} ; &a }}, {{ NULL + {0; 1; 2; 3} ; &b }}
[eva:alarm] backward_add_ptr.c:38: Warning: 
  out of bounds read. assert \valid_read(p + (uintptr_t)((uintptr_t)q / 4));
[eva] backward_add_ptr.c:39: 
  Frama_C_show_each_no_reduction:
  {0; 1}, {{ NULL + [0..4294967295] ; &a }}, {{ NULL + [0..4294967295] ; &b }}
[eva] Recording results for main1
[eva] Done for function main1
[eva] computing for function main2 <- main.
  Called from backward_add_ptr.c:186.
[eva:alarm] backward_add_ptr.c:54: Warning: 
  out of bounds read. assert \valid_read((int *)((char *)p + (uintptr_t)q));
[eva] backward_add_ptr.c:55: Frama_C_show_each_int_if: {{ &a }}, {0}
[eva] backward_add_ptr.c:57: Frama_C_show_each_int_else: {0}, {{ &b }}
[eva:alarm] backward_add_ptr.c:60: Warning: 
  out of bounds read. assert \valid_read((char *)p + (uintptr_t)q);
[eva] backward_add_ptr.c:61: 
  Frama_C_show_each_char_if:
  {{ NULL + {1; 2; 3} ; &a }}, {{ NULL + {0; 1; 2; 3} ; &b }}
[eva] backward_add_ptr.c:63: Frama_C_show_each_char_else: {0}, {{ &b }}
[eva] Recording results for main2
[eva] Done for function main2
[eva] computing for function main3 <- main.
  Called from backward_add_ptr.c:187.
[eva] computing for function gm <- main3 <- main.
  Called from backward_add_ptr.c:75.
[eva] backward_add_ptr.c:68: 
  Assigning imprecise value to __retres.
  The imprecision originates from Arithmetic {backward_add_ptr.c:68}
[eva] backward_add_ptr.c:68: 
  Assigning imprecise value to \result<gm>.
  The imprecision originates from Arithmetic {backward_add_ptr.c:68}
[eva] Recording results for gm
[eva] Done for function gm
[eva] backward_add_ptr.c:75: 
  Assigning imprecise value to p.
  The imprecision originates from Arithmetic {backward_add_ptr.c:68}
[eva:alarm] backward_add_ptr.c:81: Warning: 
  out of bounds read. assert \valid_read(p + (uintptr_t)q);
[eva] backward_add_ptr.c:82: 
  Frama_C_show_each_GM_only_a:
  {{ &a + [-17179869180..0],0%4 }}, [0..4294967295]
[eva:alarm] backward_add_ptr.c:87: Warning: 
  out of bounds read. assert \valid_read((char *)p + (uintptr_t)q);
[eva] backward_add_ptr.c:88: 
  Frama_C_show_each_GM_reduce_p_offset:
  {{ NULL + {0; 1; 2; 3} ; &a + [-4294967295..3] }},
  {{ NULL + [0..4294967295] ; &b }}
[eva] backward_add_ptr.c:91: Reusing old results for call to gm
[eva] backward_add_ptr.c:91: 
  Assigning imprecise value to p.
  The imprecision originates from Arithmetic {backward_add_ptr.c:68}
[eva:alarm] backward_add_ptr.c:96: Warning: 
  out of bounds read. assert \valid_read(p + (uintptr_t)q);
[eva] computing for function gm <- main3 <- main.
  Called from backward_add_ptr.c:100.
[eva] Recording results for gm
[eva] Done for function gm
[eva] backward_add_ptr.c:100: 
  Assigning imprecise value to p.
  The imprecision originates from Arithmetic {backward_add_ptr.c:68}
[eva:alarm] backward_add_ptr.c:106: Warning: 
  out of bounds read. assert \valid_read(p + (uintptr_t)q);
[eva] backward_add_ptr.c:107: 
  Frama_C_show_each_GM_no_reduction:
  {{ garbled mix of &{a; b}
  (origin: Arithmetic {backward_add_ptr.c:68}) }},
  {{ NULL + [0..4294967295] ; &b }}
[eva] backward_add_ptr.c:110: Reusing old results for call to gm
[eva] backward_add_ptr.c:110: 
  Assigning imprecise value to p.
  The imprecision originates from Arithmetic {backward_add_ptr.c:68}
[eva:alarm] backward_add_ptr.c:115: Warning: 
  out of bounds read. assert \valid_read((char *)p + (uintptr_t)q);
[eva] backward_add_ptr.c:116: Frama_C_show_each_GM_only_c: {0}, {{ &c }}
[eva:alarm] backward_add_ptr.c:121: Warning: 
  out of bounds read. assert \valid_read(p + (uintptr_t)q);
[eva] backward_add_ptr.c:122: 
  Frama_C_show_each_GM_only_b:
  {{ &b + [-17179869180..0],0%4 }}, [0..4294967295]
[eva] backward_add_ptr.c:125: Reusing old results for call to gm
[eva] backward_add_ptr.c:125: 
  Assigning imprecise value to p.
  The imprecision originates from Arithmetic {backward_add_ptr.c:68}
[eva:alarm] backward_add_ptr.c:130: Warning: 
  out of bounds read. assert \valid_read((char *)p + (uintptr_t)q);
[eva:alarm] backward_add_ptr.c:136: Warning: 
  out of bounds read. assert \valid_read((char *)p + (uintptr_t)q);
[eva] backward_add_ptr.c:137: 
  Frama_C_show_each_GM_only_b_and_gm:
  {{ garbled mix of &{b}
  (origin: Arithmetic {backward_add_ptr.c:68}) }},
  {{ NULL + [0..4294967295] ; &b }}
[eva] Recording results for main3
[eva] Done for function main3
[eva] computing for function main4 <- main.
  Called from backward_add_ptr.c:188.
[eva] computing for function gm <- main4 <- main.
  Called from backward_add_ptr.c:145.
[eva] Recording results for gm
[eva] Done for function gm
[eva] backward_add_ptr.c:145: 
  Assigning imprecise value to tmp_0.
  The imprecision originates from Arithmetic {backward_add_ptr.c:68}
[eva] backward_add_ptr.c:145: 
  Assigning imprecise value to p.
  The imprecision originates from Arithmetic {backward_add_ptr.c:68}
[eva] computing for function gm <- main4 <- main.
  Called from backward_add_ptr.c:146.
[eva] Recording results for gm
[eva] Done for function gm
[eva] backward_add_ptr.c:146: 
  Assigning imprecise value to q.
  The imprecision originates from Arithmetic {backward_add_ptr.c:68}
[eva:alarm] backward_add_ptr.c:150: Warning: 
  out of bounds read. assert \valid_read(p + (uintptr_t)q);
[eva] backward_add_ptr.c:151: 
  Frama_C_show_each_2GM_no_reduction:
  {{ garbled mix of &{a; b}
  (origin: Arithmetic {backward_add_ptr.c:68}) }},
  {{ garbled mix of &{c}
  (origin: Arithmetic {backward_add_ptr.c:68}) }}
[eva:alarm] backward_add_ptr.c:156: Warning: 
  out of bounds read. assert \valid_read((char *)p + (uintptr_t)q);
[eva] backward_add_ptr.c:157: 
  Frama_C_show_each_2GM_only_b:
  {{ garbled mix of &{b}
  (origin: Arithmetic {backward_add_ptr.c:68}) }},
  [0..4294967295]
[eva] backward_add_ptr.c:160: Reusing old results for call to gm
[eva] backward_add_ptr.c:160: 
  Assigning imprecise value to p.
  The imprecision originates from Arithmetic {backward_add_ptr.c:68}
[eva] computing for function gm <- main4 <- main.
  Called from backward_add_ptr.c:161.
[eva] Recording results for gm
[eva] Done for function gm
[eva] backward_add_ptr.c:161: 
  Assigning imprecise value to q.
  The imprecision originates from Arithmetic {backward_add_ptr.c:68}
[eva:alarm] backward_add_ptr.c:165: Warning: 
  out of bounds read. assert \valid_read((char *)p + (uintptr_t)q);
[eva] backward_add_ptr.c:166: 
  Frama_C_show_each_2GM_TEST:
  {{ garbled mix of &{b}
  (origin: Arithmetic {backward_add_ptr.c:68}) }},
  {{ garbled mix of &{b}
  (origin: Arithmetic {backward_add_ptr.c:68}) }}
[eva:alarm] backward_add_ptr.c:171: Warning: 
  out of bounds read. assert \valid_read(p + (uintptr_t)q);
[eva] backward_add_ptr.c:172: 
  Frama_C_show_each_2GM_gm_of_a_b:
  {{ garbled mix of &{a; b}
  (origin: Arithmetic {backward_add_ptr.c:68}) }},
  {{ garbled mix of &{b}
  (origin: Arithmetic {backward_add_ptr.c:68}) }}
[eva:alarm] backward_add_ptr.c:177: Warning: 
  out of bounds read. assert \valid_read((char *)p + (uintptr_t)q);
[eva] backward_add_ptr.c:178: 
  Frama_C_show_each_2GM_gm_of_b_c:
  {{ garbled mix of &{b}
  (origin: Arithmetic {backward_add_ptr.c:68}) }},
  {{ garbled mix of &{b; c}
  (origin: Arithmetic {backward_add_ptr.c:68}) }}
[eva] Recording results for main4
[eva] Done for function main4
[eva] Recording results for main
[eva] done for function main
[eva:garbled-mix] Warning: 
  Garbled mix generated during analysis:
  {{ garbled mix of &{b} (origin: Arithmetic {backward_add_ptr.c:25}) }}
  {{ garbled mix of &{a} (origin: Arithmetic {backward_add_ptr.c:25}) }}
  {{ garbled mix of &{b} (origin: Arithmetic {backward_add_ptr.c:32}) }}
  {{ garbled mix of &{a} (origin: Arithmetic {backward_add_ptr.c:32}) }}
  {{ garbled mix of &{b} (origin: Arithmetic {backward_add_ptr.c:38}) }}
  {{ garbled mix of &{a} (origin: Arithmetic {backward_add_ptr.c:38}) }}
  {{ garbled mix of &{b} (origin: Arithmetic {backward_add_ptr.c:54}) }}
  {{ garbled mix of &{a} (origin: Arithmetic {backward_add_ptr.c:54}) }}
  {{ garbled mix of &{b} (origin: Arithmetic {backward_add_ptr.c:60}) }}
  {{ garbled mix of &{a} (origin: Arithmetic {backward_add_ptr.c:60}) }}
  {{ garbled mix of &{a} (origin: Arithmetic {backward_add_ptr.c:68}) }}
  {{ garbled mix of &{b} (origin: Arithmetic {backward_add_ptr.c:81}) }}
  {{ garbled mix of &{b} (origin: Arithmetic {backward_add_ptr.c:87}) }}
  {{ garbled mix of &{b} (origin: Arithmetic {backward_add_ptr.c:96}) }}
  {{ garbled mix of &{a; b} (origin: Arithmetic {backward_add_ptr.c:68}) }}
  {{ garbled mix of &{b} (origin: Arithmetic {backward_add_ptr.c:106}) }}
  {{ garbled mix of &{c} (origin: Arithmetic {backward_add_ptr.c:115}) }}
  {{ garbled mix of &{a; b} (origin: Arithmetic {backward_add_ptr.c:115}) }}
  {{ garbled mix of &{c} (origin: Arithmetic {backward_add_ptr.c:121}) }}
  {{ garbled mix of &{b} (origin: Arithmetic {backward_add_ptr.c:130}) }}
  {{ garbled mix of &{b} (origin: Arithmetic {backward_add_ptr.c:136}) }}
  {{ garbled mix of &{a; b} (origin: Arithmetic {backward_add_ptr.c:68}) }}
  {{ garbled mix of &{c} (origin: Arithmetic {backward_add_ptr.c:68}) }}
  {{ garbled mix of &{b; c} (origin: Arithmetic {backward_add_ptr.c:68}) }}
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function gm:
  __retres ∈
          {{ garbled mix of &{a; b; a; b; c}
           (origin: Arithmetic {backward_add_ptr.c:68}) }}
[eva:final-states] Values at end of function main1:
  a ∈ {0}
  b ∈ {1}
  p ∈ {{ NULL + [0..4294967295] ; &a }}
  q ∈ {{ NULL + [0..4294967295] ; &b }}
  v ∈ {0; 1} or UNINITIALIZED
  w ∈ {0; 1} or UNINITIALIZED
[eva:final-states] Values at end of function main2:
  a ∈ {0}
  b[bits 0 to 7] ∈ {1}
   [bits 8 to 31]# ∈ {1}%32, bits 8 to 31 
  p ∈ {{ NULL + [0..4294967295] ; &a }}
  q ∈ {{ NULL + [0..4294967295] ; &b }}
[eva:final-states] Values at end of function main3:
  a ∈ {0}
  b[bits 0 to 7] ∈ {1}
   [bits 8 to 31]# ∈ {1}%32, bits 8 to 31 
  c[bits 0 to 7] ∈ {2}
   [bits 8 to 31]# ∈ {2}%32, bits 8 to 31 
  p ∈
   {{ garbled mix of &{a; b} (origin: Arithmetic {backward_add_ptr.c:68}) }}
  q ∈ {{ NULL + [--..--] ; &b }}
  v ∈ {0; 1} or UNINITIALIZED
  w ∈ {0; 1} or UNINITIALIZED
[eva:final-states] Values at end of function main4:
  a ∈ {0}
  b[bits 0 to 7] ∈ {1}
   [bits 8 to 31]# ∈ {1}%32, bits 8 to 31 
  c[bits 0 to 7] ∈ {2}
   [bits 8 to 31]# ∈ {2}%32, bits 8 to 31 
  p ∈
   {{ garbled mix of &{a; b} (origin: Arithmetic {backward_add_ptr.c:68}) }}
  q ∈
   {{ garbled mix of &{b; c} (origin: Arithmetic {backward_add_ptr.c:68}) }}
  v ∈ {0; 1; 2} or UNINITIALIZED
[eva:final-states] Values at end of function main:
  __retres ∈ {0}
[from] Computing for function gm
[from] Done for function gm
[from] Computing for function main1
[from] Done for function main1
[from] Computing for function main2
[from] Done for function main2
[from] Computing for function main3
[from] Done for function main3
[from] Computing for function main4
[from] Done for function main4
[from] Computing for function main
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
  These dependencies hold at termination for the executions that terminate:
[from] Function gm:
  \result FROM p
[from] Function main1:
  NO EFFECTS
[from] Function main2:
  NO EFFECTS
[from] Function main3:
  NO EFFECTS
[from] Function main4:
  NO EFFECTS
[from] Function main:
  \result FROM \nothing
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function gm:
    __retres
[inout] Inputs for function gm:
    \nothing
[inout] Out (internal) for function main1:
    a; b; p; tmp; q; tmp_0; v; w
[inout] Inputs for function main1:
    rand
[inout] Out (internal) for function main2:
    a; b; p; tmp; q; tmp_0
[inout] Inputs for function main2:
    rand
[inout] Out (internal) for function main3:
    a; b; c; p; q; tmp_0; v; w; tmp_1; tmp_2; tmp_3
[inout] Inputs for function main3:
    rand
[inout] Out (internal) for function main4:
    a; b; c; p; tmp; tmp_0; q; v; tmp_2; tmp_3
[inout] Inputs for function main4:
    rand
[inout] Out (internal) for function main:
    __retres
[inout] Inputs for function main:
    rand
