[kernel] Parsing pointer_arg.i (no preprocessing)
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  v ∈ [--..--]
[eva:alarm] pointer_arg.i:4: Warning: 
  out of bounds write. assert \valid(arg + 0);
[eva:alarm] pointer_arg.i:5: Warning: 
  out of bounds write. assert \valid(arg + 1);
[eva:alarm] pointer_arg.i:6: Warning: 
  out of bounds write. assert \valid(arg + 2);
[kernel] pointer_arg.i:6: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva:alarm] pointer_arg.i:7: Warning: 
  out of bounds write. assert \valid(arg + 1000);
[kernel] pointer_arg.i:7: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva:alarm] pointer_arg.i:8: Warning: 
  out of bounds write. assert \valid(arg + argc);
[eva:alarm] pointer_arg.i:11: Warning: 
  out of bounds write. assert \valid(argv + 1);
[eva:alarm] pointer_arg.i:15: Warning: 
  out of bounds read. assert \valid_read(argv + 0);
[eva:alarm] pointer_arg.i:15: Warning: 
  out of bounds write. assert \valid(*(argv + 0) + 0);
[eva] Recording results for main
[eva] done for function main
[eva] pointer_arg.i:6: assertion 'Eva,mem_access' got final status invalid.
[eva] pointer_arg.i:7: assertion 'Eva,mem_access' got final status invalid.
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function main:
  __retres ∈ {0}
  S_argv[0] ∈ {{ &S_0_S_argv[0] }}
        [1] ∈ {{ NULL ; &S_1_S_argv[0] ; "5069" }}
  S_0_S_argv[0] ∈ {48}
            [1] ∈ [--..--]
  S_arg[0] ∈ {0; 4}
       [1] ∈ {1; 4}
[from] Computing for function main
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
  These dependencies hold at termination for the executions that terminate:
[from] Function main:
  S_argv[0..1] FROM v; argv (and SELF)
  S_0_S_argv[0] FROM v; argv; S_argv[0]
  S_arg[0..1] FROM arg; argc
  \result FROM \nothing
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function main:
    __retres; S_argv[0..1]; S_0_S_argv[0]; S_arg[0..1]
[inout] Inputs for function main:
    v; S_argv[0]
