[kernel] Parsing context_width.i (no preprocessing)
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  a ∈ {0}
[eva:alarm] context_width.i:10: Warning: 
  pointer comparison. assert \pointer_comparable((void *)(p + 2), (void *)0);
[eva:alarm] context_width.i:12: Warning: 
  pointer comparison.
  assert \pointer_comparable((void *)(p + 1), (void *)(&a));
[eva:alarm] context_width.i:15: Warning: 
  out of bounds write. assert \valid(p + 1);
[eva:alarm] context_width.i:16: Warning: 
  out of bounds write. assert \valid(p + 2);
[eva:alarm] context_width.i:17: Warning: 
  assertion got status invalid (stopping propagation).
[eva] Recording results for main
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function main:
  S_p[0] ∈ {1}
     [1] ∈ {2}
     [2] ∈ {3}
[from] Computing for function main
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
  These dependencies hold at termination for the executions that terminate:
[from] Function main:
  S_p[0..2] FROM p (and SELF)
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function main:
    S_p[0..2]
[inout] Inputs for function main:
    \nothing
/* Generated by Frama-C */
int a;
void main(int *p)
{
  if (! (p == (int *)0)) {
    if (! (p + 1 == (int *)0)) 
      /*@ assert
          Eva: ptr_comparison:
            \pointer_comparable((void *)(p + 2), (void *)0);
      */
      if (! (p + 2 == (int *)0)) ;
    /*@ assert
        Eva: ptr_comparison:
          \pointer_comparable((void *)(p + 1), (void *)(&a));
    */
    if (p + 1 == & a) ;
    *p = 1;
    /*@ assert Eva: mem_access: \valid(p + 1); */
    *(p + 1) = 2;
    /*@ assert Eva: mem_access: \valid(p + 2); */
    *(p + 2) = 3;
  }
  else 
    /*@ assert \false; */ ;
  return;
}


[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  a ∈ {0}
[eva:alarm] context_width.i:10: Warning: 
  pointer comparison. assert \pointer_comparable((void *)(p + 2), (void *)0);
[eva:alarm] context_width.i:12: Warning: 
  pointer comparison.
  assert \pointer_comparable((void *)(p + 1), (void *)(&a));
[eva:alarm] context_width.i:15: Warning: 
  out of bounds write. assert \valid(p + 1);
[kernel] context_width.i:15: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] Recording results for main
[eva] done for function main
[eva] context_width.i:15: assertion 'Eva,mem_access' got final status invalid.
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[from] Computing for function main
[from] Non-terminating function main (no dependencies)
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
  These dependencies hold at termination for the executions that terminate:
[from] Function main:
  NON TERMINATING - NO EFFECTS
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function main:
    S_p_0[0]
[inout] Inputs for function main:
    \nothing
/* Generated by Frama-C */
int a;
void main(int *p)
{
  if (! (p == (int *)0)) {
    if (! (p + 1 == (int *)0)) 
      /*@ assert
          Eva: ptr_comparison:
            \pointer_comparable((void *)(p + 2), (void *)0);
      */
      if (! (p + 2 == (int *)0)) ;
    /*@ assert
        Eva: ptr_comparison:
          \pointer_comparable((void *)(p + 1), (void *)(&a));
    */
    if (p + 1 == & a) ;
    *p = 1;
    /*@ assert Eva: mem_access: \valid(p + 1); */
    *(p + 1) = 2;
    *(p + 2) = 3;
  }
  else 
    /*@ assert \false; */ ;
  return;
}


