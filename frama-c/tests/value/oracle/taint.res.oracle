[kernel] Parsing taint.c (with preprocessing)
[eva:experimental] Warning: The taint domain is experimental.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  undet ∈ [--..--]
  tainted ∈ {0}
[eva] computing for function taints <- main.
  Called from taint.c:175.
[eva] computing for function Frama_C_interval <- taints <- main.
  Called from taint.c:170.
[eva] using specification for function Frama_C_interval
[eva] taint.c:170: 
  function Frama_C_interval: precondition 'order' got status valid.
[eva] Done for function Frama_C_interval
[eva] Recording results for taints
[eva] Done for function taints
[eva] computing for function taint_basic <- main.
  Called from taint.c:176.
[eva:alarm] taint.c:33: Warning: accessing out of bounds index. assert t < 2;
[eva] taint.c:35: 
  Frama_C_dump_each:
  # taint:
  Locations (data):
    tainted; t; u; x
  Locations (control):
    w; buf[0..1]
  ==END OF DUMP==
[eva] Recording results for taint_basic
[eva] Done for function taint_basic
[eva] computing for function taint_assume_1 <- main.
  Called from taint.c:179.
[eva:loop-unroll:auto] taint.c:49: Automatic loop unrolling.
[eva] taint.c:50: 
  Frama_C_dump_each:
  # taint:
  Locations (data):
    \nothing
  Locations (control):
    \nothing
  ==END OF DUMP==
[eva] taint.c:53: 
  Frama_C_dump_each:
  # taint:
  Locations (data):
    \nothing
  Locations (control):
    \nothing
  ==END OF DUMP==
[eva] taint.c:50: 
  Frama_C_dump_each:
  # taint:
  Locations (data):
    x
  Locations (control):
    \nothing
  ==END OF DUMP==
[eva] taint.c:53: 
  Frama_C_dump_each:
  # taint:
  Locations (data):
    x
  Locations (control):
    y
  ==END OF DUMP==
[eva] taint.c:50: 
  Frama_C_dump_each:
  # taint:
  Locations (data):
    x
  Locations (control):
    x; y
  ==END OF DUMP==
[eva] taint.c:53: 
  Frama_C_dump_each:
  # taint:
  Locations (data):
    x
  Locations (control):
    x; y
  ==END OF DUMP==
[eva] taint.c:63: 
  Frama_C_dump_each:
  # taint:
  Locations (data):
    x
  Locations (control):
    x; y
  ==END OF DUMP==
[eva] Recording results for taint_assume_1
[eva] Done for function taint_assume_1
[eva] computing for function taint_assume_2 <- main.
  Called from taint.c:180.
[eva] taint.c:79: 
  Frama_C_dump_each:
  # taint:
  Locations (data):
    x
  Locations (control):
    x; y
  ==END OF DUMP==
[eva] Recording results for taint_assume_2
[eva] Done for function taint_assume_2
[eva] computing for function taint_undet_locs <- main.
  Called from taint.c:182.
[eva] taint.c:91: 
  Frama_C_dump_each:
  # taint:
  Locations (data):
    x; y; t
  Locations (control):
    \nothing
  ==END OF DUMP==
[eva] Recording results for taint_undet_locs
[eva] Done for function taint_undet_locs
[eva] taint.c:185: Reusing old results for call to taints
[eva] computing for function taint_spec_assigns <- main.
  Called from taint.c:186.
[eva] using specification for function taint_spec_assigns
[eva] Done for function taint_spec_assigns
[eva] taint.c:188: 
  Frama_C_domain_show_each:
  l : # taint: true
[eva] computing for function taint_goto_1 <- main.
  Called from taint.c:191.
[eva] taint.c:110: 
  Frama_C_dump_each:
  # taint:
  Locations (data):
    t
  Locations (control):
    x
  ==END OF DUMP==
[eva] Recording results for taint_goto_1
[eva] Done for function taint_goto_1
[eva] computing for function taint_goto_2 <- main.
  Called from taint.c:192.
[eva] taint.c:130: 
  Frama_C_dump_each:
  # taint:
  Locations (data):
    t
  Locations (control):
    x; y
  ==END OF DUMP==
[eva] Recording results for taint_goto_2
[eva] Done for function taint_goto_2
[eva] taint.c:194: Reusing old results for call to taints
[eva] computing for function taint_call <- main.
  Called from taint.c:195.
[eva] computing for function taint_basic <- taint_call <- main.
  Called from taint.c:138.
[eva] taint.c:35: 
  Frama_C_dump_each:
  # taint:
  Locations (data):
    tainted; t; u; x; t
  Locations (control):
    t; u; w; x; y; buf[0..1]
  ==END OF DUMP==
[eva] Recording results for taint_basic
[eva] Done for function taint_basic
[eva] taint.c:141: 
  Frama_C_domain_show_each:
  x : # taint: false
[eva] Recording results for taint_call
[eva] Done for function taint_call
[eva] taint.c:197: Reusing old results for call to taints
[eva] computing for function taint_infinite_while <- main.
  Called from taint.c:198.
[eva:loop-unroll:auto] taint.c:157: Automatic loop unrolling.
[eva:loop-unroll:partial] taint.c:157: loop not completely unrolled
[eva] taint.c:157: starting to merge loop iterations
[eva:alarm] taint.c:157: Warning: signed overflow. assert i + 1 ≤ 2147483647;
[eva] taint.c:165: 
  Frama_C_dump_each:
  # taint:
  Locations (data):
    tainted; t; y
  Locations (control):
    w
  ==END OF DUMP==
[eva] Recording results for taint_infinite_while
[eva] Done for function taint_infinite_while
[eva] Recording results for main
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function taint_assume_1:
  x ∈ {3}
  y ∈ {6}
  z ∈ {1}
[eva:final-states] Values at end of function taint_assume_2:
  x ∈ {11}
  y ∈ {10}
[eva:final-states] Values at end of function taint_basic:
  u ∈ [0..10]
  w ∈ {1; 2}
  x ∈ [1..11]
  y ∈ {0}
  buf[0] ∈ {0; 2}
     [1] ∈ {1; 2}
[eva:final-states] Values at end of function taint_call:
  x ∈ {0}
[eva:final-states] Values at end of function taint_goto_1:
  x ∈ {1} or UNINITIALIZED
  y ∈ {0}
  z ∈ {1}
  t ∈ [--..--]
[eva:final-states] Values at end of function taint_goto_2:
  x ∈ [--..--]
  y ∈ {0} or UNINITIALIZED
  z ∈ {1} or UNINITIALIZED
  t ∈ [--..--]
[eva:final-states] Values at end of function taint_infinite_while:
  i ∈ UNINITIALIZED
  w ∈ {3}
  x ∈ {2}
  y ∈ [2..11]
[eva:final-states] Values at end of function taint_undet_locs:
  x ∈ {0}
  y ∈ {0}
  t ∈ {0}
  p ∈ {{ &x ; &y }}
[eva:final-states] Values at end of function taints:
  Frama_C_entropy_source ∈ [--..--]
  tainted ∈ [0..10]
[eva:final-states] Values at end of function main:
  Frama_C_entropy_source ∈ [--..--]
  tainted ∈ {2; 4; 6; 8; 10}
  l ∈ {0}
  __retres ∈ {0}
[from] Computing for function taint_assume_1
[from] Done for function taint_assume_1
[from] Computing for function taint_assume_2
[from] Done for function taint_assume_2
[from] Computing for function taint_basic
[from] Done for function taint_basic
[from] Computing for function taint_call
[from] Done for function taint_call
[from] Computing for function taint_goto_1
[from] Done for function taint_goto_1
[from] Computing for function taint_goto_2
[from] Done for function taint_goto_2
[from] Computing for function taint_infinite_while
[from] Done for function taint_infinite_while
[from] Computing for function taint_undet_locs
[from] Done for function taint_undet_locs
[from] Computing for function taints
[from] Computing for function Frama_C_interval <-taints
[from] Done for function Frama_C_interval
[from] Done for function taints
[from] Computing for function main
[from] Computing for function taint_spec_assigns <-main
[from] Done for function taint_spec_assigns
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
  These dependencies hold at termination for the executions that terminate:
[from] Function Frama_C_interval:
  Frama_C_entropy_source FROM Frama_C_entropy_source (and SELF)
  \result FROM Frama_C_entropy_source; min; max
[from] Function taint_assume_1:
  NO EFFECTS
[from] Function taint_assume_2:
  NO EFFECTS
[from] Function taint_basic:
  NO EFFECTS
[from] Function taint_call:
  NO EFFECTS
[from] Function taint_goto_1:
  NO EFFECTS
[from] Function taint_goto_2:
  NO EFFECTS
[from] Function taint_infinite_while:
  NO EFFECTS
[from] Function taint_spec_assigns:
  l FROM t
[from] Function taint_undet_locs:
  NO EFFECTS
[from] Function taints:
  Frama_C_entropy_source FROM Frama_C_entropy_source (and SELF)
  tainted FROM Frama_C_entropy_source
[from] Function main:
  Frama_C_entropy_source FROM Frama_C_entropy_source (and SELF)
  tainted FROM Frama_C_entropy_source
  \result FROM \nothing
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function taint_assume_1:
    x; y; z
[inout] Inputs for function taint_assume_1:
    \nothing
[inout] Out (internal) for function taint_assume_2:
    x; y
[inout] Inputs for function taint_assume_2:
    \nothing
[inout] Out (internal) for function taint_basic:
    u; w; x; y; buf[0..1]
[inout] Inputs for function taint_basic:
    undet
[inout] Out (internal) for function taint_call:
    x
[inout] Inputs for function taint_call:
    undet
[inout] Out (internal) for function taint_goto_1:
    x; y; z; t
[inout] Inputs for function taint_goto_1:
    undet
[inout] Out (internal) for function taint_goto_2:
    x; y; z; t
[inout] Inputs for function taint_goto_2:
    undet
[inout] Out (internal) for function taint_infinite_while:
    i; w; x; y
[inout] Inputs for function taint_infinite_while:
    \nothing
[inout] Out (internal) for function taint_undet_locs:
    x; y; t; p; tmp
[inout] Inputs for function taint_undet_locs:
    undet
[inout] Out (internal) for function taints:
    Frama_C_entropy_source; tainted
[inout] Inputs for function taints:
    Frama_C_entropy_source
[inout] Out (internal) for function main:
    Frama_C_entropy_source; tainted; l; __retres
[inout] Inputs for function main:
    Frama_C_entropy_source; undet; tainted
