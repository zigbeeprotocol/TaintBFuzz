[kernel] Parsing string_c.c (with preprocessing)
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  v âˆˆ [--..--]
[eva] computing for function test_memcpy <- main.
  Called from string_c.c:294.
[eva] computing for function memcpy <- test_memcpy <- main.
  Called from string_c.c:10.
[eva] string_c.c:10: 
  function memcpy: precondition 'valid_dest' got status valid.
[eva] string_c.c:10: function memcpy: precondition 'valid_src' got status valid.
[eva] string_c.c:10: 
  function memcpy: precondition 'separation' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva:alarm] FRAMAC_SHARE/libc/string.h:101: Warning: 
  function memcpy: postcondition 'copied_contents' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:102: 
  function memcpy: postcondition 'result_ptr' got status valid.
[eva] Recording results for memcpy
[eva] Done for function memcpy
[eva] string_c.c:11: assertion got status valid.
[eva] string_c.c:12: assertion got status valid.
[eva] string_c.c:13: assertion got status valid.
[eva] string_c.c:14: assertion got status valid.
[eva] computing for function memcpy <- test_memcpy <- main.
  Called from string_c.c:16.
[eva] string_c.c:16: 
  function memcpy: precondition 'valid_dest' got status valid.
[eva] string_c.c:16: function memcpy: precondition 'valid_src' got status valid.
[eva] string_c.c:16: 
  function memcpy: precondition 'separation' got status valid.
[eva] Recording results for memcpy
[eva] Done for function memcpy
[eva] string_c.c:17: assertion got status valid.
[eva] string_c.c:18: assertion got status valid.
[eva] computing for function memcpy <- test_memcpy <- main.
  Called from string_c.c:19.
[eva] string_c.c:19: 
  function memcpy: precondition 'valid_dest' got status valid.
[eva:alarm] string_c.c:19: Warning: 
  function memcpy: precondition 'valid_src' got status unknown.
[eva] string_c.c:19: 
  function memcpy: precondition 'separation' got status valid.
[eva] Recording results for memcpy
[eva] Done for function memcpy
[eva] computing for function memcpy <- test_memcpy <- main.
  Called from string_c.c:20.
[eva:alarm] string_c.c:20: Warning: 
  function memcpy: precondition 'valid_dest' got status unknown.
[eva:alarm] string_c.c:20: Warning: 
  function memcpy: precondition 'valid_src' got status unknown.
[eva] string_c.c:20: 
  function memcpy: precondition 'separation' got status valid.
[eva] Recording results for memcpy
[eva] Done for function memcpy
[eva] computing for function memcpy <- test_memcpy <- main.
  Called from string_c.c:23.
[eva] string_c.c:23: 
  function memcpy: precondition 'valid_dest' got status valid.
[eva] string_c.c:23: function memcpy: precondition 'valid_src' got status valid.
[eva] string_c.c:23: 
  function memcpy: precondition 'separation' got status valid.
[eva] Recording results for memcpy
[eva] Done for function memcpy
[eva] string_c.c:23: Reusing old results for call to memcpy
[eva] string_c.c:24: assertion got status valid.
[eva] string_c.c:25: assertion got status valid.
[eva] Recording results for test_memcpy
[eva] Done for function test_memcpy
[eva] computing for function test_memmove <- main.
  Called from string_c.c:295.
[eva] string_c.c:34: Frama_C_show_each_s0: {1}
[eva] string_c.c:35: Frama_C_show_each_s0: {2}
[eva] string_c.c:36: Frama_C_show_each_s0: {3}
[eva] string_c.c:37: Frama_C_show_each_s0: {4}
[eva] string_c.c:38: Frama_C_show_each_s0: {3}
[eva] string_c.c:39: Frama_C_show_each_s0: {4}
[eva] string_c.c:40: Frama_C_show_each_s0: {5}
[eva] string_c.c:41: Frama_C_show_each_s0: {6}
[eva] computing for function memmove <- test_memmove <- main.
  Called from string_c.c:42.
[eva] string_c.c:42: 
  function memmove: precondition 'valid_dest' got status valid.
[eva] string_c.c:42: 
  function memmove: precondition 'valid_src' got status valid.
[eva] computing for function memoverlap <- memmove <- test_memmove <- main.
  Called from FRAMAC_SHARE/libc/string.c:93.
[eva] FRAMAC_SHARE/libc/string.c:75: 
  function memoverlap, behavior not_separated_gt: postcondition 'result_p_after_q' got status valid.
[eva] Recording results for memoverlap
[eva] Done for function memoverlap
[eva] FRAMAC_SHARE/libc/string.h:124: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva:alarm] FRAMAC_SHARE/libc/string.h:124: Warning: 
  function memmove: postcondition 'copied_contents' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:125: 
  function memmove: postcondition 'result_ptr' got status valid.
[eva] Recording results for memmove
[eva] Done for function memmove
[eva] string_c.c:43: assertion got status valid.
[eva] string_c.c:44: assertion got status valid.
[eva] computing for function memmove <- test_memmove <- main.
  Called from string_c.c:49.
[eva] string_c.c:49: 
  function memmove: precondition 'valid_dest' got status valid.
[eva] string_c.c:49: 
  function memmove: precondition 'valid_src' got status valid.
[eva] computing for function memoverlap <- memmove <- test_memmove <- main.
  Called from FRAMAC_SHARE/libc/string.c:93.
[eva] FRAMAC_SHARE/libc/string.c:71: 
  function memoverlap, behavior not_separated_lt: postcondition 'result_p_before_q' got status valid.
[eva] Recording results for memoverlap
[eva] Done for function memoverlap
[eva] Recording results for memmove
[eva] Done for function memmove
[eva] string_c.c:50: assertion got status valid.
[eva] computing for function memmove <- test_memmove <- main.
  Called from string_c.c:52.
[eva] string_c.c:52: 
  function memmove: precondition 'valid_dest' got status valid.
[eva] string_c.c:52: 
  function memmove: precondition 'valid_src' got status valid.
[eva] computing for function memoverlap <- memmove <- test_memmove <- main.
  Called from FRAMAC_SHARE/libc/string.c:93.
[eva] Recording results for memoverlap
[eva] Done for function memoverlap
[eva] Recording results for memmove
[eva] Done for function memmove
[eva] string_c.c:53: assertion got status valid.
[eva] computing for function memmove <- test_memmove <- main.
  Called from string_c.c:56.
[eva] string_c.c:56: 
  function memmove: precondition 'valid_dest' got status valid.
[eva] string_c.c:56: 
  function memmove: precondition 'valid_src' got status valid.
[eva] computing for function memoverlap <- memmove <- test_memmove <- main.
  Called from FRAMAC_SHARE/libc/string.c:93.
[eva] FRAMAC_SHARE/libc/string.c:67: 
  function memoverlap, behavior separated: postcondition 'result_no_overlap' got status valid.
[eva] Recording results for memoverlap
[eva] Done for function memoverlap
[eva] Recording results for memmove
[eva] Done for function memmove
[eva] string_c.c:57: assertion got status valid.
[eva] Recording results for test_memmove
[eva] Done for function test_memmove
[eva] computing for function test_strlen <- main.
  Called from string_c.c:296.
[eva] computing for function strlen <- test_strlen <- main.
  Called from string_c.c:64.
[eva] string_c.c:64: 
  function strlen: precondition 'valid_string_s' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:143: 
  function strlen: postcondition 'acsl_c_equiv' got status valid.
[eva] Recording results for strlen
[eva] Done for function strlen
[eva] string_c.c:65: assertion got status valid.
[eva] computing for function strlen <- test_strlen <- main.
  Called from string_c.c:66.
[eva] string_c.c:66: 
  function strlen: precondition 'valid_string_s' got status valid.
[eva] Recording results for strlen
[eva] Done for function strlen
[eva] string_c.c:67: assertion got status valid.
[eva] computing for function strlen <- test_strlen <- main.
  Called from string_c.c:68.
[eva] string_c.c:68: 
  function strlen: precondition 'valid_string_s' got status valid.
[eva] Recording results for strlen
[eva] Done for function strlen
[eva] string_c.c:69: assertion got status valid.
[eva] Recording results for test_strlen
[eva] Done for function test_strlen
[eva] computing for function test_strnlen <- main.
  Called from string_c.c:297.
[eva] computing for function strnlen <- test_strnlen <- main.
  Called from string_c.c:75.
[eva] string_c.c:75: 
  function strnlen: precondition 'valid_string_s' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:149: 
  function strnlen: postcondition 'result_bounded' got status valid.
[eva] Recording results for strnlen
[eva] Done for function strnlen
[eva] string_c.c:76: assertion got status valid.
[eva] computing for function strnlen <- test_strnlen <- main.
  Called from string_c.c:77.
[eva] string_c.c:77: 
  function strnlen: precondition 'valid_string_s' got status valid.
[eva] Recording results for strnlen
[eva] Done for function strnlen
[eva] string_c.c:78: assertion got status valid.
[eva] computing for function strnlen <- test_strnlen <- main.
  Called from string_c.c:79.
[eva] string_c.c:79: 
  function strnlen: precondition 'valid_string_s' got status valid.
[eva] Recording results for strnlen
[eva] Done for function strnlen
[eva] string_c.c:80: assertion got status valid.
[eva] computing for function strnlen <- test_strnlen <- main.
  Called from string_c.c:81.
[eva] string_c.c:81: 
  function strnlen: precondition 'valid_string_s' got status valid.
[eva] Recording results for strnlen
[eva] Done for function strnlen
[eva] string_c.c:82: assertion got status valid.
[eva] computing for function strnlen <- test_strnlen <- main.
  Called from string_c.c:83.
[eva] string_c.c:83: 
  function strnlen: precondition 'valid_string_s' got status valid.
[eva] Recording results for strnlen
[eva] Done for function strnlen
[eva] string_c.c:84: assertion got status valid.
[eva] computing for function strnlen <- test_strnlen <- main.
  Called from string_c.c:85.
[eva] string_c.c:85: 
  function strnlen: precondition 'valid_string_s' got status valid.
[eva] Recording results for strnlen
[eva] Done for function strnlen
[eva] string_c.c:86: assertion got status valid.
[eva] Recording results for test_strnlen
[eva] Done for function test_strnlen
[eva] computing for function test_memset <- main.
  Called from string_c.c:298.
[eva] computing for function memset <- test_memset <- main.
  Called from string_c.c:92.
[eva] string_c.c:92: function memset: precondition 'valid_s' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva:alarm] FRAMAC_SHARE/libc/string.h:134: Warning: 
  function memset: postcondition 'acsl_c_equiv' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:135: 
  function memset: postcondition 'result_ptr' got status valid.
[eva] Recording results for memset
[eva] Done for function memset
[eva] string_c.c:93: assertion got status valid.
[eva] string_c.c:94: assertion got status valid.
[eva] string_c.c:95: assertion got status valid.
[eva] computing for function memset <- test_memset <- main.
  Called from string_c.c:96.
[eva] string_c.c:96: function memset: precondition 'valid_s' got status valid.
[eva] Recording results for memset
[eva] Done for function memset
[eva] string_c.c:97: assertion got status valid.
[eva] Recording results for test_memset
[eva] Done for function test_memset
[eva] computing for function test_strcmp <- main.
  Called from string_c.c:299.
[eva] computing for function strcmp <- test_strcmp <- main.
  Called from string_c.c:104.
[eva] string_c.c:104: 
  function strcmp: precondition 'valid_string_s1' got status valid.
[eva] string_c.c:104: 
  function strcmp: precondition 'valid_string_s2' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva:alarm] FRAMAC_SHARE/libc/string.h:156: Warning: 
  function strcmp: postcondition 'acsl_c_equiv' got status unknown.
[eva] Recording results for strcmp
[eva] Done for function strcmp
[eva] string_c.c:105: assertion got status valid.
[eva] computing for function strcmp <- test_strcmp <- main.
  Called from string_c.c:106.
[eva] string_c.c:106: 
  function strcmp: precondition 'valid_string_s1' got status valid.
[eva] string_c.c:106: 
  function strcmp: precondition 'valid_string_s2' got status valid.
[eva] Recording results for strcmp
[eva] Done for function strcmp
[eva] string_c.c:107: assertion got status valid.
[eva] computing for function strcmp <- test_strcmp <- main.
  Called from string_c.c:108.
[eva] string_c.c:108: 
  function strcmp: precondition 'valid_string_s1' got status valid.
[eva] string_c.c:108: 
  function strcmp: precondition 'valid_string_s2' got status valid.
[eva] Recording results for strcmp
[eva] Done for function strcmp
[eva] string_c.c:109: assertion got status valid.
[eva] computing for function strcmp <- test_strcmp <- main.
  Called from string_c.c:110.
[eva] string_c.c:110: 
  function strcmp: precondition 'valid_string_s1' got status valid.
[eva] string_c.c:110: 
  function strcmp: precondition 'valid_string_s2' got status valid.
[eva] Recording results for strcmp
[eva] Done for function strcmp
[eva] string_c.c:111: assertion got status valid.
[eva] computing for function strcmp <- test_strcmp <- main.
  Called from string_c.c:112.
[eva] string_c.c:112: 
  function strcmp: precondition 'valid_string_s1' got status valid.
[eva] string_c.c:112: 
  function strcmp: precondition 'valid_string_s2' got status valid.
[eva] Recording results for strcmp
[eva] Done for function strcmp
[eva] string_c.c:113: assertion got status valid.
[eva] computing for function strcmp <- test_strcmp <- main.
  Called from string_c.c:114.
[eva] string_c.c:114: 
  function strcmp: precondition 'valid_string_s1' got status valid.
[eva] string_c.c:114: 
  function strcmp: precondition 'valid_string_s2' got status valid.
[eva] Recording results for strcmp
[eva] Done for function strcmp
[eva] string_c.c:115: assertion got status valid.
[eva] computing for function strcmp <- test_strcmp <- main.
  Called from string_c.c:116.
[eva] string_c.c:116: 
  function strcmp: precondition 'valid_string_s1' got status valid.
[eva] string_c.c:116: 
  function strcmp: precondition 'valid_string_s2' got status valid.
[eva] Recording results for strcmp
[eva] Done for function strcmp
[eva] string_c.c:117: assertion got status valid.
[eva] Recording results for test_strcmp
[eva] Done for function test_strcmp
[eva] computing for function test_strncmp <- main.
  Called from string_c.c:300.
[eva] computing for function strncmp <- test_strncmp <- main.
  Called from string_c.c:167.
[eva] string_c.c:167: 
  function strncmp: precondition 'valid_string_s1' got status valid.
[eva] string_c.c:167: 
  function strncmp: precondition 'valid_string_s2' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva:alarm] FRAMAC_SHARE/libc/string.h:163: Warning: 
  function strncmp: postcondition 'acsl_c_equiv' got status unknown.
[eva] Recording results for strncmp
[eva] Done for function strncmp
[eva] string_c.c:168: assertion got status valid.
[eva] computing for function strncmp <- test_strncmp <- main.
  Called from string_c.c:169.
[eva] string_c.c:169: 
  function strncmp: precondition 'valid_string_s1' got status valid.
[eva] string_c.c:169: 
  function strncmp: precondition 'valid_string_s2' got status valid.
[eva] Recording results for strncmp
[eva] Done for function strncmp
[eva] string_c.c:170: assertion got status valid.
[eva] computing for function strncmp <- test_strncmp <- main.
  Called from string_c.c:172.
[eva] string_c.c:172: 
  function strncmp: precondition 'valid_string_s1' got status valid.
[eva] string_c.c:172: 
  function strncmp: precondition 'valid_string_s2' got status valid.
[eva] Recording results for strncmp
[eva] Done for function strncmp
[eva] string_c.c:173: assertion got status valid.
[eva] computing for function strncmp <- test_strncmp <- main.
  Called from string_c.c:174.
[eva] string_c.c:174: 
  function strncmp: precondition 'valid_string_s1' got status valid.
[eva] string_c.c:174: 
  function strncmp: precondition 'valid_string_s2' got status valid.
[eva] Recording results for strncmp
[eva] Done for function strncmp
[eva] string_c.c:175: assertion got status valid.
[eva] computing for function strncmp <- test_strncmp <- main.
  Called from string_c.c:176.
[eva] string_c.c:176: 
  function strncmp: precondition 'valid_string_s1' got status valid.
[eva] string_c.c:176: 
  function strncmp: precondition 'valid_string_s2' got status valid.
[eva] Recording results for strncmp
[eva] Done for function strncmp
[eva] string_c.c:177: assertion got status valid.
[eva] computing for function strncmp <- test_strncmp <- main.
  Called from string_c.c:178.
[eva] string_c.c:178: 
  function strncmp: precondition 'valid_string_s1' got status valid.
[eva] string_c.c:178: 
  function strncmp: precondition 'valid_string_s2' got status valid.
[eva] Recording results for strncmp
[eva] Done for function strncmp
[eva] string_c.c:179: assertion got status valid.
[eva] computing for function strncmp <- test_strncmp <- main.
  Called from string_c.c:180.
[eva] string_c.c:180: 
  function strncmp: precondition 'valid_string_s1' got status valid.
[eva] string_c.c:180: 
  function strncmp: precondition 'valid_string_s2' got status valid.
[eva] Recording results for strncmp
[eva] Done for function strncmp
[eva] string_c.c:181: assertion got status valid.
[eva] computing for function strncmp <- test_strncmp <- main.
  Called from string_c.c:182.
[eva] string_c.c:182: 
  function strncmp: precondition 'valid_string_s1' got status valid.
[eva] string_c.c:182: 
  function strncmp: precondition 'valid_string_s2' got status valid.
[eva] Recording results for strncmp
[eva] Done for function strncmp
[eva] string_c.c:183: assertion got status valid.
[eva] Recording results for test_strncmp
[eva] Done for function test_strncmp
[eva] computing for function test_memcmp <- main.
  Called from string_c.c:301.
[eva] computing for function memcmp <- test_memcmp <- main.
  Called from string_c.c:188.
[eva] string_c.c:188: function memcmp: precondition 'valid_s1' got status valid.
[eva] string_c.c:188: function memcmp: precondition 'valid_s2' got status valid.
[eva] string_c.c:188: 
  function memcmp: precondition 'initialization,s1' got status valid.
[eva] string_c.c:188: 
  function memcmp: precondition 'initialization,s2' got status valid.
[eva] string_c.c:188: 
  function memcmp: precondition 'danglingness,s1' got status valid.
[eva] string_c.c:188: 
  function memcmp: precondition 'danglingness,s2' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva:alarm] FRAMAC_SHARE/libc/string.h:63: Warning: 
  function memcmp: postcondition 'logic_spec' got status unknown.
[eva] Recording results for memcmp
[eva] Done for function memcmp
[eva] string_c.c:189: assertion got status valid.
[eva] computing for function memcmp <- test_memcmp <- main.
  Called from string_c.c:190.
[eva] string_c.c:190: function memcmp: precondition 'valid_s1' got status valid.
[eva] string_c.c:190: function memcmp: precondition 'valid_s2' got status valid.
[eva] string_c.c:190: 
  function memcmp: precondition 'initialization,s1' got status valid.
[eva] string_c.c:190: 
  function memcmp: precondition 'initialization,s2' got status valid.
[eva] string_c.c:190: 
  function memcmp: precondition 'danglingness,s1' got status valid.
[eva] string_c.c:190: 
  function memcmp: precondition 'danglingness,s2' got status valid.
[eva] Recording results for memcmp
[eva] Done for function memcmp
[eva] string_c.c:191: assertion got status valid.
[eva] computing for function memcmp <- test_memcmp <- main.
  Called from string_c.c:192.
[eva] string_c.c:192: function memcmp: precondition 'valid_s1' got status valid.
[eva] string_c.c:192: function memcmp: precondition 'valid_s2' got status valid.
[eva] string_c.c:192: 
  function memcmp: precondition 'initialization,s1' got status valid.
[eva] string_c.c:192: 
  function memcmp: precondition 'initialization,s2' got status valid.
[eva] string_c.c:192: 
  function memcmp: precondition 'danglingness,s1' got status valid.
[eva] string_c.c:192: 
  function memcmp: precondition 'danglingness,s2' got status valid.
[eva] Recording results for memcmp
[eva] Done for function memcmp
[eva] string_c.c:193: assertion got status valid.
[eva] computing for function memcmp <- test_memcmp <- main.
  Called from string_c.c:194.
[eva] string_c.c:194: function memcmp: precondition 'valid_s1' got status valid.
[eva] string_c.c:194: function memcmp: precondition 'valid_s2' got status valid.
[eva] string_c.c:194: 
  function memcmp: precondition 'initialization,s1' got status valid.
[eva] string_c.c:194: 
  function memcmp: precondition 'initialization,s2' got status valid.
[eva] string_c.c:194: 
  function memcmp: precondition 'danglingness,s1' got status valid.
[eva] string_c.c:194: 
  function memcmp: precondition 'danglingness,s2' got status valid.
[eva] Recording results for memcmp
[eva] Done for function memcmp
[eva] string_c.c:195: assertion got status valid.
[eva] Recording results for test_memcmp
[eva] Done for function test_memcmp
[eva] computing for function test_strcat <- main.
  Called from string_c.c:302.
[eva] computing for function strcat <- test_strcat <- main.
  Called from string_c.c:124.
[eva] string_c.c:124: 
  function strcat: precondition 'valid_string_src' got status valid.
[eva] string_c.c:124: 
  function strcat: precondition 'valid_string_dest' got status valid.
[eva] string_c.c:124: 
  function strcat: precondition 'room_string' got status valid.
[eva] computing for function strlen <- strcat <- test_strcat <- main.
  Called from FRAMAC_SHARE/libc/string.c:198.
[eva] FRAMAC_SHARE/libc/string.c:198: 
  function strlen: precondition 'valid_string_s' got status valid.
[eva] Recording results for strlen
[eva] Done for function strlen
[eva] FRAMAC_SHARE/libc/string.h:429: 
  function strcat: postcondition 'sum_of_lengths' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:432: 
  function strcat: postcondition 'initialization,dest' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:433: 
  function strcat: postcondition 'dest_null_terminated' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:434: 
  function strcat: postcondition 'result_ptr' got status valid.
[eva] Recording results for strcat
[eva] Done for function strcat
[eva] string_c.c:125: assertion got status valid.
[eva] string_c.c:126: assertion got status valid.
[eva] computing for function strcat <- test_strcat <- main.
  Called from string_c.c:132.
[eva] string_c.c:132: 
  function strcat: precondition 'valid_string_src' got status valid.
[eva] string_c.c:132: 
  function strcat: precondition 'valid_string_dest' got status valid.
[eva] string_c.c:132: 
  function strcat: precondition 'room_string' got status valid.
[eva] computing for function strlen <- strcat <- test_strcat <- main.
  Called from FRAMAC_SHARE/libc/string.c:198.
[eva] Recording results for strlen
[eva] Done for function strlen
[eva] Recording results for strcat
[eva] Done for function strcat
[eva] string_c.c:133: assertion got status valid.
[eva] computing for function strcat <- test_strcat <- main.
  Called from string_c.c:134.
[eva] string_c.c:134: 
  function strcat: precondition 'valid_string_src' got status valid.
[eva] string_c.c:134: 
  function strcat: precondition 'valid_string_dest' got status valid.
[eva] string_c.c:134: 
  function strcat: precondition 'room_string' got status valid.
[eva] computing for function strlen <- strcat <- test_strcat <- main.
  Called from FRAMAC_SHARE/libc/string.c:198.
[eva] Recording results for strlen
[eva] Done for function strlen
[eva] Recording results for strcat
[eva] Done for function strcat
[eva] computing for function strcat <- test_strcat <- main.
  Called from string_c.c:135.
[eva] string_c.c:135: 
  function strcat: precondition 'valid_string_src' got status valid.
[eva] string_c.c:135: 
  function strcat: precondition 'valid_string_dest' got status valid.
[eva] string_c.c:135: 
  function strcat: precondition 'room_string' got status valid.
[eva] FRAMAC_SHARE/libc/string.c:198: Reusing old results for call to strlen
[eva] Recording results for strcat
[eva] Done for function strcat
[eva] string_c.c:136: assertion got status valid.
[eva] Recording results for test_strcat
[eva] Done for function test_strcat
[eva] computing for function test_strcpy <- main.
  Called from string_c.c:304.
[eva] computing for function strcpy <- test_strcpy <- main.
  Called from string_c.c:142.
[eva] string_c.c:142: 
  function strcpy: precondition 'valid_string_src' got status valid.
[eva] string_c.c:142: 
  function strcpy: precondition 'room_string' got status valid.
[eva] string_c.c:142: 
  function strcpy: precondition 'separation' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:373: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva:alarm] FRAMAC_SHARE/libc/string.h:373: Warning: 
  function strcpy: postcondition 'equal_contents' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:374: 
  function strcpy: postcondition 'result_ptr' got status valid.
[eva] Recording results for strcpy
[eva] Done for function strcpy
[eva] string_c.c:143: assertion got status valid.
[eva] string_c.c:144: assertion got status valid.
[eva] computing for function strcpy <- test_strcpy <- main.
  Called from string_c.c:145.
[eva] string_c.c:145: 
  function strcpy: precondition 'valid_string_src' got status valid.
[eva] string_c.c:145: 
  function strcpy: precondition 'room_string' got status valid.
[eva] string_c.c:145: 
  function strcpy: precondition 'separation' got status valid.
[eva] Recording results for strcpy
[eva] Done for function strcpy
[eva] string_c.c:146: assertion got status valid.
[eva] computing for function strcpy <- test_strcpy <- main.
  Called from string_c.c:147.
[eva] string_c.c:147: 
  function strcpy: precondition 'valid_string_src' got status valid.
[eva] string_c.c:147: 
  function strcpy: precondition 'room_string' got status valid.
[eva] string_c.c:147: 
  function strcpy: precondition 'separation' got status valid.
[eva] Recording results for strcpy
[eva] Done for function strcpy
[eva] string_c.c:148: assertion got status valid.
[eva] Recording results for test_strcpy
[eva] Done for function test_strcpy
[eva] computing for function test_strncpy <- main.
  Called from string_c.c:305.
[eva] computing for function strncpy <- test_strncpy <- main.
  Called from string_c.c:154.
[eva] string_c.c:154: 
  function strncpy: precondition 'valid_nstring_src' got status valid.
[eva] string_c.c:154: 
  function strncpy: precondition 'room_nstring' got status valid.
[eva] string_c.c:154: 
  function strncpy: precondition 'separation' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:385: 
  function strncpy: postcondition 'result_ptr' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:386: 
  function strncpy: postcondition 'initialization' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:389: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva:alarm] FRAMAC_SHARE/libc/string.h:389: Warning: 
  function strncpy, behavior complete: postcondition 'equal_after_copy' got status unknown.
[eva] Recording results for strncpy
[eva] Done for function strncpy
[eva] string_c.c:155: assertion got status valid.
[eva] string_c.c:156: assertion got status valid.
[eva] computing for function strncpy <- test_strncpy <- main.
  Called from string_c.c:157.
[eva] string_c.c:157: 
  function strncpy: precondition 'valid_nstring_src' got status valid.
[eva] string_c.c:157: 
  function strncpy: precondition 'room_nstring' got status valid.
[eva] string_c.c:157: 
  function strncpy: precondition 'separation' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:392: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva:alarm] FRAMAC_SHARE/libc/string.h:392: Warning: 
  function strncpy, behavior partial: postcondition 'equal_prefix' got status unknown.
[eva] Recording results for strncpy
[eva] Done for function strncpy
[eva] string_c.c:158: assertion got status valid.
[eva] computing for function strncpy <- test_strncpy <- main.
  Called from string_c.c:159.
[eva] string_c.c:159: 
  function strncpy: precondition 'valid_nstring_src' got status valid.
[eva] string_c.c:159: 
  function strncpy: precondition 'room_nstring' got status valid.
[eva] string_c.c:159: 
  function strncpy: precondition 'separation' got status valid.
[eva] Recording results for strncpy
[eva] Done for function strncpy
[eva] string_c.c:160: assertion got status valid.
[eva] computing for function strncpy <- test_strncpy <- main.
  Called from string_c.c:161.
[eva] string_c.c:161: 
  function strncpy: precondition 'valid_nstring_src' got status valid.
[eva] string_c.c:161: 
  function strncpy: precondition 'room_nstring' got status valid.
[eva] string_c.c:161: 
  function strncpy: precondition 'separation' got status valid.
[eva] Recording results for strncpy
[eva] Done for function strncpy
[eva] string_c.c:162: assertion got status valid.
[eva] Recording results for test_strncpy
[eva] Done for function test_strncpy
[eva] computing for function test_strchr <- main.
  Called from string_c.c:306.
[eva] computing for function strchr <- test_strchr <- main.
  Called from string_c.c:201.
[eva] string_c.c:201: 
  function strchr: precondition 'valid_string_s' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:177: 
  function strchr, behavior found: postcondition 'result_char' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:178: 
  function strchr, behavior found: postcondition 'result_same_base' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:179: 
  function strchr, behavior found: postcondition 'result_in_length' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:180: 
  function strchr, behavior found: postcondition 'result_valid_string' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:181: 
  cannot evaluate ACSL term, unsupported logic var p
[eva:alarm] FRAMAC_SHARE/libc/string.h:181: Warning: 
  function strchr, behavior found: postcondition 'result_first_occur' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:187: 
  function strchr, behavior default: postcondition 'result_null_or_same_base' got status valid.
[eva] Recording results for strchr
[eva] Done for function strchr
[eva] string_c.c:202: assertion got status valid.
[eva] computing for function strchr <- test_strchr <- main.
  Called from string_c.c:203.
[eva] string_c.c:203: 
  function strchr: precondition 'valid_string_s' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:184: 
  function strchr, behavior not_found: postcondition 'result_null' got status valid.
[eva] Recording results for strchr
[eva] Done for function strchr
[eva] string_c.c:204: assertion got status valid.
[eva] computing for function strchr <- test_strchr <- main.
  Called from string_c.c:205.
[eva] string_c.c:205: 
  function strchr: precondition 'valid_string_s' got status valid.
[eva] Recording results for strchr
[eva] Done for function strchr
[eva] string_c.c:206: assertion got status valid.
[eva] computing for function strchr <- test_strchr <- main.
  Called from string_c.c:207.
[eva] string_c.c:207: 
  function strchr: precondition 'valid_string_s' got status valid.
[eva] Recording results for strchr
[eva] Done for function strchr
[eva] string_c.c:208: assertion got status valid.
[eva] Recording results for test_strchr
[eva] Done for function test_strchr
[eva] computing for function test_strrchr <- main.
  Called from string_c.c:307.
[eva] computing for function strrchr <- test_strrchr <- main.
  Called from string_c.c:214.
[eva] string_c.c:214: 
  function strrchr: precondition 'valid_string_s' got status valid.
[eva] computing for function strlen <- strrchr <- test_strrchr <- main.
  Called from FRAMAC_SHARE/libc/string.c:263.
[eva] FRAMAC_SHARE/libc/string.c:263: 
  function strlen: precondition 'valid_string_s' got status valid.
[eva] Recording results for strlen
[eva] Done for function strlen
[eva] FRAMAC_SHARE/libc/string.h:201: 
  function strrchr, behavior found: postcondition 'result_char' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:202: 
  function strrchr, behavior found: postcondition 'result_same_base' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:203: 
  function strrchr, behavior found: postcondition 'result_valid_string' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:209: 
  function strrchr, behavior default: postcondition 'result_null_or_same_base' got status valid.
[eva] Recording results for strrchr
[eva] Done for function strrchr
[eva] string_c.c:215: assertion got status valid.
[eva] computing for function strrchr <- test_strrchr <- main.
  Called from string_c.c:216.
[eva] string_c.c:216: 
  function strrchr: precondition 'valid_string_s' got status valid.
[eva] FRAMAC_SHARE/libc/string.c:263: Reusing old results for call to strlen
[eva] FRAMAC_SHARE/libc/string.h:206: 
  function strrchr, behavior not_found: postcondition 'result_null' got status valid.
[eva] Recording results for strrchr
[eva] Done for function strrchr
[eva] string_c.c:217: assertion got status valid.
[eva] computing for function strrchr <- test_strrchr <- main.
  Called from string_c.c:218.
[eva] string_c.c:218: 
  function strrchr: precondition 'valid_string_s' got status valid.
[eva] FRAMAC_SHARE/libc/string.c:263: Reusing old results for call to strlen
[eva] Recording results for strrchr
[eva] Done for function strrchr
[eva] string_c.c:219: assertion got status valid.
[eva] computing for function strrchr <- test_strrchr <- main.
  Called from string_c.c:220.
[eva] string_c.c:220: 
  function strrchr: precondition 'valid_string_s' got status valid.
[eva] FRAMAC_SHARE/libc/string.c:263: Reusing old results for call to strlen
[eva] Recording results for strrchr
[eva] Done for function strrchr
[eva] string_c.c:221: assertion got status valid.
[eva] Recording results for test_strrchr
[eva] Done for function test_strrchr
[eva] computing for function test_memchr <- main.
  Called from string_c.c:308.
[eva] computing for function memchr <- test_memchr <- main.
  Called from string_c.c:227.
[eva] string_c.c:227: function memchr: precondition 'valid' got status valid.
[eva] string_c.c:227: 
  function memchr: precondition 'initialization' got status valid.
[eva] string_c.c:227: 
  function memchr: precondition 'danglingness' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:79: 
  function memchr, behavior found: postcondition 'result_same_base' got status valid. (Behavior may be inactive, no reduction performed.)
[eva] FRAMAC_SHARE/libc/string.h:80: 
  function memchr, behavior found: postcondition 'result_char' got status valid. (Behavior may be inactive, no reduction performed.)
[eva] FRAMAC_SHARE/libc/string.h:81: 
  function memchr, behavior found: postcondition 'result_in_str' got status valid. (Behavior may be inactive, no reduction performed.)
[eva:alarm] FRAMAC_SHARE/libc/string.h:86: Warning: 
  function memchr, behavior not_found: postcondition 'result_null' got status invalid. (Behavior may be inactive, no reduction performed.)
[eva] Recording results for memchr
[eva] Done for function memchr
[eva] string_c.c:228: assertion got status valid.
[eva] computing for function memchr <- test_memchr <- main.
  Called from string_c.c:229.
[eva] string_c.c:229: function memchr: precondition 'valid' got status valid.
[eva] string_c.c:229: 
  function memchr: precondition 'initialization' got status valid.
[eva] string_c.c:229: 
  function memchr: precondition 'danglingness' got status valid.
[eva:alarm] FRAMAC_SHARE/libc/string.h:79: Warning: 
  function memchr, behavior found: postcondition 'result_same_base' got status invalid. (Behavior may be inactive, no reduction performed.)
[eva:alarm] FRAMAC_SHARE/libc/string.h:80: Warning: 
  function memchr, behavior found: postcondition 'result_char' got status unknown. (Behavior may be inactive, no reduction performed.)
[eva] FRAMAC_SHARE/libc/string.h:86: 
  function memchr, behavior not_found: postcondition 'result_null' got status valid. (Behavior may be inactive, no reduction performed.)
[eva] Recording results for memchr
[eva] Done for function memchr
[eva] string_c.c:230: assertion got status valid.
[eva] computing for function memchr <- test_memchr <- main.
  Called from string_c.c:231.
[eva] string_c.c:231: function memchr: precondition 'valid' got status valid.
[eva] string_c.c:231: 
  function memchr: precondition 'initialization' got status valid.
[eva] string_c.c:231: 
  function memchr: precondition 'danglingness' got status valid.
[eva:alarm] FRAMAC_SHARE/libc/string.h:81: Warning: 
  function memchr, behavior found: postcondition 'result_in_str' got status unknown. (Behavior may be inactive, no reduction performed.)
[eva] Recording results for memchr
[eva] Done for function memchr
[eva] string_c.c:232: assertion got status valid.
[eva] computing for function memchr <- test_memchr <- main.
  Called from string_c.c:233.
[eva] string_c.c:233: function memchr: precondition 'valid' got status valid.
[eva] string_c.c:233: 
  function memchr: precondition 'initialization' got status valid.
[eva] string_c.c:233: 
  function memchr: precondition 'danglingness' got status valid.
[eva] Recording results for memchr
[eva] Done for function memchr
[eva] string_c.c:234: assertion got status valid.
[eva] computing for function memchr <- test_memchr <- main.
  Called from string_c.c:235.
[eva] string_c.c:235: function memchr: precondition 'valid' got status valid.
[eva] string_c.c:235: 
  function memchr: precondition 'initialization' got status valid.
[eva] string_c.c:235: 
  function memchr: precondition 'danglingness' got status valid.
[eva] Recording results for memchr
[eva] Done for function memchr
[eva] string_c.c:236: assertion got status valid.
[eva] computing for function memchr <- test_memchr <- main.
  Called from string_c.c:237.
[eva] string_c.c:237: function memchr: precondition 'valid' got status valid.
[eva] string_c.c:237: 
  function memchr: precondition 'initialization' got status valid.
[eva] string_c.c:237: 
  function memchr: precondition 'danglingness' got status valid.
[eva] Recording results for memchr
[eva] Done for function memchr
[eva] string_c.c:238: assertion got status valid.
[eva] Recording results for test_memchr
[eva] Done for function test_memchr
[eva] computing for function test_memrchr <- main.
  Called from string_c.c:309.
[eva] computing for function memrchr <- test_memrchr <- main.
  Called from string_c.c:244.
[eva] Recording results for memrchr
[eva] Done for function memrchr
[eva] string_c.c:245: assertion got status valid.
[eva] computing for function memrchr <- test_memrchr <- main.
  Called from string_c.c:246.
[eva] Recording results for memrchr
[eva] Done for function memrchr
[eva] string_c.c:247: assertion got status valid.
[eva] computing for function memrchr <- test_memrchr <- main.
  Called from string_c.c:248.
[eva] Recording results for memrchr
[eva] Done for function memrchr
[eva] string_c.c:249: assertion got status valid.
[eva] computing for function memrchr <- test_memrchr <- main.
  Called from string_c.c:250.
[eva] Recording results for memrchr
[eva] Done for function memrchr
[eva] string_c.c:251: assertion got status valid.
[eva] computing for function memrchr <- test_memrchr <- main.
  Called from string_c.c:252.
[eva] Recording results for memrchr
[eva] Done for function memrchr
[eva] string_c.c:253: assertion got status valid.
[eva] computing for function memrchr <- test_memrchr <- main.
  Called from string_c.c:254.
[eva] Recording results for memrchr
[eva] Done for function memrchr
[eva] string_c.c:255: assertion got status valid.
[eva] Recording results for test_memrchr
[eva] Done for function test_memrchr
[eva] computing for function test_strstr <- main.
  Called from string_c.c:310.
[eva] computing for function strstr <- test_strstr <- main.
  Called from string_c.c:261.
[eva] string_c.c:261: 
  function strstr: precondition 'valid_string_haystack' got status valid.
[eva] string_c.c:261: 
  function strstr: precondition 'valid_string_needle' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva:alarm] FRAMAC_SHARE/libc/string.h:241: Warning: 
  function strstr: postcondition 'result_null_or_in_haystack' got status unknown.
[eva] Recording results for strstr
[eva] Done for function strstr
[eva] string_c.c:262: assertion got status valid.
[eva] computing for function strstr <- test_strstr <- main.
  Called from string_c.c:263.
[eva] string_c.c:263: 
  function strstr: precondition 'valid_string_haystack' got status valid.
[eva] string_c.c:263: 
  function strstr: precondition 'valid_string_needle' got status valid.
[eva] Recording results for strstr
[eva] Done for function strstr
[eva] string_c.c:264: assertion got status valid.
[eva] computing for function strstr <- test_strstr <- main.
  Called from string_c.c:265.
[eva] string_c.c:265: 
  function strstr: precondition 'valid_string_haystack' got status valid.
[eva] string_c.c:265: 
  function strstr: precondition 'valid_string_needle' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:241: 
  function strstr: postcondition 'result_null_or_in_haystack' got status valid.
[eva] Recording results for strstr
[eva] Done for function strstr
[eva] string_c.c:266: assertion got status valid.
[eva] computing for function strstr <- test_strstr <- main.
  Called from string_c.c:267.
[eva] string_c.c:267: 
  function strstr: precondition 'valid_string_haystack' got status valid.
[eva] string_c.c:267: 
  function strstr: precondition 'valid_string_needle' got status valid.
[eva] Recording results for strstr
[eva] Done for function strstr
[eva] string_c.c:268: assertion got status valid.
[eva] computing for function strstr <- test_strstr <- main.
  Called from string_c.c:269.
[eva] string_c.c:269: 
  function strstr: precondition 'valid_string_haystack' got status valid.
[eva] string_c.c:269: 
  function strstr: precondition 'valid_string_needle' got status valid.
[eva] Recording results for strstr
[eva] Done for function strstr
[eva] string_c.c:270: assertion got status valid.
[eva] computing for function strstr <- test_strstr <- main.
  Called from string_c.c:271.
[eva] string_c.c:271: 
  function strstr: precondition 'valid_string_haystack' got status valid.
[eva] string_c.c:271: 
  function strstr: precondition 'valid_string_needle' got status valid.
[eva] Recording results for strstr
[eva] Done for function strstr
[eva] string_c.c:272: assertion got status valid.
[eva] computing for function strstr <- test_strstr <- main.
  Called from string_c.c:273.
[eva] string_c.c:273: 
  function strstr: precondition 'valid_string_haystack' got status valid.
[eva] string_c.c:273: 
  function strstr: precondition 'valid_string_needle' got status valid.
[eva] Recording results for strstr
[eva] Done for function strstr
[eva] string_c.c:274: assertion got status valid.
[eva] computing for function strstr <- test_strstr <- main.
  Called from string_c.c:275.
[eva] string_c.c:275: 
  function strstr: precondition 'valid_string_haystack' got status valid.
[eva] string_c.c:275: 
  function strstr: precondition 'valid_string_needle' got status valid.
[eva] Recording results for strstr
[eva] Done for function strstr
[eva] string_c.c:276: assertion got status valid.
[eva] Recording results for test_strstr
[eva] Done for function test_strstr
[eva] computing for function test_mempcpy <- main.
  Called from string_c.c:314.
[eva] computing for function mempcpy <- test_mempcpy <- main.
  Called from string_c.c:282.
[eva] string_c.c:282: 
  function mempcpy: precondition 'valid_dest' got status valid.
[eva] string_c.c:282: 
  function mempcpy: precondition 'valid_src' got status valid.
[eva] string_c.c:282: 
  function mempcpy: precondition 'separation' got status valid.
[eva] FRAMAC_SHARE/libc/string.h:114: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva:alarm] FRAMAC_SHARE/libc/string.h:114: Warning: 
  function mempcpy: postcondition 'copied_contents' got status unknown.
[kernel] FRAMAC_SHARE/libc/string.c:57: Warning: using size of 'void'
[eva:alarm] FRAMAC_SHARE/libc/string.h:115: Warning: 
  function mempcpy: postcondition 'result_next_byte' got status unknown.
[eva] Recording results for mempcpy
[eva] Done for function mempcpy
[eva] string_c.c:283: assertion got status valid.
[eva] string_c.c:284: assertion got status valid.
[eva] computing for function mempcpy <- test_mempcpy <- main.
  Called from string_c.c:286.
[eva] string_c.c:286: 
  function mempcpy: precondition 'valid_dest' got status valid.
[eva] string_c.c:286: 
  function mempcpy: precondition 'valid_src' got status valid.
[eva] string_c.c:286: 
  function mempcpy: precondition 'separation' got status valid.
[eva] Recording results for mempcpy
[eva] Done for function mempcpy
[eva] string_c.c:287: assertion got status valid.
[eva] computing for function mempcpy <- test_mempcpy <- main.
  Called from string_c.c:288.
[eva] string_c.c:288: 
  function mempcpy: precondition 'valid_dest' got status valid.
[eva] string_c.c:288: 
  function mempcpy: precondition 'valid_src' got status valid.
[eva] string_c.c:288: 
  function mempcpy: precondition 'separation' got status valid.
[eva] Recording results for mempcpy
[eva] Done for function mempcpy
[eva] string_c.c:289: assertion got status valid.
[eva] Recording results for test_mempcpy
[eva] Done for function test_mempcpy
[eva] Recording results for main
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function memchr:
  ch âˆˆ {1; 2; 5}
  ss âˆˆ {{ (unsigned char const *)&s }}
  __retres âˆˆ {{ NULL ; (void *)&s{[0], [1]} }}
[eva:final-states] Values at end of function memcmp:
  p1 âˆˆ {{ "hallo" ; "hallo" ; "a\000b" ; "a\000b" }}
  p2 âˆˆ {{ (unsigned char const *)&hello ; "a\000c" ; "a\000c" }}
  __retres âˆˆ {-4; -1; 0}
[eva:final-states] Values at end of function memcpy:
  dest[0] âˆˆ {65; 97; 104}
      [1] âˆˆ {0; 56; 101}
      [2] âˆˆ {9; 98; 108}
      [3] âˆˆ {0; 18; 108}
      [4] âˆˆ {0; 111}
      [5] âˆˆ {0}
[eva:final-states] Values at end of function memoverlap:
  p1 âˆˆ {{ (unsigned int)&buf{[0], [2], [3]} }}
  p2 âˆˆ {{ (unsigned int)&buf{[4], [6]} }}
  q1 âˆˆ {{ (unsigned int)&buf{[0], [2]} }}
  q2 âˆˆ {{ (unsigned int)&buf{[3], [4], [6]} }}
  __retres âˆˆ {-1; 0; 1}
[eva:final-states] Values at end of function memmove:
  s âˆˆ {{ &buf{[0], [2]} }}
  d âˆˆ {{ &buf{[0], [2], [3]} }}
  buf[0] âˆˆ {1; 3}
     [1] âˆˆ {2; 4}
     [2] âˆˆ {1; 5}
     [3] âˆˆ {2; 3; 6}
     [4] âˆˆ {3; 4; 5}
     [5] âˆˆ {4; 5; 6}
  __retres âˆˆ {{ (void *)&buf{[0], [2], [3]} }}
[eva:final-states] Values at end of function mempcpy:
  i âˆˆ {0; 3; 6}
  dest[0] âˆˆ {97; 104}
      [1] âˆˆ {0; 101}
      [2] âˆˆ {98; 108}
      [3] âˆˆ {108}
      [4] âˆˆ {111}
      [5] âˆˆ {0}
  __retres âˆˆ {{ (void *)&dest{[0], [3], [6]} }}
[eva:final-states] Values at end of function memrchr:
  ch âˆˆ {1; 2; 5}
  ss âˆˆ {{ (unsigned char const *)&s }}
  __retres âˆˆ {{ NULL ; (void *)&s{[0], [3], [4]} }}
[eva:final-states] Values at end of function memset:
  p âˆˆ {{ (unsigned char *)&dest }}
  dest[0..2] âˆˆ {42}
      [3] âˆˆ {0}
[eva:final-states] Values at end of function strchr:
  ch âˆˆ {0; 72; 104; 108}
  i âˆˆ {0; 2; 5}
  __retres âˆˆ {{ NULL ; "hello" + {0; 2; 5} }}
[eva:final-states] Values at end of function strcmp:
  i âˆˆ {0; 1; 4; 5}
  __retres âˆˆ {-111; -104; -32; 0; 111}
[eva:final-states] Values at end of function strcpy:
  i âˆˆ {0; 5; 6}
  s[0] âˆˆ {0; 54; 104}
   [1] âˆˆ {53; 101}
   [2] âˆˆ {52; 108}
   [3] âˆˆ {51; 108}
   [4] âˆˆ {50; 111}
   [5] âˆˆ {0; 49}
   [6] âˆˆ {0} or UNINITIALIZED
[eva:final-states] Values at end of function strlen:
  i âˆˆ {0; 2; 4; 5; 7}
[eva:final-states] Values at end of function strcat:
  i âˆˆ {0; 1; 3; 5}
  n âˆˆ {0; 4; 7}
  s[0] âˆˆ {104}
   [1] âˆˆ {101}
   [2..3] âˆˆ {108}
   [4] âˆˆ {104; 111}
   [5] âˆˆ {0; 101}
   [6] âˆˆ {108} or UNINITIALIZED
   [7] âˆˆ {0; 120} or UNINITIALIZED
   [8] âˆˆ {0} or UNINITIALIZED
   [9] âˆˆ UNINITIALIZED
[eva:final-states] Values at end of function strncmp:
  __retres âˆˆ {-104; -4; 0; 111}
[eva:final-states] Values at end of function strncpy:
  i âˆˆ {0; 3; 5; 7}
  s[0] âˆˆ {97; 98; 104}
   [1] âˆˆ {98; 101; 121}
   [2] âˆˆ {0; 101; 108}
   [3] âˆˆ {0; 108}
   [4] âˆˆ {0; 111}
   [5..6] âˆˆ {0}
[eva:final-states] Values at end of function strnlen:
  i âˆˆ {0; 2; 4; 5}
[eva:final-states] Values at end of function strrchr:
  ch âˆˆ {0; 72; 104; 108}
  __retres âˆˆ {{ NULL ; "hello" + {0; 3; 5} }}
[eva:final-states] Values at end of function strstr:
  __retres âˆˆ {{ NULL ; "hello" + {0; 2; 3} }}
[eva:final-states] Values at end of function test_memchr:
  s[0] âˆˆ {1}
   [1] âˆˆ {2}
   [2] âˆˆ {3}
   [3] âˆˆ {1}
   [4] âˆˆ {2}
   [5] âˆˆ {4}
  p âˆˆ {{ &s[0] }}
[eva:final-states] Values at end of function test_memcmp:
  hello[0] âˆˆ {104}
       [1] âˆˆ {101}
       [2..3] âˆˆ {108}
       [4] âˆˆ {111}
       [5] âˆˆ {0}
  res1 âˆˆ {-4}
  res2 âˆˆ {0}
  res3 âˆˆ {0}
  res4 âˆˆ {-1}
[eva:final-states] Values at end of function test_memcpy:
  dest[0] âˆˆ {65}
      [1] âˆˆ {56}
      [2] âˆˆ {9}
      [3] âˆˆ {18}
      [4..5] âˆˆ {0}
  src[0] âˆˆ {104}
     [1] âˆˆ {101}
     [2..3] âˆˆ {108}
     [4] âˆˆ {111}
     [5] âˆˆ {0}
  p âˆˆ {{ NULL ; &dest[0] }}
  src2[0] âˆˆ {97}
      [1] âˆˆ {0}
      [2] âˆˆ {98}
      [3..4] âˆˆ {0}
  x âˆˆ {302594113}
[eva:final-states] Values at end of function test_memmove:
  buf[0] âˆˆ {3}
     [1] âˆˆ {4}
     [2] âˆˆ {5}
     [3] âˆˆ {3}
     [4] âˆˆ {4}
     [5] âˆˆ {5}
  s âˆˆ {{ &buf[0] }}
  d âˆˆ {{ &buf[3] }}
  p âˆˆ {{ &buf[2] }}
[eva:final-states] Values at end of function test_mempcpy:
  dest[0] âˆˆ {97}
      [1] âˆˆ {0}
      [2] âˆˆ {98}
      [3] âˆˆ {108}
      [4] âˆˆ {111}
      [5] âˆˆ {0}
  src[0] âˆˆ {104}
     [1] âˆˆ {101}
     [2..3] âˆˆ {108}
     [4] âˆˆ {111}
     [5] âˆˆ {0}
  p âˆˆ {{ &dest[0] }}
  src2[0] âˆˆ {97}
      [1] âˆˆ {0}
      [2] âˆˆ {98}
      [3..4] âˆˆ {0}
[eva:final-states] Values at end of function test_memrchr:
  s[0] âˆˆ {1}
   [1] âˆˆ {2}
   [2] âˆˆ {3}
   [3] âˆˆ {1}
   [4] âˆˆ {2}
   [5] âˆˆ {4}
  p âˆˆ {{ &s[0] }}
[eva:final-states] Values at end of function test_memset:
  dest[0..2] âˆˆ {42}
      [3] âˆˆ {0}
  p âˆˆ {{ &dest[0] }}
[eva:final-states] Values at end of function test_strcat:
  s[0] âˆˆ {104}
   [1] âˆˆ {101}
   [2..3] âˆˆ {108}
   [4] âˆˆ {104}
   [5] âˆˆ {101}
   [6] âˆˆ {108}
   [7] âˆˆ {120}
   [8] âˆˆ {0}
   [9] âˆˆ UNINITIALIZED
  p âˆˆ {{ &s[0] }}
[eva:final-states] Values at end of function test_strchr:
  s âˆˆ {{ "hello" }}
  p âˆˆ {{ "hello" + {5} }}
[eva:final-states] Values at end of function test_strcmp:
  hello[0] âˆˆ {104}
       [1] âˆˆ {97}
       [2..3] âˆˆ {108}
       [4] âˆˆ {111}
       [5] âˆˆ {0}
  res âˆˆ {0}
  res2 âˆˆ {-111}
  res3 âˆˆ {111}
  res4 âˆˆ {-32}
  res5 âˆˆ {-104}
  res6 âˆˆ {0}
  res7 âˆˆ {0}
[eva:final-states] Values at end of function test_strcpy:
  s[0] âˆˆ {0}
   [1] âˆˆ {53}
   [2] âˆˆ {52}
   [3] âˆˆ {51}
   [4] âˆˆ {50}
   [5] âˆˆ {49}
   [6] âˆˆ {0}
  p âˆˆ {{ &s[0] }}
[eva:final-states] Values at end of function test_strlen:
  s âˆˆ {{ "hello" }}
  n âˆˆ {0}
[eva:final-states] Values at end of function test_strncmp:
  hello[0] âˆˆ {104}
       [1] âˆˆ {97}
       [2..3] âˆˆ {108}
       [4] âˆˆ {111}
       [5] âˆˆ {0}
  res1 âˆˆ {-4}
  res2 âˆˆ {0}
  res3 âˆˆ {0}
  res4 âˆˆ {111}
  res5 âˆˆ {0}
  res6 âˆˆ {-104}
  res7 âˆˆ {0}
  res8 âˆˆ {0}
[eva:final-states] Values at end of function test_strncpy:
  s[0] âˆˆ {97}
   [1] âˆˆ {98}
   [2..6] âˆˆ {0}
  p âˆˆ {{ &s[0] }}
[eva:final-states] Values at end of function test_strnlen:
  s âˆˆ {{ "hello" }}
  n âˆˆ {0}
[eva:final-states] Values at end of function test_strrchr:
  s âˆˆ {{ "hello" }}
  p âˆˆ {{ "hello" + {5} }}
[eva:final-states] Values at end of function test_strstr:
  s âˆˆ {{ "hello" }}
  p âˆˆ {{ "hello" }}
[eva:final-states] Values at end of function main:
  __retres âˆˆ {0}
