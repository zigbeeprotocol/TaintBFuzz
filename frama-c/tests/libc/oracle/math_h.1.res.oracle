[kernel] Parsing math_h.c (with preprocessing)
[kernel:parser:decimal-float] math_h.c:8: Warning: 
  Floating-point constant 3.14159265358979323846264338327950288 is not represented exactly. Will use 0x1.921fb54442d18p1.
  (warn-once: no further messages from category 'parser:decimal-float' will be emitted)
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  pi ∈ {3.14159265359}
  half_pi ∈ {1.57079632679}
  e ∈ {2.71828182846}
  top ∈ [--..--]
  f_pi ∈ {3.14159274101}
  f_half_pi ∈ {1.57079637051}
  f_e ∈ {2.71828174591}
  f_top ∈ [--..--]
  ld_pi ∈ [3.14159265359 .. 3.14159265359]
  ld_half_pi ∈ [1.57079632679 .. 1.57079632679]
  ld_e ∈ {2.71828182846}
  ld_top ∈ [--..--]
  zero ∈ {0}
  minus_zero ∈ {-0.}
  one ∈ {1.}
  minus_one ∈ {-1.}
  large ∈ {1e+38}
  f_pos_inf ∈ {inf}
  pos_inf ∈ {inf}
  ld_pos_inf ∈ {inf}
  f_neg_inf ∈ {-inf}
  neg_inf ∈ {-inf}
  ld_neg_inf ∈ {-inf}
  infinity ∈ {inf}
  fp_ilogb0 ∈ {-2147483648.}
  fp_ilogbnan ∈ {-2147483648.}
  int_top ∈ [--..--]
  nondet ∈ [--..--]
[eva] math_h.c:86: Call to builtin atan
[eva] math_h.c:86: function atan: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atan
[eva] math_h.c:86: function atan: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atan
[eva] math_h.c:86: function atan: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atan
[eva] math_h.c:86: function atan: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atan
[eva] math_h.c:86: function atan: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atan
[eva] math_h.c:86: function atan: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atan
[eva] math_h.c:86: function atan: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atan
[eva] math_h.c:86: function atan: precondition 'number_arg' got status valid.
[eva:alarm] math_h.c:86: Warning: NaN double value. assert ¬\is_NaN(top);
[eva] math_h.c:86: Call to builtin atan
[eva] math_h.c:86: function atan: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atanf
[eva] math_h.c:86: function atanf: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atanf
[eva] math_h.c:86: function atanf: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atanf
[eva] math_h.c:86: function atanf: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atanf
[eva] math_h.c:86: function atanf: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atanf
[eva] math_h.c:86: function atanf: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atanf
[eva] math_h.c:86: function atanf: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atanf
[eva] math_h.c:86: function atanf: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atanf
[eva] math_h.c:86: function atanf: precondition 'number_arg' got status valid.
[eva:alarm] math_h.c:86: Warning: NaN float value. assert ¬\is_NaN(f_top);
[eva] math_h.c:86: Call to builtin atanf
[eva] math_h.c:86: function atanf: precondition 'number_arg' got status valid.
[eva] computing for function atanl <- main.
  Called from math_h.c:86.
[eva] using specification for function atanl
[eva] math_h.c:86: function atanl: precondition 'number_arg' got status valid.
[eva] Done for function atanl
[eva] computing for function atanl <- main.
  Called from math_h.c:86.
[eva] math_h.c:86: function atanl: precondition 'number_arg' got status valid.
[eva] Done for function atanl
[eva] computing for function atanl <- main.
  Called from math_h.c:86.
[eva] math_h.c:86: function atanl: precondition 'number_arg' got status valid.
[eva] Done for function atanl
[eva] computing for function atanl <- main.
  Called from math_h.c:86.
[eva] math_h.c:86: function atanl: precondition 'number_arg' got status valid.
[eva] Done for function atanl
[eva] computing for function atanl <- main.
  Called from math_h.c:86.
[eva] math_h.c:86: function atanl: precondition 'number_arg' got status valid.
[eva] Done for function atanl
[eva] computing for function atanl <- main.
  Called from math_h.c:86.
[eva] math_h.c:86: function atanl: precondition 'number_arg' got status valid.
[eva] Done for function atanl
[eva] computing for function atanl <- main.
  Called from math_h.c:86.
[eva] math_h.c:86: function atanl: precondition 'number_arg' got status valid.
[eva] Done for function atanl
[eva] computing for function atanl <- main.
  Called from math_h.c:86.
[eva] math_h.c:86: function atanl: precondition 'number_arg' got status valid.
[eva] Done for function atanl
[eva:alarm] math_h.c:86: Warning: 
  NaN long double value. assert ¬\is_NaN(ld_top);
[eva] computing for function atanl <- main.
  Called from math_h.c:86.
[eva] math_h.c:86: function atanl: precondition 'number_arg' got status valid.
[eva] Done for function atanl
[eva] math_h.c:86: Call to builtin atan
[eva] math_h.c:86: function atan: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atan
[eva] math_h.c:86: function atan: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atanf
[eva] math_h.c:86: function atanf: precondition 'number_arg' got status valid.
[eva] math_h.c:86: Call to builtin atanf
[eva] math_h.c:86: function atanf: precondition 'number_arg' got status valid.
[eva] computing for function atanl <- main.
  Called from math_h.c:86.
[eva] math_h.c:86: function atanl: precondition 'number_arg' got status valid.
[eva] Done for function atanl
[eva] computing for function atanl <- main.
  Called from math_h.c:86.
[eva] math_h.c:86: function atanl: precondition 'number_arg' got status valid.
[eva] Done for function atanl
[eva] computing for function fabs <- main.
  Called from math_h.c:87.
[eva] using specification for function fabs
[eva] math_h.c:87: function fabs: precondition 'not_nan' got status valid.
[eva] Done for function fabs
[eva] computing for function fabs <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabs: precondition 'not_nan' got status valid.
[eva] Done for function fabs
[eva] computing for function fabs <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabs: precondition 'not_nan' got status valid.
[eva] Done for function fabs
[eva] computing for function fabs <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabs: precondition 'not_nan' got status valid.
[eva] Done for function fabs
[eva] computing for function fabs <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabs: precondition 'not_nan' got status valid.
[eva] Done for function fabs
[eva] computing for function fabs <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabs: precondition 'not_nan' got status valid.
[eva] Done for function fabs
[eva] computing for function fabs <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabs: precondition 'not_nan' got status valid.
[eva] Done for function fabs
[eva] computing for function fabs <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabs: precondition 'not_nan' got status valid.
[eva] Done for function fabs
[eva:alarm] math_h.c:87: Warning: NaN double value. assert ¬\is_NaN(top);
[eva] computing for function fabs <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabs: precondition 'not_nan' got status valid.
[eva] Done for function fabs
[eva] computing for function fabsf <- main.
  Called from math_h.c:87.
[eva] using specification for function fabsf
[eva] math_h.c:87: function fabsf: precondition 'not_nan' got status valid.
[eva] Done for function fabsf
[eva] computing for function fabsf <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsf: precondition 'not_nan' got status valid.
[eva] Done for function fabsf
[eva] computing for function fabsf <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsf: precondition 'not_nan' got status valid.
[eva] Done for function fabsf
[eva] computing for function fabsf <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsf: precondition 'not_nan' got status valid.
[eva] Done for function fabsf
[eva] computing for function fabsf <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsf: precondition 'not_nan' got status valid.
[eva] Done for function fabsf
[eva] computing for function fabsf <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsf: precondition 'not_nan' got status valid.
[eva] Done for function fabsf
[eva] computing for function fabsf <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsf: precondition 'not_nan' got status valid.
[eva] Done for function fabsf
[eva] computing for function fabsf <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsf: precondition 'not_nan' got status valid.
[eva] Done for function fabsf
[eva:alarm] math_h.c:87: Warning: NaN float value. assert ¬\is_NaN(f_top);
[eva] computing for function fabsf <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsf: precondition 'not_nan' got status valid.
[eva] Done for function fabsf
[eva] computing for function fabsl <- main.
  Called from math_h.c:87.
[eva] using specification for function fabsl
[eva] math_h.c:87: function fabsl: precondition 'not_nan' got status valid.
[eva] Done for function fabsl
[eva] computing for function fabsl <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsl: precondition 'not_nan' got status valid.
[eva] Done for function fabsl
[eva] computing for function fabsl <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsl: precondition 'not_nan' got status valid.
[eva] Done for function fabsl
[eva] computing for function fabsl <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsl: precondition 'not_nan' got status valid.
[eva] Done for function fabsl
[eva] computing for function fabsl <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsl: precondition 'not_nan' got status valid.
[eva] Done for function fabsl
[eva] computing for function fabsl <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsl: precondition 'not_nan' got status valid.
[eva] Done for function fabsl
[eva] computing for function fabsl <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsl: precondition 'not_nan' got status valid.
[eva] Done for function fabsl
[eva] computing for function fabsl <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsl: precondition 'not_nan' got status valid.
[eva] Done for function fabsl
[eva:alarm] math_h.c:87: Warning: 
  NaN long double value. assert ¬\is_NaN(ld_top);
[eva] computing for function fabsl <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsl: precondition 'not_nan' got status valid.
[eva] Done for function fabsl
[eva] computing for function fabs <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabs: precondition 'not_nan' got status valid.
[eva] Done for function fabs
[eva] computing for function fabs <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabs: precondition 'not_nan' got status valid.
[eva] Done for function fabs
[eva] computing for function fabsf <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsf: precondition 'not_nan' got status valid.
[eva] Done for function fabsf
[eva] computing for function fabsf <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsf: precondition 'not_nan' got status valid.
[eva] Done for function fabsf
[eva] computing for function fabsl <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsl: precondition 'not_nan' got status valid.
[eva] Done for function fabsl
[eva] computing for function fabsl <- main.
  Called from math_h.c:87.
[eva] math_h.c:87: function fabsl: precondition 'not_nan' got status valid.
[eva] Done for function fabsl
[eva] computing for function tan <- main.
  Called from math_h.c:88.
[eva] using specification for function tan
[eva] math_h.c:88: function tan: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tan: precondition 'not_nan' got status valid.
[eva] Done for function tan
[eva] computing for function tan <- main.
  Called from math_h.c:88.
[eva] math_h.c:88: function tan: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tan: precondition 'not_nan' got status valid.
[eva] Done for function tan
[eva] computing for function tan <- main.
  Called from math_h.c:88.
[eva] math_h.c:88: function tan: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tan: precondition 'not_nan' got status valid.
[eva] Done for function tan
[eva] computing for function tan <- main.
  Called from math_h.c:88.
[eva] math_h.c:88: function tan: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tan: precondition 'not_nan' got status valid.
[eva] Done for function tan
[eva] computing for function tan <- main.
  Called from math_h.c:88.
[eva] math_h.c:88: function tan: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tan: precondition 'not_nan' got status valid.
[eva] Done for function tan
[eva] computing for function tan <- main.
  Called from math_h.c:88.
[eva] math_h.c:88: function tan: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tan: precondition 'not_nan' got status valid.
[eva] Done for function tan
[eva] computing for function tan <- main.
  Called from math_h.c:88.
[eva] math_h.c:88: function tan: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tan: precondition 'not_nan' got status valid.
[eva] Done for function tan
[eva] computing for function tan <- main.
  Called from math_h.c:88.
[eva] math_h.c:88: function tan: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tan: precondition 'not_nan' got status valid.
[eva] Done for function tan
[eva:alarm] math_h.c:88: Warning: NaN double value. assert ¬\is_NaN(top);
[eva] computing for function tan <- main.
  Called from math_h.c:88.
[eva:alarm] math_h.c:88: Warning: 
  function tan: precondition 'not_infinity' got status unknown.
[eva] math_h.c:88: function tan: precondition 'not_nan' got status valid.
[eva] Done for function tan
[eva] computing for function tanf <- main.
  Called from math_h.c:88.
[eva] using specification for function tanf
[eva] math_h.c:88: function tanf: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tanf: precondition 'not_nan' got status valid.
[eva] Done for function tanf
[eva] computing for function tanf <- main.
  Called from math_h.c:88.
[eva] math_h.c:88: function tanf: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tanf: precondition 'not_nan' got status valid.
[eva] Done for function tanf
[eva] computing for function tanf <- main.
  Called from math_h.c:88.
[eva] math_h.c:88: function tanf: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tanf: precondition 'not_nan' got status valid.
[eva] Done for function tanf
[eva] computing for function tanf <- main.
  Called from math_h.c:88.
[eva] math_h.c:88: function tanf: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tanf: precondition 'not_nan' got status valid.
[eva] Done for function tanf
[eva] computing for function tanf <- main.
  Called from math_h.c:88.
[eva] math_h.c:88: function tanf: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tanf: precondition 'not_nan' got status valid.
[eva] Done for function tanf
[eva] computing for function tanf <- main.
  Called from math_h.c:88.
[eva] math_h.c:88: function tanf: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tanf: precondition 'not_nan' got status valid.
[eva] Done for function tanf
[eva] computing for function tanf <- main.
  Called from math_h.c:88.
[eva] math_h.c:88: function tanf: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tanf: precondition 'not_nan' got status valid.
[eva] Done for function tanf
[eva] computing for function tanf <- main.
  Called from math_h.c:88.
[eva] math_h.c:88: function tanf: precondition 'not_infinity' got status valid.
[eva] math_h.c:88: function tanf: precondition 'not_nan' got status valid.
[eva] Done for function tanf
[eva:alarm] math_h.c:88: Warning: NaN float value. assert ¬\is_NaN(f_top);
[eva] computing for function tanf <- main.
  Called from math_h.c:88.
[eva:alarm] math_h.c:88: Warning: 
  function tanf: precondition 'not_infinity' got status unknown.
[eva] math_h.c:88: function tanf: precondition 'not_nan' got status valid.
[eva] Done for function tanf
[eva] computing for function tanl <- main.
  Called from math_h.c:88.
[eva] using specification for function tanl
[eva] Done for function tanl
[eva] computing for function tanl <- main.
  Called from math_h.c:88.
[eva] Done for function tanl
[eva] computing for function tanl <- main.
  Called from math_h.c:88.
[eva] Done for function tanl
[eva] computing for function tanl <- main.
  Called from math_h.c:88.
[eva] Done for function tanl
[eva] computing for function tanl <- main.
  Called from math_h.c:88.
[eva] Done for function tanl
[eva] computing for function tanl <- main.
  Called from math_h.c:88.
[eva] Done for function tanl
[eva] computing for function tanl <- main.
  Called from math_h.c:88.
[eva] Done for function tanl
[eva] computing for function tanl <- main.
  Called from math_h.c:88.
[eva] Done for function tanl
[eva:alarm] math_h.c:88: Warning: 
  NaN long double value. assert ¬\is_NaN(ld_top);
[eva] computing for function tanl <- main.
  Called from math_h.c:88.
[eva] Done for function tanl
[eva] computing for function tan <- main.
  Called from math_h.c:88.
[eva:alarm] math_h.c:88: Warning: 
  function tan: precondition 'not_infinity' got status invalid.
[eva] math_h.c:88: 
  function tan: no state left, precondition 'not_nan' got status valid.
[eva] Done for function tan
[eva] computing for function tan <- main.
  Called from math_h.c:88.
[eva:alarm] math_h.c:88: Warning: 
  function tan: precondition 'not_infinity' got status invalid.
[eva] math_h.c:88: 
  function tan: no state left, precondition 'not_nan' got status valid.
[eva] Done for function tan
[eva] computing for function tanf <- main.
  Called from math_h.c:88.
[eva:alarm] math_h.c:88: Warning: 
  function tanf: precondition 'not_infinity' got status invalid.
[eva] math_h.c:88: 
  function tanf: no state left, precondition 'not_nan' got status valid.
[eva] Done for function tanf
[eva] computing for function tanf <- main.
  Called from math_h.c:88.
[eva:alarm] math_h.c:88: Warning: 
  function tanf: precondition 'not_infinity' got status invalid.
[eva] math_h.c:88: 
  function tanf: no state left, precondition 'not_nan' got status valid.
[eva] Done for function tanf
[eva] computing for function tanl <- main.
  Called from math_h.c:88.
[eva] Done for function tanl
[eva] computing for function tanl <- main.
  Called from math_h.c:88.
[eva] Done for function tanl
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] using specification for function frexp
[eva] math_h.c:90: function frexp: precondition 'valid_exp' got status valid.
[eva] math_h.c:90: function frexp: precondition 'not_nan' got status valid.
[eva] Done for function frexp
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] math_h.c:90: function frexp: precondition 'valid_exp' got status valid.
[eva] math_h.c:90: function frexp: precondition 'not_nan' got status valid.
[eva] Done for function frexp
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] Done for function frexp
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] math_h.c:90: function frexp: precondition 'valid_exp' got status valid.
[eva] math_h.c:90: function frexp: precondition 'not_nan' got status valid.
[eva] Done for function frexp
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] Done for function frexp
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] math_h.c:90: function frexp: precondition 'valid_exp' got status valid.
[eva] math_h.c:90: function frexp: precondition 'not_nan' got status valid.
[eva] Done for function frexp
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] Done for function frexp
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] math_h.c:90: function frexp: precondition 'valid_exp' got status valid.
[eva] math_h.c:90: function frexp: precondition 'not_nan' got status valid.
[eva] Done for function frexp
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] Done for function frexp
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] math_h.c:90: function frexp: precondition 'valid_exp' got status valid.
[eva] math_h.c:90: function frexp: precondition 'not_nan' got status valid.
[eva] Done for function frexp
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] Done for function frexp
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] math_h.c:90: function frexp: precondition 'valid_exp' got status valid.
[eva] math_h.c:90: function frexp: precondition 'not_nan' got status valid.
[eva] Done for function frexp
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] Done for function frexp
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] math_h.c:90: function frexp: precondition 'valid_exp' got status valid.
[eva] math_h.c:90: function frexp: precondition 'not_nan' got status valid.
[eva] Done for function frexp
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] Done for function frexp
[eva:alarm] math_h.c:90: Warning: NaN double value. assert ¬\is_NaN(top);
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] math_h.c:90: function frexp: precondition 'valid_exp' got status valid.
[eva] math_h.c:90: function frexp: precondition 'not_nan' got status valid.
[eva] Done for function frexp
[eva] computing for function frexp <- main.
  Called from math_h.c:90.
[eva] Done for function frexp
[eva] computing for function frexpf <- main.
  Called from math_h.c:91.
[eva] using specification for function frexpf
[eva] math_h.c:91: function frexpf: precondition 'valid_exp' got status valid.
[eva] math_h.c:91: function frexpf: precondition 'not_nan' got status valid.
[eva] Done for function frexpf
[eva] computing for function frexpf <- main.
  Called from math_h.c:91.
[eva] math_h.c:91: function frexpf: precondition 'valid_exp' got status valid.
[eva] math_h.c:91: function frexpf: precondition 'not_nan' got status valid.
[eva] Done for function frexpf
[eva] computing for function frexpf <- main.
  Called from math_h.c:91.
[eva] math_h.c:91: function frexpf: precondition 'valid_exp' got status valid.
[eva] math_h.c:91: function frexpf: precondition 'not_nan' got status valid.
[eva] Done for function frexpf
[eva] computing for function frexpf <- main.
  Called from math_h.c:91.
[eva] math_h.c:91: function frexpf: precondition 'valid_exp' got status valid.
[eva] math_h.c:91: function frexpf: precondition 'not_nan' got status valid.
[eva] Done for function frexpf
[eva] computing for function frexpf <- main.
  Called from math_h.c:91.
[eva] math_h.c:91: function frexpf: precondition 'valid_exp' got status valid.
[eva] math_h.c:91: function frexpf: precondition 'not_nan' got status valid.
[eva] Done for function frexpf
[eva] computing for function frexpf <- main.
  Called from math_h.c:91.
[eva] math_h.c:91: function frexpf: precondition 'valid_exp' got status valid.
[eva] math_h.c:91: function frexpf: precondition 'not_nan' got status valid.
[eva] Done for function frexpf
[eva] computing for function frexpf <- main.
  Called from math_h.c:91.
[eva] math_h.c:91: function frexpf: precondition 'valid_exp' got status valid.
[eva] math_h.c:91: function frexpf: precondition 'not_nan' got status valid.
[eva] Done for function frexpf
[eva] computing for function frexpf <- main.
  Called from math_h.c:91.
[eva] math_h.c:91: function frexpf: precondition 'valid_exp' got status valid.
[eva] math_h.c:91: function frexpf: precondition 'not_nan' got status valid.
[eva] Done for function frexpf
[eva:alarm] math_h.c:91: Warning: NaN float value. assert ¬\is_NaN(f_top);
[eva] computing for function frexpf <- main.
  Called from math_h.c:91.
[eva] math_h.c:91: function frexpf: precondition 'valid_exp' got status valid.
[eva] math_h.c:91: function frexpf: precondition 'not_nan' got status valid.
[eva] Done for function frexpf
[eva] computing for function frexpl <- main.
  Called from math_h.c:92.
[eva] using specification for function frexpl
[eva] math_h.c:92: function frexpl: precondition 'valid_exp' got status valid.
[eva] math_h.c:92: function frexpl: precondition 'not_nan' got status valid.
[eva] Done for function frexpl
[eva] computing for function frexpl <- main.
  Called from math_h.c:92.
[eva] math_h.c:92: function frexpl: precondition 'valid_exp' got status valid.
[eva] math_h.c:92: function frexpl: precondition 'not_nan' got status valid.
[eva] Done for function frexpl
[eva] computing for function frexpl <- main.
  Called from math_h.c:92.
[eva] math_h.c:92: function frexpl: precondition 'valid_exp' got status valid.
[eva] math_h.c:92: function frexpl: precondition 'not_nan' got status valid.
[eva] Done for function frexpl
[eva] computing for function frexpl <- main.
  Called from math_h.c:92.
[eva] math_h.c:92: function frexpl: precondition 'valid_exp' got status valid.
[eva] math_h.c:92: function frexpl: precondition 'not_nan' got status valid.
[eva] Done for function frexpl
[eva] computing for function frexpl <- main.
  Called from math_h.c:92.
[eva] math_h.c:92: function frexpl: precondition 'valid_exp' got status valid.
[eva] math_h.c:92: function frexpl: precondition 'not_nan' got status valid.
[eva] Done for function frexpl
[eva] computing for function frexpl <- main.
  Called from math_h.c:92.
[eva] math_h.c:92: function frexpl: precondition 'valid_exp' got status valid.
[eva] math_h.c:92: function frexpl: precondition 'not_nan' got status valid.
[eva] Done for function frexpl
[eva] computing for function frexpl <- main.
  Called from math_h.c:92.
[eva] math_h.c:92: function frexpl: precondition 'valid_exp' got status valid.
[eva] math_h.c:92: function frexpl: precondition 'not_nan' got status valid.
[eva] Done for function frexpl
[eva] computing for function frexpl <- main.
  Called from math_h.c:92.
[eva] math_h.c:92: function frexpl: precondition 'valid_exp' got status valid.
[eva] math_h.c:92: function frexpl: precondition 'not_nan' got status valid.
[eva] Done for function frexpl
[eva:alarm] math_h.c:92: Warning: 
  NaN long double value. assert ¬\is_NaN(ld_top);
[eva] computing for function frexpl <- main.
  Called from math_h.c:92.
[eva] math_h.c:92: function frexpl: precondition 'valid_exp' got status valid.
[eva] math_h.c:92: function frexpl: precondition 'not_nan' got status valid.
[eva] Done for function frexpl
[eva] computing for function ldexp <- main.
  Called from math_h.c:93.
[eva] using specification for function ldexp
[eva] math_h.c:93: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:93.
[eva] math_h.c:93: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:93.
[eva] math_h.c:93: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:93.
[eva] math_h.c:93: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:93.
[eva] math_h.c:93: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:93.
[eva] math_h.c:93: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:93.
[eva] math_h.c:93: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:93.
[eva] math_h.c:93: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva:alarm] math_h.c:93: Warning: NaN double value. assert ¬\is_NaN(top);
[eva] computing for function ldexp <- main.
  Called from math_h.c:93.
[eva] math_h.c:93: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexpf <- main.
  Called from math_h.c:94.
[eva] using specification for function ldexpf
[eva] math_h.c:94: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:94.
[eva] math_h.c:94: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:94.
[eva] math_h.c:94: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:94.
[eva] math_h.c:94: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:94.
[eva] math_h.c:94: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:94.
[eva] math_h.c:94: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:94.
[eva] math_h.c:94: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:94.
[eva] math_h.c:94: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva:alarm] math_h.c:94: Warning: NaN float value. assert ¬\is_NaN(f_top);
[eva] computing for function ldexpf <- main.
  Called from math_h.c:94.
[eva] math_h.c:94: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexp <- main.
  Called from math_h.c:96.
[eva] math_h.c:96: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:96.
[eva] math_h.c:96: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:96.
[eva] math_h.c:96: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:96.
[eva] math_h.c:96: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:96.
[eva] math_h.c:96: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:96.
[eva] math_h.c:96: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:96.
[eva] math_h.c:96: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:96.
[eva] math_h.c:96: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva:alarm] math_h.c:96: Warning: NaN double value. assert ¬\is_NaN(top);
[eva] computing for function ldexp <- main.
  Called from math_h.c:96.
[eva] math_h.c:96: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexpf <- main.
  Called from math_h.c:97.
[eva] math_h.c:97: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:97.
[eva] math_h.c:97: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:97.
[eva] math_h.c:97: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:97.
[eva] math_h.c:97: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:97.
[eva] math_h.c:97: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:97.
[eva] math_h.c:97: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:97.
[eva] math_h.c:97: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:97.
[eva] math_h.c:97: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva:alarm] math_h.c:97: Warning: NaN float value. assert ¬\is_NaN(f_top);
[eva] computing for function ldexpf <- main.
  Called from math_h.c:97.
[eva] math_h.c:97: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexp <- main.
  Called from math_h.c:99.
[eva] math_h.c:99: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:99.
[eva] math_h.c:99: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:99.
[eva] math_h.c:99: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:99.
[eva] math_h.c:99: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:99.
[eva] math_h.c:99: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:99.
[eva] math_h.c:99: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:99.
[eva] math_h.c:99: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:99.
[eva] math_h.c:99: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva:alarm] math_h.c:99: Warning: NaN double value. assert ¬\is_NaN(top);
[eva] computing for function ldexp <- main.
  Called from math_h.c:99.
[eva] math_h.c:99: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexpf <- main.
  Called from math_h.c:100.
[eva] math_h.c:100: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:100.
[eva] math_h.c:100: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:100.
[eva] math_h.c:100: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:100.
[eva] math_h.c:100: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:100.
[eva] math_h.c:100: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:100.
[eva] math_h.c:100: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:100.
[eva] math_h.c:100: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:100.
[eva] math_h.c:100: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva:alarm] math_h.c:100: Warning: NaN float value. assert ¬\is_NaN(f_top);
[eva] computing for function ldexpf <- main.
  Called from math_h.c:100.
[eva] math_h.c:100: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexp <- main.
  Called from math_h.c:102.
[eva] math_h.c:102: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:102.
[eva] math_h.c:102: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:102.
[eva] math_h.c:102: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:102.
[eva] math_h.c:102: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:102.
[eva] math_h.c:102: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:102.
[eva] math_h.c:102: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:102.
[eva] math_h.c:102: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexp <- main.
  Called from math_h.c:102.
[eva] math_h.c:102: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva:alarm] math_h.c:102: Warning: NaN double value. assert ¬\is_NaN(top);
[eva] computing for function ldexp <- main.
  Called from math_h.c:102.
[eva] math_h.c:102: function ldexp: precondition 'not_nan' got status valid.
[eva] Done for function ldexp
[eva] computing for function ldexpf <- main.
  Called from math_h.c:103.
[eva] math_h.c:103: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:103.
[eva] math_h.c:103: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:103.
[eva] math_h.c:103: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:103.
[eva] math_h.c:103: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:103.
[eva] math_h.c:103: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:103.
[eva] math_h.c:103: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:103.
[eva] math_h.c:103: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function ldexpf <- main.
  Called from math_h.c:103.
[eva] math_h.c:103: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva:alarm] math_h.c:103: Warning: NaN float value. assert ¬\is_NaN(f_top);
[eva] computing for function ldexpf <- main.
  Called from math_h.c:103.
[eva] math_h.c:103: function ldexpf: precondition 'not_nan' got status valid.
[eva] Done for function ldexpf
[eva] computing for function __finite <- main.
  Called from math_h.c:108.
[eva] using specification for function __finite
[eva] Done for function __finite
[eva] math_h.c:109: assertion got status valid.
[eva] computing for function __finite <- main.
  Called from math_h.c:110.
[eva] Done for function __finite
[eva] computing for function __finite <- main.
  Called from math_h.c:110.
[eva] Done for function __finite
[eva] math_h.c:111: assertion got status valid.
[eva] computing for function __finitef <- main.
  Called from math_h.c:112.
[eva] using specification for function __finitef
[eva] Done for function __finitef
[eva] computing for function __finitef <- main.
  Called from math_h.c:112.
[eva] Done for function __finitef
[eva] math_h.c:113: assertion got status valid.
[eva] computing for function __finite <- main.
  Called from math_h.c:114.
[eva] Done for function __finite
[eva] computing for function __finite <- main.
  Called from math_h.c:114.
[eva] Done for function __finite
[eva] math_h.c:115: assertion got status valid.
[eva] computing for function __finitef <- main.
  Called from math_h.c:116.
[eva] Done for function __finitef
[eva] math_h.c:117: assertion got status valid.
[eva] math_h.c:121: assertion got status valid.
[eva] Recording results for main
[eva] done for function main
[scope:rm_asserts] removing 1 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function main:
  __fc_errno ∈ [--..--]
  exponent ∈ [--..--] or UNINITIALIZED
  r ∈ {0}
  __retres ∈ {0}
