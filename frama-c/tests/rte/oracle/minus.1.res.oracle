[kernel] Parsing minus.c (with preprocessing)
[rte:annot] annotating function main
/* Generated by Frama-C */
int main(void)
{
  int __retres;
  int x = 0;
  int y = 0;
  int z = 0;
  unsigned int ux = (unsigned int)0;
  unsigned int uy = (unsigned int)0;
  unsigned int uz = (unsigned int)0;
  /*@ assert rte: signed_downcast: 0 ≤ 32767; */
  /*@ assert rte: signed_downcast: -32768 ≤ 0; */
  short sz = (short)0;
  /*@ assert rte: signed_overflow: -2147483647 ≤ x; */
  z = - x;
  /*@ assert rte: signed_overflow: -2147483647 ≤ 0x7fffffff; */
  /*@ assert rte: signed_overflow: -2147483648 ≤ (int)(-0x7fffffff) - 1; */
  /*@ assert rte: signed_overflow: (int)(-0x7fffffff) - 1 ≤ 2147483647; */
  /*@ assert rte: signed_overflow: -2147483647 ≤ (int)(-0x7fffffff) - 1; */
  z = - (-0x7fffffff - 1);
  /*@ assert rte: signed_downcast: (unsigned int)(-ux) ≤ 2147483647; */
  z = (int)(- ux);
  /*@ assert rte: signed_overflow: -2147483648 ≤ 65535 + 3; */
  /*@ assert rte: signed_overflow: 65535 + 3 ≤ 2147483647; */
  /*@ assert
      rte: signed_overflow:
        -2147483648 ≤ (int)((unsigned short)((int)(65535 + 3))) + x;
  */
  /*@ assert
      rte: signed_overflow:
        (int)((unsigned short)((int)(65535 + 3))) + x ≤ 2147483647;
  */
  /*@ assert
      rte: signed_downcast:
        (int)((int)((unsigned short)((int)(65535 + 3))) + x) ≤ 32767;
  */
  /*@ assert
      rte: signed_downcast:
        -32768 ≤ (int)((int)((unsigned short)((int)(65535 + 3))) + x);
  */
  sz = (short)((int)((unsigned short)(65535 + 3)) + x);
  /*@ assert
      rte: signed_downcast:
        (unsigned int)((unsigned int)(-0x80000000) - 1) ≤ 2147483647;
  */
  z = (int)(-0x80000000 - (unsigned int)1);
  /*@ assert
      rte: signed_downcast:
        (unsigned int)((unsigned int)(-2147483648U) - 1) ≤ 2147483647;
  */
  z = (int)(-2147483648U - (unsigned int)1);
  /*@ assert rte: signed_overflow: -2147483647 ≤ 2147483647; */
  /*@ assert rte: signed_overflow: -2147483648 ≤ (int)(-2147483647) - 1; */
  /*@ assert rte: signed_overflow: (int)(-2147483647) - 1 ≤ 2147483647; */
  /*@ assert
      rte: signed_overflow: -2147483648 ≤ (int)((int)(-2147483647) - 1) - 1;
  */
  /*@ assert
      rte: signed_overflow: (int)((int)(-2147483647) - 1) - 1 ≤ 2147483647;
  */
  z = (-2147483647 - 1) - 1;
  /*@ assert rte: signed_overflow: -2147483647 ≤ 0x7fffffff; */
  /*@ assert rte: signed_overflow: -2147483648 ≤ (int)(-0x7fffffff) - 1; */
  /*@ assert rte: signed_overflow: (int)(-0x7fffffff) - 1 ≤ 2147483647; */
  /*@ assert rte: signed_overflow: -2147483647 ≤ (int)(-0x7fffffff) - 1; */
  /*@ assert
      rte: signed_overflow:
        -2147483648 ≤ (int)(-((int)((int)(-0x7fffffff) - 1))) - 1;
  */
  /*@ assert
      rte: signed_overflow:
        (int)(-((int)((int)(-0x7fffffff) - 1))) - 1 ≤ 2147483647;
  */
  z = - (-0x7fffffff - 1) - 1;
  __retres = 0;
  return __retres;
}


