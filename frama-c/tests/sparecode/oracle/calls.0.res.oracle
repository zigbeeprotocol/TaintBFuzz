[kernel] Parsing calls.i (no preprocessing)
[sparecode] remove unused code...
[sparecode] selecting function main outputs and entry point
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  G âˆˆ {0}
[eva] computing for function f <- main.
  Called from calls.i:16.
[eva] Recording results for f
[eva] Done for function f
[eva] computing for function f <- main.
  Called from calls.i:17.
[eva] Recording results for f
[eva] Done for function f
[eva] computing for function f <- main.
  Called from calls.i:18.
[eva] Recording results for f
[eva] Done for function f
[eva] Recording results for main
[eva] done for function main
[pdg] computing for function main
[from] Computing for function f
[from] Done for function f
[pdg] done for function main
[sparecode] add selection in function 'main'
[sparecode] selecting output zones G
[sparecode] add selection in function 'main'
[pdg] computing for function f
[pdg] done for function f
[sparecode] look for annotations in function f
[sparecode] look for annotations in function main
[sparecode] finalize call input propagation
[sparecode] add selection in function 'main'
[sparecode] remove unused global declarations...
[sparecode] result in new project 'default without sparecode'.
/* Generated by Frama-C */
int G;
int f(int x, int y)
{
  G = y;
  return x;
}

int main(void)
{
  int a = 1;
  int b = 1;
  f(a,b);
  a = f(G + 1,b);
  G = 0;
  return a;
}


