[kernel] Parsing float-acsl.i (no preprocessing)
[kernel:acsl-float-compare] float-acsl.i:28: Warning: 
  comparing two float values as real values. You might want to use \le_float instead
[kernel:acsl-float-compare] float-acsl.i:30: Warning: 
  comparing two float values as real values. You might want to use \le_float instead
[kernel:acsl-float-compare] float-acsl.i:30: Warning: 
  comparing two float values as real values. You might want to use \le_float instead
/* Generated by Frama-C */
/*@ ensures \le_double(\result, (double)0.0);
    ensures \ge_double(\result, (double)(-1.0));
    ensures \lt_double(\result, (double)1.0);
    ensures \gt_double(\result, (double)(-2.0));
    ensures \ne_double(\result, (double)(-0.5));
    ensures \eq_double(\result, (double)(-1.0));
    assigns \result;
    assigns \result \from \nothing;
 */
double minus_one(void);

/*@ ensures \le_float(\result, (float)0.0);
    ensures \ge_float(\result, (float)(-1.0));
    ensures \lt_float(\result, (float)1.0);
    ensures \gt_float(\result, (float)(-2.0));
    ensures \ne_float(\result, (float)(-0.5));
    ensures \eq_float(\result, (float)(-1.0));
    assigns \result;
    assigns \result \from \nothing;
 */
float minus_onef(void);

/*@ requires (ℝ)x ≤ (ℝ)y;
    ensures (ℝ)\old(x) ≤ (ℝ)\result ≤ (ℝ)\old(y);
    assigns \result;
    assigns \result \from x, y;
 */
float test(float x, float y);

void main(void)
{
  double mone = minus_one();
  float monef = minus_onef();
  return;
}

/*@ requires 0. ≡ -(ℝ)f;
    requires 0. ≡ (ℝ)f + -(ℝ)f;
    requires 0. ≡ -(ℝ)d;
    requires 0. ≡ (ℝ)d + -(ℝ)d;
 */
void unop_coerce(float f, double d);


