[kernel] Parsing expr_to_term.i (no preprocessing)
/* Generated by Frama-C */
struct S {
   int y ;
   int z ;
};
/*@
predicate int_eq(int logical, int from_stmt_id) = logical ≡ from_stmt_id;
 */
int x[10];
struct S s;
int t;
/*@ ensures
      int_eq(*((int *)(0x1 + 0x2)), *((int *)((unsigned int)(0x1 + 0x2))));
    ensures int_eq(*((int *)(0x1 + 0x2)), (int)0);
 */
int f(void)
{
  int __retres;
  *((int *)((unsigned int)0x1 + (unsigned int)0x2)) = 0;
  __retres = 0;
  return __retres;
}

/*@ ensures int_eq(t, t);
    ensures int_eq(s.z, s.z);
    ensures int_eq(s.y, s.y);
    ensures int_eq(x[0], x[0]);
    ensures int_eq(x[0], (int)1);
    ensures int_eq(s.y, (int)2);
    ensures int_eq(s.z, (int)3);
    ensures int_eq(t, (int)4);
 */
int main(void)
{
  int __retres;
  x[0] = 1;
  s.y = 2;
  s.z = 3;
  t = 4;
  __retres = 0;
  return __retres;
}

/*@ ensures int_eq((int)(t ≢ 0? 0: 1), (int)(t ≢ 0? 0: 1));
    ensures int_eq((int)(t ≢ 0? 0: 1), (int)5);
 */
int g(void)
{
  int __retres;
  if (! t) {
    __retres = 2;
    goto return_label;
  }
  else {
    __retres = 3;
    goto return_label;
  }
  return_label: return __retres;
}

/*@ ensures int_eq((int)(t < 5? 1: 0), (int)(t < 5? 1: 0));
    ensures int_eq((int)(t < 5? 1: 0), (int)6);
 */
int h(void)
{
  int __retres;
  if (t < 5) {
    __retres = 2;
    goto return_label;
  }
  else {
    __retres = 3;
    goto return_label;
  }
  return_label: return __retres;
}

void expr_to_predicate(int x_0)
{
  return;
}

int z;
/*@ ensures (int)(t | 5) ≢ 0;
    ensures ¬(z < 5);
    ensures z ≢ 0 ∧ t ≢ 0;
    ensures z ≢ 0 ∧ t ≢ 0;
    ensures ¬(z < 5);
    ensures (int)(t | 5) ≢ 0;
 */
void i(void)
{
  expr_to_predicate((z && t) != 0);
  expr_to_predicate(! (z < 5));
  expr_to_predicate(t | 5);
  return;
}


