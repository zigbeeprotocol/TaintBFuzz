[kernel] Parsing loops.c (with preprocessing)
[eva] Analyzing an incomplete application starting at maybe_infinite
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  after ∈ [--..--]
[eva] loops.c:84: starting to merge loop iterations
[eva:alarm] loops.c:88: Warning: signed overflow. assert i + 2 ≤ 2147483647;
[eva] Recording results for maybe_infinite
[eva] done for function maybe_infinite
[pdg] computing for function maybe_infinite
[pdg] done for function maybe_infinite
[pdg] PDG for maybe_infinite
 {n1}: InCtrl
 {n2}: VarDecl : n
   -[a--]-> 3
 {n3}: In1
   -[a--]-> 2
 {n4}: VarDecl : s
 {n5}: VarDecl : i
 {n6}: int s = 0;
   -[-c-]-> 1
   -[a--]-> 4
 {n7}: int i = 0;
   -[-c-]-> 1
   -[a--]-> 5
 {n8}: n > 0
   -[-c-]-> 1
   -[--d]-> 2
   -[--d]-> 3
 {n9}: while(1)
   -[-c-]-> 1
   -[-c-]-> 8
   -[-c-]-> 9
 {n10}: block
   -[-c-]-> 1
   -[-c-]-> 8
   -[-c-]-> 9
 {n11}: i ++;
   -[-c-]-> 1
   -[a-d]-> 5
   -[--d]-> 7
   -[-c-]-> 8
   -[-c-]-> 9
   -[-c-]-> 10
   -[--d]-> 14
 {n12}: s < 10
   -[-c-]-> 1
   -[--d]-> 4
   -[--d]-> 6
   -[-c-]-> 8
   -[-c-]-> 9
   -[-c-]-> 10
   -[--d]-> 13
 {n13}: s += 2;
   -[-c-]-> 1
   -[a-d]-> 4
   -[--d]-> 6
   -[-c-]-> 8
   -[-c-]-> 9
   -[-c-]-> 10
   -[-c-]-> 12
   -[--d]-> 13
 {n14}: i += 2;
   -[-c-]-> 1
   -[a-d]-> 5
   -[-c-]-> 8
   -[-c-]-> 9
   -[-c-]-> 10
   -[--d]-> 11
 {n15}: s = 1;
   -[a--]-> 4
 {n16}: after = 0;
   -[-c-]-> 1
 {n17}: return s;
   -[-c-]-> 1
   -[--d]-> 4
   -[--d]-> 15
 {n18}: OutRet
   -[--d]-> 17
