[kernel] Parsing dpds_intra.c (with preprocessing)
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  G ∈ [--..--]
  S ∈ [--..--]
[eva:alarm] dpds_intra.c:113: Warning: 
  signed overflow. assert b + 1 ≤ 2147483647;
[eva:alarm] dpds_intra.c:113: Warning: 
  signed overflow. assert tmp + s.a ≤ 2147483647;
                   (tmp from b++)
[eva:alarm] dpds_intra.c:114: Warning: 
  signed overflow. assert -2147483648 ≤ 2 * a;
[eva:alarm] dpds_intra.c:114: Warning: 
  signed overflow. assert 2 * a ≤ 2147483647;
[eva:alarm] dpds_intra.c:124: Warning: 
  signed overflow. assert *p + 1 ≤ 2147483647;
[eva] computing for function test_struct <- main.
  Called from dpds_intra.c:126.
[eva] Recording results for test_struct
[eva] Done for function test_struct
[eva] computing for function test_if_simple <- main.
  Called from dpds_intra.c:127.
[eva:alarm] dpds_intra.c:51: Warning: 
  accessing uninitialized left-value. assert \initialized(&x);
[eva] Recording results for test_if_simple
[eva] Done for function test_if_simple
[eva] computing for function test_goto_simple <- main.
  Called from dpds_intra.c:128.
[eva] Recording results for test_goto_simple
[eva] Done for function test_goto_simple
[eva] computing for function test_goto_arriere <- main.
  Called from dpds_intra.c:129.
[eva:alarm] dpds_intra.c:66: Warning: 
  signed overflow. assert -2147483648 ≤ G - 1;
[eva:alarm] dpds_intra.c:65: Warning: 
  signed overflow. assert x + 1 ≤ 2147483647;
[eva] Recording results for test_goto_arriere
[eva] Done for function test_goto_arriere
[eva:alarm] dpds_intra.c:129: Warning: 
  signed overflow.
  assert res + tmp_3 ≤ 2147483647;
  (tmp_3 from test_goto_arriere())
[eva] computing for function test_goto_else <- main.
  Called from dpds_intra.c:130.
[eva] Recording results for test_goto_else
[eva] Done for function test_goto_else
[eva:alarm] dpds_intra.c:130: Warning: 
  signed overflow.
  assert res + tmp_4 ≤ 2147483647;
  (tmp_4 from test_goto_else())
[eva] computing for function test_simple_loop <- main.
  Called from dpds_intra.c:131.
[eva] dpds_intra.c:99: starting to merge loop iterations
[eva:alarm] dpds_intra.c:100: Warning: 
  signed overflow. assert s + 1 ≤ 2147483647;
[eva] Recording results for test_simple_loop
[eva] Done for function test_simple_loop
[eva:alarm] dpds_intra.c:131: Warning: 
  signed overflow.
  assert res + tmp_5 ≤ 2147483647;
  (tmp_5 from test_simple_loop(G))
[eva] computing for function multiple_global_inputs <- main.
  Called from dpds_intra.c:132.
[eva:alarm] dpds_intra.c:35: Warning: 
  signed overflow. assert -2147483648 ≤ S.a + G;
[eva:alarm] dpds_intra.c:35: Warning: 
  signed overflow. assert S.a + G ≤ 2147483647;
[eva] Recording results for multiple_global_inputs
[eva] Done for function multiple_global_inputs
[eva:alarm] dpds_intra.c:132: Warning: 
  signed overflow.
  assert res + tmp_6 ≤ 2147483647;
  (tmp_6 from multiple_global_inputs())
[eva:alarm] dpds_intra.c:134: Warning: 
  signed overflow. assert -2147483648 ≤ *p + res;
[eva:alarm] dpds_intra.c:134: Warning: 
  signed overflow. assert *p + res ≤ 2147483647;
[eva] Recording results for main
[eva] done for function main
[pdg] computing for function test_simple_loop
[pdg] done for function test_simple_loop
[pdg] PDG for test_simple_loop
 {n1}: InCtrl
 {n2}: VarDecl : n
   -[a--]-> 3
 {n3}: In1
   -[a--]-> 2
 {n4}: VarDecl : i
 {n5}: VarDecl : s
 {n6}: int s = 0;
   -[-c-]-> 1
   -[a--]-> 5
 {n7}: i = 0;
   -[-c-]-> 1
   -[a--]-> 4
 {n8}: while(1)
   -[-c-]-> 1
   -[-c-]-> 8
   -[-c-]-> 9
   -[-c-]-> 13
 {n9}: i < n
   -[-c-]-> 1
   -[--d]-> 2
   -[--d]-> 3
   -[--d]-> 4
   -[--d]-> 7
   -[-c-]-> 8
   -[-c-]-> 9
   -[--d]-> 12
   -[-c-]-> 13
 {n10}: block
   -[-c-]-> 1
   -[-c-]-> 8
   -[-c-]-> 9
   -[-c-]-> 13
 {n11}: s ++;
   -[-c-]-> 1
   -[a-d]-> 5
   -[--d]-> 6
   -[-c-]-> 8
   -[-c-]-> 9
   -[-c-]-> 10
   -[--d]-> 11
   -[-c-]-> 13
 {n12}: i ++;
   -[-c-]-> 1
   -[a-d]-> 4
   -[--d]-> 7
   -[-c-]-> 8
   -[-c-]-> 9
   -[--d]-> 12
   -[-c-]-> 13
 {n13}: break;
   -[-c-]-> 1
   -[-c-]-> 8
   -[-c-]-> 9
   -[-c-]-> 13
 {n14}: return s;
   -[-c-]-> 1
   -[--d]-> 5
   -[--d]-> 6
   -[--d]-> 11
 {n15}: OutRet
   -[--d]-> 14
