[kernel] Parsing ghost_else.i (no preprocessing)
/* Generated by Frama-C */
void if_ghost_else_one_line(int x) /*@ ghost (int y) */
{
  if (x) x ++;
  /*@ ghost else y ++;*/
  return;
}

void if_ghost_else_block(int x) /*@ ghost (int y) */
{
  if (x) x ++;
  /*@ ghost else y ++;*/
  return;
}

void if_ghost_else_multi_line_block(int x) /*@ ghost (int y) */
{
  if (x) x ++;
  /*@ ghost else {
    y ++;
    y += x;
    y --;
  }*/
  return;
}

void normal_if_ghost_else_intricated(int x) /*@ ghost (int y) */
{
  if (x) 
    if (x) x ++;
    /*@ ghost else y ++;*/
  return;
}

void ghost_else_plus_else_association(int x) /*@ ghost (int y) */
{
  if (x) {
    if (x) x ++;
    /*@ ghost else y --;*/
  }
  else x ++;
  return;
}


[kernel] Parsing ocode_ghost_else.c (with preprocessing)
[kernel] Parsing ghost_else.i (no preprocessing)
[kernel] ghost_else.i:1: Warning: 
  dropping duplicate def'n of func if_ghost_else_one_line at ghost_else.i:1 in favor of that at ocode_ghost_else.c:2
[kernel] ghost_else.i:7: Warning: 
  dropping duplicate def'n of func if_ghost_else_block at ghost_else.i:7 in favor of that at ocode_ghost_else.c:9
[kernel] ghost_else.i:15: Warning: 
  dropping duplicate def'n of func if_ghost_else_multi_line_block at ghost_else.i:15 in favor of that at ocode_ghost_else.c:16
[kernel] ghost_else.i:25: Warning: 
  dropping duplicate def'n of func normal_if_ghost_else_intricated at ghost_else.i:25 in favor of that at ocode_ghost_else.c:27
[kernel] ghost_else.i:32: Warning: 
  dropping duplicate def'n of func ghost_else_plus_else_association at ghost_else.i:32 in favor of that at ocode_ghost_else.c:35
/* Generated by Frama-C */
void if_ghost_else_one_line(int x) /*@ ghost (int y) */
{
  if (x) x ++;
  /*@ ghost else y ++;*/
  return;
}

void if_ghost_else_block(int x) /*@ ghost (int y) */
{
  if (x) x ++;
  /*@ ghost else y ++;*/
  return;
}

void if_ghost_else_multi_line_block(int x) /*@ ghost (int y) */
{
  if (x) x ++;
  /*@ ghost else {
    y ++;
    y += x;
    y --;
  }*/
  return;
}

void normal_if_ghost_else_intricated(int x) /*@ ghost (int y) */
{
  if (x) 
    if (x) x ++;
    /*@ ghost else y ++;*/
  return;
}

void ghost_else_plus_else_association(int x) /*@ ghost (int y) */
{
  if (x) {
    if (x) x ++;
    /*@ ghost else y --;*/
  }
  else x ++;
  return;
}


