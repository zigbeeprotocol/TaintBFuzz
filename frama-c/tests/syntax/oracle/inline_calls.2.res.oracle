[kernel] Parsing inline_calls.i (no preprocessing)
[kernel:CERT:MSC:37] inline_calls.i:40: Warning: 
  Body of function f1 falls-through. Adding a return statement
/* Generated by Frama-C */
int f(void)
{
  int __retres;
  __retres = 2;
  return __retres;
}

int volatile v;
int g(void)
{
  int __retres;
  if (v) {
    int tmp;
    tmp = f();
    __retres = tmp;
    goto return_label;
  }
  else {
    int tmp_0;
    {
      int __retres_5;
      __retres_5 = 3;
      tmp_0 = __retres_5;
    }
    __retres = tmp_0;
    goto return_label;
  }
  return_label: return __retres;
}

int h(void)
{
  int tmp;
  tmp = g();
  return tmp;
}

int i(void)
{
  int __retres;
  /*@ assert i: \true; */ ;
  __retres = 0;
  return __retres;
}

int rec(int x_0)
{
  int __retres;
  int tmp;
  if (x_0 < 0) {
    __retres = x_0;
    goto return_label;
  }
  tmp = rec(x_0 - 1);
  __retres = tmp;
  return_label: return __retres;
}

int f1(int a);

int g1(int a);

int volatile nondet;
int f1(int a)
{
  int __retres;
  if (nondet) g1(1);
  else 
    if (nondet) f1(2);
  /*@ assert missing_return: \false; */ ;
  __retres = 0;
  return __retres;
}

int g1(int a)
{
  if (nondet) g1(4);
  return a;
}

int main(void)
{
  int tmp_1;
  int local_init = i();
  int t = rec(local_init);
  f1(2);
  tmp_1 = h();
  return tmp_1;
}

int with_static(void);

static int with_static_count = 0;
int with_static(void)
{
  with_static_count ++;
  return with_static_count;
}

int call_with_static(void)
{
  int tmp;
  tmp = with_static();
  return tmp;
}

void builtin_acsl(void)
{
  float g_0 = 0.f;
  /*@ assert Â¬\is_NaN(g_0); */ ;
  return;
}

void call_builtin_acsl(void)
{
  builtin_acsl();
  return;
}

void f_slevel(void)
{
  /*@ slevel 0; */ ;
  return;
}

void call_f_slevel(void)
{
  f_slevel();
  return;
}

void pre_decl(void);

void middle_decl(void)
{
  pre_decl();
  return;
}

void post_decl(void);

extern int x;

int y = 23;
void pre_decl(void)
{
  x ++;
  y ++;
  post_decl();
  return;
}


