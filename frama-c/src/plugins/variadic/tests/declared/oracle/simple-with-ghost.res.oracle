[variadic] simple-with-ghost.i:1: Declaration of variadic function f.
[variadic] simple-with-ghost.i:9: 
  Generic translation of call to variadic function.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[kernel] simple-with-ghost.i:9: Warning: 
  No code nor implicit assigns clause for function f, generating default assigns from the prototype
[eva] using specification for function f
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function main:
  
/* Generated by Frama-C */
/*@ assigns \result;
    assigns \result \from a, __x1, c;
    
    behavior bhv:
      requires c > 0;
      requires a â‰¤ 42;
      ensures \result > 0;
 */
int f(int const a, int __x1, int c, void * const *__va_params)
     /*@ ghost (int x) */;

int main(void)
{
  int tmp;
  {
    int __va_arg0 = 4;
    int __va_arg1 = 5;
    int __va_arg2 = 6;
    void *__va_args[3] = {& __va_arg0, & __va_arg1, & __va_arg2};
    tmp = f(1,2,3,(void * const *)(__va_args)) /*@ ghost (7) */;
  }
  return tmp;
}


