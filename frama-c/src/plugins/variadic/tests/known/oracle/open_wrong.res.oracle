[variadic] FRAMAC_SHARE/libc/fcntl.h:121: 
  Declaration of variadic function fcntl.
[variadic] FRAMAC_SHARE/libc/fcntl.h:124: Declaration of variadic function open.
[variadic] FRAMAC_SHARE/libc/fcntl.h:131: 
  Declaration of variadic function openat.
[variadic:prototype] open_wrong.c:13: Warning: 
  No matching prototype found for this call to open.
  Expected candidates:
         open(char const *, int)
         open(char const *, int, mode_t)
  Given arguments:
         open(char const *, int, char const *)
[variadic] open_wrong.c:13: 
  Fallback translation of call open to a call to the specialized version open_fallback_1.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[kernel:annot:missing-spec] open_wrong.c:13: Warning: 
  Neither code nor specification for function open_fallback_1, generating default assigns from the prototype
[eva] using specification for function open_fallback_1
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function main:
  file ∈ {{ "file" }}
  flag ∈ {0}
  __retres ∈ {0}
/* Generated by Frama-C */
#include "fcntl.h"
/*@ assigns \result;
    assigns \result \from *(filename + (0 ..)), *(param0 + (0 ..)), flags;
 */
int open_fallback_1(char const *filename, int flags, char const *param0);

int main(void)
{
  int __retres;
  char *file = (char *)"file";
  int flag = 0;
  open((char const *)file,flag,""); /* open_fallback_1 */
  __retres = 0;
  return __retres;
}


