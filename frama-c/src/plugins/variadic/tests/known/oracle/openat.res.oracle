[variadic] FRAMAC_SHARE/libc/fcntl.h:121: 
  Declaration of variadic function fcntl.
[variadic] FRAMAC_SHARE/libc/fcntl.h:124: Declaration of variadic function open.
[variadic] FRAMAC_SHARE/libc/fcntl.h:131: 
  Declaration of variadic function openat.
[variadic] openat.c:8: 
  Translating call to the specialized version openat(int, char const *, int, mode_t).
[variadic] openat.c:9: 
  Translating call to the specialized version openat(int, char const *, int, mode_t).
[variadic:typing] openat.c:9: Warning: 
  Incorrect type for argument 4. The argument will be cast from int to mode_t.
[variadic:prototype] openat.c:10: Warning: 
  No matching prototype found for this call to openat.
  Expected candidates:
         openat(int, char const *, int)
         openat(int, char const *, int, mode_t)
  Given arguments:
         openat(int, char const *, int, double)
[variadic] openat.c:10: 
  Fallback translation of call openat to a call to the specialized version openat_fallback_1.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva] using specification for function __va_openat_mode_t
[kernel:annot:missing-spec] openat.c:10: Warning: 
  Neither code nor specification for function openat_fallback_1, generating default assigns from the prototype
[eva] using specification for function openat_fallback_1
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function main:
  flag ∈ {0}
  mode1 ∈ {0}
  mode2 ∈ {0}
  file ∈ {{ "file" }}
  __retres ∈ {0}
/* Generated by Frama-C */
#include "fcntl.h"
/*@ assigns \result;
    assigns \result \from *(filename + (0 ..)), dirfd, flags, param0;
 */
int openat_fallback_1(int dirfd, char const *filename, int flags,
                      double param0);

int main(void)
{
  int __retres;
  int flag = 0;
  mode_t mode1 = (mode_t)0;
  int mode2 = 0;
  char *file = (char *)"file";
  openat(0,(char const *)file,flag,mode1); /* __va_openat_mode_t */
  openat(0,(char const *)file,flag,(mode_t)mode2); /* __va_openat_mode_t */
  openat(0,(char const *)file,flag,3.0); /* openat_fallback_1 */
  __retres = 0;
  return __retres;
}


