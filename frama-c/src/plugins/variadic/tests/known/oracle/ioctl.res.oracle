[variadic] FRAMAC_SHARE/libc/stropts.h:164: 
  Declaration of variadic function ioctl.
[variadic] ioctl.c:13: 
  Translating call to the specialized version ioctl(int, int).
[variadic] ioctl.c:15: 
  Translating call to the specialized version ioctl(int, int, void *).
[variadic] ioctl.c:17: 
  Translating call to the specialized version ioctl(int, int, void *).
[variadic] ioctl.c:18: 
  Translating call to the specialized version ioctl(int, int, int).
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva] using specification for function __va_ioctl_void
[eva] using specification for function __va_ioctl_ptr
[eva:invalid-assigns] ioctl.c:17: 
  Completely invalid destination for assigns clause *((char *)argp + (0 ..)).
  Ignoring.
[eva] using specification for function __va_ioctl_int
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function main:
  fd1 ∈ {1}
  request1 ∈ {0}
  r1 ∈ [--..--]
  arg ∈ [--..--]
  r2 ∈ [--..--]
  p ∈ {0}
  __retres ∈ {0}
/* Generated by Frama-C */
#include "stropts.h"
struct st {
   int a ;
};
int main(void)
{
  int __retres;
  int fd1 = 1;
  int request1 = 0;
  int r1 = __va_ioctl_void(fd1,request1);
  char arg = (char)42;
  int r2 = __va_ioctl_ptr(fd1,request1,(void *)(& arg));
  struct st *p = (struct st *)0;
  ioctl(fd1,request1,(void *)p); /* __va_ioctl_ptr */
  ioctl(fd1,request1,42); /* __va_ioctl_int */
  __retres = 0;
  return __retres;
}


