[variadic] FRAMAC_SHARE/libc/fcntl.h:121: 
  Declaration of variadic function fcntl.
[variadic] FRAMAC_SHARE/libc/fcntl.h:124: Declaration of variadic function open.
[variadic] FRAMAC_SHARE/libc/fcntl.h:131: 
  Declaration of variadic function openat.
[variadic] open.c:7: 
  Translating call to the specialized version open(char const *, int, mode_t).
[variadic:typing] open.c:7: Warning: 
  Incorrect type for argument 3. The argument will be cast from int to mode_t.
[variadic] open.c:8: 
  Translating call to the specialized version open(char const *, int).
[variadic:prototype] open.c:9: Warning: 
  No matching prototype found for this call to open.
  Expected candidates:
         open(char const *, int)
         open(char const *, int, mode_t)
  Given arguments:
         open(char const *, int, int, int, char const *, int)
[variadic] open.c:9: 
  Fallback translation of call open to a call to the specialized version open_fallback_1.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva] using specification for function __va_open_mode_t
[eva] using specification for function __va_open_void
[kernel:annot:missing-spec] open.c:9: Warning: 
  Neither code nor specification for function open_fallback_1, generating default assigns from the prototype
[eva] using specification for function open_fallback_1
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function main:
  flag ∈ {0}
  mode ∈ {0}
  file ∈ {{ "file" }}
  fd1 ∈ [-1..1023]
  fd2 ∈ [-1..1023]
  fd3 ∈ [--..--]
  __retres ∈ {0}
/* Generated by Frama-C */
#include "fcntl.h"
/*@ assigns \result;
    assigns \result
      \from *(filename + (0 ..)), *(param2 + (0 ..)), flags, param0, param1,
            param3;
 */
int open_fallback_1(char const *filename, int flags, int param0, int param1,
                    char const *param2, int param3);

int main(void)
{
  int __retres;
  int flag = 0;
  int mode = 0;
  char *file = (char *)"file";
  int fd1 = __va_open_mode_t((char const *)file,flag,(mode_t)mode);
  int fd2 = __va_open_void((char const *)file,flag);
  int fd3 = open_fallback_1((char const *)file,flag,mode,3,"arg4",5);
  __retres = 0;
  return __retres;
}


