[variadic] max.c:3: Declaration of variadic function max.
[variadic] max.c:20: Generic translation of call to variadic function.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function max:
  i ∈ {6}
  val ∈ {-57}
  ret ∈ {42}
  list ∈ {{ &__va_args[6] }}
[eva:final-states] Values at end of function main:
  
/* Generated by Frama-C */
#include "stdarg.h"
int max(int n, void * const *__va_params)
{
  int i;
  int val;
  int ret;
  va_list list;
  list = __va_params;
  ret = *((int *)*list);
  list ++;
  i = 1;
  while (i < n) {
    val = *((int *)*list);
    list ++;
    if (ret > val) ret = ret; else ret = val;
    i ++;
  }
  return ret;
}

int main(void)
{
  int tmp;
  {
    int __va_arg0 = 3;
    int __va_arg1 = -7;
    int __va_arg2 = 14;
    int __va_arg3 = 42;
    int __va_arg4 = 23;
    int __va_arg5 = -57;
    int __va_arg6 = 73;
    int __va_arg7 = 92;
    int __va_arg8 = 8;
    void *__va_args[9] =
      {& __va_arg0,
       & __va_arg1,
       & __va_arg2,
       & __va_arg3,
       & __va_arg4,
       & __va_arg5,
       & __va_arg6,
       & __va_arg7,
       & __va_arg8};
    tmp = max(6,(void * const *)(__va_args));
  }
  return tmp;
}


