[variadic] maintain-formals-order.i:2: Declaration of variadic function f.
[variadic] maintain-formals-order.i:7: Declaration of variadic function g.
[variadic] maintain-formals-order.i:12: 
  Generic translation of call to variadic function.
[variadic] maintain-formals-order.i:13: 
  Generic translation of call to variadic function.
[variadic] maintain-formals-order.i:15: 
  Generic translation of call to variadic function.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function f:
  g_0 ∈ {0}
[eva:final-states] Values at end of function g:
  g_0 ∈ {0}
[eva:final-states] Values at end of function main:
  
/* Generated by Frama-C */
/*@ requires c ≡ 0 ∧ x ≡ 1; */
void f(int x, void * const *__va_params) /*@ ghost (int c) */
{
  /*@ ghost int g_0 = c; */
  return;
}

/*@ requires c ≡ 0 ∧ x ≡ 1 ∧ y ≡ 2; */
void g(int x, int y, void * const *__va_params) /*@ ghost (int c) */
{
  /*@ ghost int g_0 = c; */
  return;
}

void main(void)
{
  {
    void *__va_args[1] = {(void *)0};
    f(1,(void * const *)(__va_args)) /*@ ghost (0) */;
  }
  {
    int __va_arg0 = 2;
    int __va_arg1 = 3;
    void *__va_args_5[2] = {& __va_arg0, & __va_arg1};
    f(1,(void * const *)(__va_args_5)) /*@ ghost (0) */;
  }
  {
    int __va_arg0_7 = 3;
    int __va_arg1_9 = 4;
    void *__va_args_11[2] = {& __va_arg0_7, & __va_arg1_9};
    g(1,2,(void * const *)(__va_args_11)) /*@ ghost (0) */;
  }
  return;
}


