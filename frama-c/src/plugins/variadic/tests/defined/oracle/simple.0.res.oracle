[variadic] simple.c:9: Declaration of variadic function sum.
[variadic] simple.c:24: Generic translation of call to variadic function.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function sum:
  ret ∈ {42}
  i ∈ {5}
  list ∈ {{ &__va_args[5] }}
[eva:final-states] Values at end of function main:
  
/* Generated by Frama-C */
#include "stdarg.h"
/*@ requires n ≥ 0; */
int sum(int n, void * const *__va_params)
{
  va_list list;
  int ret = 0;
  int i = 0;
  list = __va_params;
  while (i < n) {
    {
      int tmp;
      tmp = *((int *)*list);
      list ++;
      ret += tmp;
    }
    i ++;
  }
  return ret;
}

int main(void)
{
  int tmp;
  {
    int __va_arg0 = 6;
    int __va_arg1 = 9;
    int __va_arg2 = 14;
    int __va_arg3 = 12;
    int __va_arg4 = 1;
    void *__va_args[5] =
      {& __va_arg0, & __va_arg1, & __va_arg2, & __va_arg3, & __va_arg4};
    tmp = sum(5,(void * const *)(__va_args));
  }
  return tmp;
}


