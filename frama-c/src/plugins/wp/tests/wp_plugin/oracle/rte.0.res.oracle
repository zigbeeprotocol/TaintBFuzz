# frama-c -wp -wp-rte [...]
[kernel] Parsing rte.i (no preprocessing)
[wp] Running WP plugin...
[wp:rte] function job: generate rte for memory access
[wp:rte] function job: generate rte for division by zero
[wp:rte] function job: generate rte for signed overflow
[wp] Warning: -wp-rte can annotate invalid bool value because -warn-invalid-bool is not set
[rte:annot] annotating function job
[wp:rte] function job2: generate rte for memory access
[wp:rte] function job2: generate rte for division by zero
[wp:rte] function job2: generate rte for signed overflow
[rte:annot] annotating function job2
[wp:rte] function job3: generate rte for memory access
[wp:rte] function job3: generate rte for division by zero
[wp:rte] function job3: generate rte for signed overflow
[rte:annot] annotating function job3
[wp] Warning: Missing RTE guards
[wp] Goal typed_job_ensures : not tried
[wp] Goal typed_job_assert_rte_mem_access : not tried
[wp] Goal typed_job_assert_rte_mem_access_2 : not tried
[wp] Goal typed_job_assert_rte_signed_overflow : not tried
[wp] Goal typed_job_assert_rte_signed_overflow_2 : not tried
[wp] Goal typed_job_assert_rte_mem_access_3 : not tried
[wp] Goal typed_job2_ensures : not tried
[wp] Goal typed_job3_ensures : not tried
/* Generated by Frama-C */
/*@ axiomatic Obs {
      predicate R(integer r) ;
      
      }
 */
/*@ ensures R(\result); */
int job(int *p, int n)
{
  int __retres;
  /*@ assert rte: mem_access: \valid(p); */
  /*@ assert rte: mem_access: \valid_read(p); */
  /*@ assert rte: signed_overflow: -2147483648 <= *p + n; */
  /*@ assert rte: signed_overflow: *p + n <= 2147483647; */
  *p += n;
  /*@ assert rte: mem_access: \valid_read(p); */
  __retres = *p;
  return __retres;
}

/*@ ensures R(\result); */
unsigned int job2(unsigned int a, unsigned int b)
{
  unsigned int __retres;
  __retres = a + b;
  return __retres;
}

_Bool X;
/*@ ensures R(\result); */
int job3(void)
{
  int __retres;
  __retres = (int)X;
  return __retres;
}


