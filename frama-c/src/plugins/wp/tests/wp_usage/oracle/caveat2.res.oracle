# frama-c -wp -wp-model 'Typed (Caveat)' [...]
[kernel] Parsing caveat2.i (no preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] caveat2.i:14: Warning: Undefined array-size (sint32[])
------------------------------------------------------------
  Function job
------------------------------------------------------------

Goal Post-condition 'N' in 'job':
Prove: true.

------------------------------------------------------------

Goal Post-condition 'A' in 'job':
caveat2.i:14: warning from Typed Model:
 - Warning: No allocation size for variable 'b'
   Reason: Undefined array-size (sint32[])
Let a = global(G_b_26).
Assume {
  Type: is_sint32(i_1) /\ is_sint32(n).
  (* Goal *)
  When: (0 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: n <= 3.
  Have: ({ Init_p_0 with Init_F1_S_n = true }) = Init_p_0.
  (* Invariant *)
  Have: 0 <= n.
  (* Loop assigns ... *)
  Have: ({ Init_p_0 with Init_F1_S_a = v_1 }) = Init_p_0.
  (* Invariant *)
  Have: (0 <= i_1) /\ (i_1 <= n).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(a, i_2)] = v[i_2]))).
  (* Else *)
  Have: n <= i_1.
}
Prove: Mint_0[shift_sint32(a, i)] = v[i].

------------------------------------------------------------

Goal Preservation of Invariant (file caveat2.i, line 21):
Prove: true.

------------------------------------------------------------

Goal Establishment of Invariant (file caveat2.i, line 21):
Prove: true.

------------------------------------------------------------

Goal Preservation of Invariant (file caveat2.i, line 22):
Let a = global(G_b_26).
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(1 + i).
  (* Goal *)
  When: (0 <= i_1) /\ (i_1 <= i).
  (* Pre-condition *)
  Have: n <= 3.
  Have: ({ Init_p_0 with Init_F1_S_n = true }) = Init_p_0.
  (* Invariant *)
  Have: 0 <= n.
  (* Loop assigns ... *)
  Have: ({ Init_p_0 with Init_F1_S_a = v_1 }) = Init_p_0.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= n).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i) ->
      (Mint_0[shift_sint32(a, i_2)] = v[i_2]))).
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: (-1) <= i.
}
Prove: v[i <- Mint_0[shift_sint32(a, i)]][i_1] = Mint_0[shift_sint32(a, i_1)].

------------------------------------------------------------

Goal Establishment of Invariant (file caveat2.i, line 22):
Prove: true.

------------------------------------------------------------

Goal Loop assigns (file caveat2.i, line 23):
Prove: true.

------------------------------------------------------------

Goal Assigns (file caveat2.i, line 15) in 'job' (1/2):
Prove: true.

------------------------------------------------------------

Goal Assigns (file caveat2.i, line 15) in 'job' (2/2):
Effect at line 25
Prove: true.

------------------------------------------------------------
[wp] caveat2.i:17: Warning: 
  Memory model hypotheses for function 'job':
  /*@
     behavior wp_typed_caveat:
       requires \valid(b + (..));
       requires \valid(p);
       requires \separated(p, b + (..));
     */
  void job(struct S *p, int n, int *b);
