# frama-c -wp [...]
[kernel] Parsing postassigns.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
------------------------------------------------------------
  Function job1
------------------------------------------------------------

Goal Post-condition (file postassigns.c, line 4) in 'job1':
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 5) in 'job1' (1/9):
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 5) in 'job1' (2/9):
Effect at line 10
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 5) in 'job1' (3/9):
Effect at line 10
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 5) in 'job1' (4/9):
Effect at line 11
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 5) in 'job1' (5/9):
Effect at line 11
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 5) in 'job1' (6/9):
Effect at line 12
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 5) in 'job1' (7/9):
Effect at line 12
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 5) in 'job1' (8/9):
Effect at line 13
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 5) in 'job1' (9/9):
Effect at line 13
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function job2
------------------------------------------------------------

Goal Post-condition (file postassigns.c, line 19) in 'job2':
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 20) in 'job2' (1/9):
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 20) in 'job2' (2/9):
Effect at line 25
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 20) in 'job2' (3/9):
Effect at line 25
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 20) in 'job2' (4/9):
Effect at line 26
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 20) in 'job2' (5/9):
Effect at line 26
Let x = A[1].
Assume {
  Type: is_sint32(x).
  (* Heap *)
  Type: (region(p.base) <= 0) /\ IsArray_sint32(A) /\ linked(Malloc_0).
  (* Goal *)
  When: !invalid(Malloc_0, shift_sint32(p, x), 1).
}
Prove: exists i : Z. (A[i] = x) /\ (0 <= i) /\ (i <= 3).

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 20) in 'job2' (6/9):
Effect at line 27
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 20) in 'job2' (7/9):
Effect at line 27
Let x = A[2].
Assume {
  Type: is_sint32(x).
  (* Heap *)
  Type: (region(p.base) <= 0) /\ IsArray_sint32(A) /\ linked(Malloc_0).
  (* Goal *)
  When: !invalid(Malloc_0, shift_sint32(p, x), 1).
}
Prove: exists i : Z. (A[i] = x) /\ (0 <= i) /\ (i <= 3).

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 20) in 'job2' (8/9):
Effect at line 28
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 20) in 'job2' (9/9):
Effect at line 28
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function job3
------------------------------------------------------------

Goal Preservation of Invariant (file postassigns.c, line 38):
Prove: true.

------------------------------------------------------------

Goal Establishment of Invariant (file postassigns.c, line 38):
Prove: true.

------------------------------------------------------------

Goal Loop assigns (file postassigns.c, line 39) (1/3):
Prove: true.

------------------------------------------------------------

Goal Loop assigns (file postassigns.c, line 39) (2/3):
Effect at line 41
Prove: true.

------------------------------------------------------------

Goal Loop assigns (file postassigns.c, line 39) (3/3):
Effect at line 42
Let x = i - 1.
Let a = shift_sint32(p, x).
Assume {
  Type: is_sint32(N) /\ is_sint32(i) /\ is_sint32(x).
  (* Heap *)
  Type: (region(p.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: !invalid(Malloc_0, a, 1).
  (* Invariant *)
  Have: 0 <= N.
  (* Invariant *)
  Have: (0 < i) /\ (i <= (1 + N)).
  (* Then *)
  Have: i <= N.
}
Prove: included(a, 1, shift_sint32(p, 0), N).

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 33) in 'job3' (1/2):
Prove: true.

------------------------------------------------------------

Goal Assigns (file postassigns.c, line 33) in 'job3' (2/2):
Effect at line 41
Prove: true.

------------------------------------------------------------
[wp] postassigns.c:7: Warning: 
  Memory model hypotheses for function 'job1':
  /*@
     behavior wp_typed:
       requires \separated(p + (..), &N);
       ensures \separated(p + (0 .. \at(N,Post) - 1), &N);
     */
  void job1(int *p);
[wp] postassigns.c:22: Warning: 
  Memory model hypotheses for function 'job2':
  /*@
     behavior wp_typed:
       requires \separated(p + (..), (int *)A + (..), &N);
       ensures \separated(p + A[0 .. \at(N,Post) - 1], (int *)A + (..), &N);
     */
  void job2(int *p);
[wp] postassigns.c:35: Warning: 
  Memory model hypotheses for function 'job3':
  /*@
     behavior wp_typed:
       requires \separated(p + (..), &N);
       ensures \separated(p + (0 .. \at(N,Post)), &N);
     */
  void job3(int *p);
