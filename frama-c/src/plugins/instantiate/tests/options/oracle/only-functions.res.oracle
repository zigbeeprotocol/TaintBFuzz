[kernel] Parsing only-functions.c (with preprocessing)
/* Generated by Frama-C */
#include "stddef.h"
#include "string.h"
#include "strings.h"
/*@ requires
      separation:
        \let __fc_len = len / 4;
          \separated(dest + (0 .. __fc_len - 1), src + (0 .. __fc_len - 1));
    requires aligned_end: len % 4 ≡ 0;
    requires
      valid_dest: \let __fc_len = len / 4; \valid(dest + (0 .. __fc_len - 1));
    requires
      valid_read_src:
        \let __fc_len = len / 4; \valid_read(src + (0 .. __fc_len - 1));
    ensures
      copied:
        \let __fc_len = len / 4;
        ∀ ℤ j0; 0 ≤ j0 < __fc_len ⇒ *(dest + j0) ≡ *(src + j0);
    ensures result: \result ≡ dest;
    assigns *(dest + (0 .. len / 4 - 1)), \result;
    assigns *(dest + (0 .. len / 4 - 1)) \from *(src + (0 .. len / 4 - 1));
    assigns \result \from dest;
 */
int *memcpy_int(int *dest, int const *src, size_t len)
{
  int *__retres;
  __retres = (int *)memcpy((void *)dest,(void const *)src,len);
  return __retres;
}

void foo(void)
{
  int dest[10];
  int src[10] = {0};
  memcpy_int(dest,src,sizeof(src));
  return;
}

void bar(void)
{
  int dest[10];
  int src[10] = {0};
  memcpy((void *)(dest),(void const *)(src),sizeof(src));
  return;
}

void baz(void)
{
  int dest[10];
  int src[10] = {0};
  memcpy((void *)(dest),(void const *)(src),sizeof(src));
  return;
}


