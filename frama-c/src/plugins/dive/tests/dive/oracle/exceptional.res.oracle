[kernel] Parsing exceptional.i (no preprocessing)
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva] exceptional.i:5: 
  Assigning imprecise value to __retres.
  The imprecision originates from Arithmetic {exceptional.i:5}
[eva] exceptional.i:5: 
  Assigning imprecise value to \result<gm>.
  The imprecision originates from Arithmetic {exceptional.i:5}
[eva] exceptional.i:16: 
  Assigning imprecise value to p.
  The imprecision originates from Arithmetic {exceptional.i:5}
[eva:alarm] exceptional.i:17: Warning: 
  accessing uninitialized left-value. assert \initialized(p);
[eva:alarm] exceptional.i:17: Warning: 
  out of bounds read. assert \valid_read(p);
[eva:alarm] exceptional.i:23: Warning: 
  signed overflow. assert -2147483648 ≤ a + x;
[eva:alarm] exceptional.i:23: Warning: 
  signed overflow. assert a + x ≤ 2147483647;
[eva:alarm] exceptional.i:23: Warning: 
  signed overflow. assert (int)(a + x) + (int)c ≤ 2147483647;
[eva] done for function main
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  2 functions analyzed (out of 2): 100% coverage.
  In these functions, 10 statements reached (out of 10): 100% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  5 alarms generated by the analysis:
       3 integer overflows
       1 invalid memory access
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  No logical properties have been reached by the analysis.
  ----------------------------------------------------------------------------
[dive] output to exceptional.dot
