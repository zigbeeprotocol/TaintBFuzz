(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)
Require Export jessie_why.

(*Why type*) Definition char_P: Set.
Admitted.

(*Why type*) Definition int32: Set.
Admitted.

(*Why type*) Definition int8: Set.
Admitted.

(*Why type*) Definition int_P: Set.
Admitted.

(*Why type*) Definition padding: Set.
Admitted.

(*Why type*) Definition void_P: Set.
Admitted.

(*Why logic*) Definition bitvector_of_char_P : (pointer char_P) -> bitvector.
Admitted.

(*Why logic*) Definition char_P_of_bitvector : bitvector -> (pointer char_P).
Admitted.

(*Why axiom*) Lemma bitvector_of_char_P_of_char_P_of_bitvector :
  (forall (x:bitvector), (bitvector_of_char_P (char_P_of_bitvector x)) = x).
Admitted.

(*Why logic*) Definition bitvector_of_int32 : int32 -> bitvector.
Admitted.

(*Why logic*) Definition int32_of_bitvector : bitvector -> int32.
Admitted.

(*Why axiom*) Lemma bitvector_of_int32_of_int32_of_bitvector :
  (forall (x:bitvector), (bitvector_of_int32 (int32_of_bitvector x)) = x).
Admitted.

(*Why logic*) Definition bitvector_of_int8 : int8 -> bitvector.
Admitted.

(*Why logic*) Definition int8_of_bitvector : bitvector -> int8.
Admitted.

(*Why axiom*) Lemma bitvector_of_int8_of_int8_of_bitvector :
  (forall (x:bitvector), (bitvector_of_int8 (int8_of_bitvector x)) = x).
Admitted.

(*Why logic*) Definition bitvector_of_int_P : (pointer int_P) -> bitvector.
Admitted.

(*Why logic*) Definition int_P_of_bitvector : bitvector -> (pointer int_P).
Admitted.

(*Why axiom*) Lemma bitvector_of_int_P_of_int_P_of_bitvector :
  (forall (x:bitvector), (bitvector_of_int_P (int_P_of_bitvector x)) = x).
Admitted.

(*Why logic*) Definition bitvector_of_void_P : (pointer void_P) -> bitvector.
Admitted.

(*Why logic*) Definition void_P_of_bitvector : bitvector -> (pointer void_P).
Admitted.

(*Why axiom*) Lemma bitvector_of_void_P_of_void_P_of_bitvector :
  (forall (x:bitvector), (bitvector_of_void_P (void_P_of_bitvector x)) = x).
Admitted.

(*Why logic*) Definition char_P_tag : (tag_id char_P).
Admitted.

(*Why axiom*) Lemma char_P_int : (int_of_tag char_P_tag) = 1.
Admitted.

(*Why axiom*) Lemma char_P_of_bitvector_of_bitvector_of_char_P :
  (forall (x:(pointer char_P)),
   (char_P_of_bitvector (bitvector_of_char_P x)) = x).
Admitted.

(*Why logic*) Definition char_P_of_pointer_address :
  (pointer unit) -> (pointer char_P).
Admitted.

(*Why axiom*) Lemma char_P_of_pointer_address_of_pointer_addr :
  (forall (p:(pointer char_P)),
   p = (char_P_of_pointer_address (pointer_address p))).
Admitted.

(*Why axiom*) Lemma char_P_parenttag_bottom :
  (parenttag char_P_tag (@bottom_tag char_P)).
Admitted.

(*Why axiom*) Lemma char_P_tags :
  (forall (x:(pointer char_P)),
   (forall (char_P_tag_table:(tag_table char_P)),
    (instanceof char_P_tag_table x char_P_tag))).
Admitted.

(* Why obligation from file "find_array.jc", line 34, characters 0-97: *)
(*Why goal*) Lemma div_def : 
  (forall (i:Z), 0 <= (i - 2 * ((Zdiv i 2))) /\ (i - 2 * ((Zdiv i 2))) <= 1).
Proof.
intros i.
cut (2>0); auto with zarith.
intros H; generalize (Z_div_mod_eq i 2 H).
generalize (Z_mod_lt i 2 H).
omega.
Save.

(*Why axiom*) Lemma div_def_as_axiom :
  (forall (i:Z), 0 <= (i - 2 * ((Zdiv i 2))) /\ (i - 2 * ((Zdiv i 2))) <= 1).
Admitted.

(* Why obligation from file "find_array.jc", line 38, characters 0-98: *)
(*Why goal*) Lemma div_inf : 
  (forall (i_0:Z), (0 <= i_0 -> 0 <= ((Zdiv i_0 2)) /\ ((Zdiv i_0 2)) <= i_0)).
Proof.
intros i; cut (2>0); auto with zarith.
intros H; generalize (Z_div_mod_eq i 2 H).
generalize (Z_mod_lt i 2 H).
omega.
Save.

(*Why axiom*) Lemma div_inf_as_axiom :
  (forall (i_0:Z), (0 <= i_0 -> 0 <= ((Zdiv i_0 2)) /\ ((Zdiv i_0 2)) <= i_0)).
Admitted.

(*Why logic*) Definition integer_of_int32 : int32 -> Z.
Admitted.

(*Why predicate*) Definition eq_int32  (x:int32) (y:int32)
  := (integer_of_int32 x) = (integer_of_int32 y).

(*Why logic*) Definition integer_of_int8 : int8 -> Z.
Admitted.

(*Why predicate*) Definition eq_int8  (x:int8) (y:int8)
  := (integer_of_int8 x) = (integer_of_int8 y).

(*Why logic*) Definition int32_of_integer : Z -> int32.
Admitted.

(*Why axiom*) Lemma int32_coerce :
  (forall (x:Z),
   ((-2147483648) <= x /\ x <= 2147483647 ->
    (integer_of_int32 (int32_of_integer x)) = x)).
Admitted.

(*Why axiom*) Lemma int32_of_bitvector_of_bitvector_of_int32 :
  (forall (x:int32), (eq_int32 (int32_of_bitvector (bitvector_of_int32 x)) x)).
Admitted.

(*Why axiom*) Lemma int32_range :
  (forall (x:int32), (-2147483648) <= (integer_of_int32 x) /\
   (integer_of_int32 x) <= 2147483647).
Admitted.

(*Why logic*) Definition int8_of_integer : Z -> int8.
Admitted.

(*Why axiom*) Lemma int8_coerce :
  (forall (x:Z),
   ((-128) <= x /\ x <= 127 -> (integer_of_int8 (int8_of_integer x)) = x)).
Admitted.

(*Why axiom*) Lemma int8_of_bitvector_of_bitvector_of_int8 :
  (forall (x:int8), (eq_int8 (int8_of_bitvector (bitvector_of_int8 x)) x)).
Admitted.

(*Why axiom*) Lemma int8_range :
  (forall (x:int8), (-128) <= (integer_of_int8 x) /\ (integer_of_int8 x) <=
   127).
Admitted.

(*Why logic*) Definition int_P_tag : (tag_id int_P).
Admitted.

(*Why axiom*) Lemma int_P_int : (int_of_tag int_P_tag) = 1.
Admitted.

(*Why axiom*) Lemma int_P_of_bitvector_of_bitvector_of_int_P :
  (forall (x:(pointer int_P)),
   (int_P_of_bitvector (bitvector_of_int_P x)) = x).
Admitted.

(*Why logic*) Definition int_P_of_pointer_address :
  (pointer unit) -> (pointer int_P).
Admitted.

(*Why axiom*) Lemma int_P_of_pointer_address_of_pointer_addr :
  (forall (p:(pointer int_P)),
   p = (int_P_of_pointer_address (pointer_address p))).
Admitted.

(*Why axiom*) Lemma int_P_parenttag_bottom :
  (parenttag int_P_tag (@bottom_tag int_P)).
Admitted.

(*Why axiom*) Lemma int_P_tags :
  (forall (x:(pointer int_P)),
   (forall (int_P_tag_table:(tag_table int_P)),
    (instanceof int_P_tag_table x int_P_tag))).
Admitted.

(*Why predicate*) Definition left_valid_struct_char_P  (p:(pointer char_P)) (a:Z) (char_P_alloc_table:(alloc_table char_P))
  := (offset_min char_P_alloc_table p) <= a.

(*Why predicate*) Definition left_valid_struct_int_P  (p:(pointer int_P)) (a:Z) (int_P_alloc_table:(alloc_table int_P))
  := (offset_min int_P_alloc_table p) <= a.

(*Why predicate*) Definition left_valid_struct_void_P  (p:(pointer void_P)) (a:Z) (void_P_alloc_table:(alloc_table void_P))
  := (offset_min void_P_alloc_table p) <= a.

(*Why axiom*) Lemma pointer_addr_of_char_P_of_pointer_address :
  (forall (p:(pointer unit)),
   p = (pointer_address (char_P_of_pointer_address p))).
Admitted.

(*Why axiom*) Lemma pointer_addr_of_int_P_of_pointer_address :
  (forall (p:(pointer unit)),
   p = (pointer_address (int_P_of_pointer_address p))).
Admitted.

(*Why logic*) Definition void_P_of_pointer_address :
  (pointer unit) -> (pointer void_P).
Admitted.

(*Why axiom*) Lemma pointer_addr_of_void_P_of_pointer_address :
  (forall (p:(pointer unit)),
   p = (pointer_address (void_P_of_pointer_address p))).
Admitted.

(*Why predicate*) Definition right_valid_struct_char_P  (p:(pointer char_P)) (b:Z) (char_P_alloc_table:(alloc_table char_P))
  := (offset_max char_P_alloc_table p) >= b.

(*Why predicate*) Definition right_valid_struct_int_P  (p:(pointer int_P)) (b:Z) (int_P_alloc_table:(alloc_table int_P))
  := (offset_max int_P_alloc_table p) >= b.

(*Why predicate*) Definition right_valid_struct_void_P  (p:(pointer void_P)) (b:Z) (void_P_alloc_table:(alloc_table void_P))
  := (offset_max void_P_alloc_table p) >= b.

(*Why predicate*) Definition sorted  (arr:(pointer int_P)) (length:int32) (int_P_int_M_arr_1_at_L:(memory int_P int32))
  := (forall (i_1:Z),
      (forall (j:Z),
       (0 <= i_1 /\ i_1 <= j /\ j < (integer_of_int32 length) ->
        (integer_of_int32 (select int_P_int_M_arr_1_at_L (shift arr i_1))) <=
        (integer_of_int32 (select int_P_int_M_arr_1_at_L (shift arr j)))))).

(*Why predicate*) Definition strict_valid_root_char_P  (p:(pointer char_P)) (a:Z) (b:Z) (char_P_alloc_table:(alloc_table char_P))
  := (offset_min char_P_alloc_table p) = a /\
     (offset_max char_P_alloc_table p) = b.

(*Why predicate*) Definition strict_valid_root_int_P  (p:(pointer int_P)) (a:Z) (b:Z) (int_P_alloc_table:(alloc_table int_P))
  := (offset_min int_P_alloc_table p) = a /\
     (offset_max int_P_alloc_table p) = b.

(*Why predicate*) Definition strict_valid_root_void_P  (p:(pointer void_P)) (a:Z) (b:Z) (void_P_alloc_table:(alloc_table void_P))
  := (offset_min void_P_alloc_table p) = a /\
     (offset_max void_P_alloc_table p) = b.

(*Why predicate*) Definition strict_valid_struct_char_P  (p:(pointer char_P)) (a:Z) (b:Z) (char_P_alloc_table:(alloc_table char_P))
  := (offset_min char_P_alloc_table p) = a /\
     (offset_max char_P_alloc_table p) = b.

(*Why predicate*) Definition strict_valid_struct_int_P  (p:(pointer int_P)) (a:Z) (b:Z) (int_P_alloc_table:(alloc_table int_P))
  := (offset_min int_P_alloc_table p) = a /\
     (offset_max int_P_alloc_table p) = b.

(*Why predicate*) Definition strict_valid_struct_void_P  (p:(pointer void_P)) (a:Z) (b:Z) (void_P_alloc_table:(alloc_table void_P))
  := (offset_min void_P_alloc_table p) = a /\
     (offset_max void_P_alloc_table p) = b.

(*Why predicate*) Definition valid_bitvector_struct_char_P  (p:(pointer unit)) (a:Z) (b:Z) (bitvector_alloc_table:(alloc_table unit))
  := (offset_min bitvector_alloc_table p) = a /\
     (offset_max bitvector_alloc_table p) = b.

(*Why predicate*) Definition valid_bitvector_struct_int_P  (p:(pointer unit)) (a:Z) (b:Z) (bitvector_alloc_table:(alloc_table unit))
  := (offset_min bitvector_alloc_table p) = a /\
     (offset_max bitvector_alloc_table p) = b.

(*Why predicate*) Definition valid_bitvector_struct_void_P  (p:(pointer unit)) (a:Z) (b:Z) (bitvector_alloc_table:(alloc_table unit))
  := (offset_min bitvector_alloc_table p) = a /\
     (offset_max bitvector_alloc_table p) = b.

(*Why predicate*) Definition valid_root_char_P  (p:(pointer char_P)) (a:Z) (b:Z) (char_P_alloc_table:(alloc_table char_P))
  := (offset_min char_P_alloc_table p) <= a /\
     (offset_max char_P_alloc_table p) >= b.

(*Why predicate*) Definition valid_root_int_P  (p:(pointer int_P)) (a:Z) (b:Z) (int_P_alloc_table:(alloc_table int_P))
  := (offset_min int_P_alloc_table p) <= a /\
     (offset_max int_P_alloc_table p) >= b.

(*Why predicate*) Definition valid_root_void_P  (p:(pointer void_P)) (a:Z) (b:Z) (void_P_alloc_table:(alloc_table void_P))
  := (offset_min void_P_alloc_table p) <= a /\
     (offset_max void_P_alloc_table p) >= b.

(*Why predicate*) Definition valid_struct_char_P  (p:(pointer char_P)) (a:Z) (b:Z) (char_P_alloc_table:(alloc_table char_P))
  := (offset_min char_P_alloc_table p) <= a /\
     (offset_max char_P_alloc_table p) >= b.

(*Why predicate*) Definition valid_struct_int_P  (p:(pointer int_P)) (a:Z) (b:Z) (int_P_alloc_table:(alloc_table int_P))
  := (offset_min int_P_alloc_table p) <= a /\
     (offset_max int_P_alloc_table p) >= b.

(*Why predicate*) Definition valid_struct_void_P  (p:(pointer void_P)) (a:Z) (b:Z) (void_P_alloc_table:(alloc_table void_P))
  := (offset_min void_P_alloc_table p) <= a /\
     (offset_max void_P_alloc_table p) >= b.

(*Why logic*) Definition void_P_tag : (tag_id void_P).
Admitted.

(*Why axiom*) Lemma void_P_int : (int_of_tag void_P_tag) = 1.
Admitted.

(*Why axiom*) Lemma void_P_of_bitvector_of_bitvector_of_void_P :
  (forall (x:(pointer void_P)),
   (void_P_of_bitvector (bitvector_of_void_P x)) = x).
Admitted.

(*Why axiom*) Lemma void_P_of_pointer_address_of_pointer_addr :
  (forall (p:(pointer void_P)),
   p = (void_P_of_pointer_address (pointer_address p))).
Admitted.

(*Why axiom*) Lemma void_P_parenttag_bottom :
  (parenttag void_P_tag (@bottom_tag void_P)).
Admitted.

(*Why axiom*) Lemma void_P_tags :
  (forall (x:(pointer void_P)),
   (forall (void_P_tag_table:(tag_table void_P)),
    (instanceof void_P_tag_table x void_P_tag))).
Admitted.

(* Why obligation from file "find_array.c", line 27, characters 21-76: *)
(*Why goal*) Lemma find_array_ensures_default_po_1 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: true = true /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  (* JC_59 *)
  (* JC_59 *)
  (forall (i_2:Z),
   ((integer_of_int32 high) < i_2 /\ i_2 < (integer_of_int32 length_0) ->
    (integer_of_int32 (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
    (integer_of_int32 query))).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 26, characters 21-70: *)
(*Why goal*) Lemma find_array_ensures_default_po_2 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: true = true /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  (* JC_60 *)
  (* JC_60 *)
  (forall (i_3:Z),
   (0 <= i_3 /\ i_3 < (integer_of_int32 low) ->
    (integer_of_int32 (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
    (integer_of_int32 query))).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 25, characters 21-34: *)
(*Why goal*) Lemma find_array_ensures_default_po_3 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: true = true /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  (* JC_61 *)
  (* JC_61 *) (integer_of_int32 high) < (integer_of_int32 length_0).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 24, characters 21-28: *)
(*Why goal*) Lemma find_array_ensures_default_po_4 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: true = true /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  (* JC_62 *) (* JC_62 *) 0 <= (integer_of_int32 low).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 32, characters 15-26: *)
(*Why goal*) Lemma find_array_ensures_default_po_5 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: true = true /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_13: (* JC_59 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_60 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_61 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_62 *) 0 <= (integer_of_int32 low0)),
  forall (HW_15: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_17: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_18: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_19: mean = result3),
  (* JC_70 *)
  (* JC_68 *) (* JC_68 *) (integer_of_int32 low0) <= (integer_of_int32 mean).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 32, characters 22-34: *)
(*Why goal*) Lemma find_array_ensures_default_po_6 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: true = true /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_13: (* JC_59 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_60 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_61 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_62 *) 0 <= (integer_of_int32 low0)),
  forall (HW_15: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_17: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_18: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_19: mean = result3),
  (* JC_70 *)
  (* JC_69 *) (* JC_69 *) (integer_of_int32 mean) <= (integer_of_int32 high0).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 27, characters 21-76: *)
(*Why goal*) Lemma find_array_ensures_default_po_7 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: true = true /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_13: (* JC_59 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_60 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_61 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_62 *) 0 <= (integer_of_int32 low0)),
  forall (HW_15: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_17: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_18: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_19: mean = result3),
  forall (HW_20: (* JC_70 *)
                 ((* JC_68 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_69 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (result4: int32),
  forall (HW_21: result4 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_26: (integer_of_int32 result4) <> (integer_of_int32 query)),
  forall (result5: int32),
  forall (HW_27: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_28: (integer_of_int32 result5) < (integer_of_int32 query)),
  forall (result6: int32),
  forall (HW_29: (integer_of_int32 result6) = ((integer_of_int32 mean) + 1)),
  forall (low1: int32),
  forall (HW_30: low1 = result6),
  (* JC_59 *)
  (* JC_59 *)
  (forall (i_2:Z),
   ((integer_of_int32 high0) < i_2 /\ i_2 < (integer_of_int32 length_0) ->
    (integer_of_int32 (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
    (integer_of_int32 query))).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 26, characters 21-70: *)
(*Why goal*) Lemma find_array_ensures_default_po_8 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: true = true /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_13: (* JC_59 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_60 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_61 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_62 *) 0 <= (integer_of_int32 low0)),
  forall (HW_15: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_17: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_18: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_19: mean = result3),
  forall (HW_20: (* JC_70 *)
                 ((* JC_68 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_69 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (result4: int32),
  forall (HW_21: result4 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_26: (integer_of_int32 result4) <> (integer_of_int32 query)),
  forall (result5: int32),
  forall (HW_27: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_28: (integer_of_int32 result5) < (integer_of_int32 query)),
  forall (result6: int32),
  forall (HW_29: (integer_of_int32 result6) = ((integer_of_int32 mean) + 1)),
  forall (low1: int32),
  forall (HW_30: low1 = result6),
  (* JC_60 *)
  (* JC_60 *)
  (forall (i_3:Z),
   (0 <= i_3 /\ i_3 < (integer_of_int32 low1) ->
    (integer_of_int32 (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
    (integer_of_int32 query))).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 25, characters 21-34: *)
(*Why goal*) Lemma find_array_ensures_default_po_9 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: true = true /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_13: (* JC_59 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_60 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_61 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_62 *) 0 <= (integer_of_int32 low0)),
  forall (HW_15: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_17: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_18: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_19: mean = result3),
  forall (HW_20: (* JC_70 *)
                 ((* JC_68 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_69 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (result4: int32),
  forall (HW_21: result4 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_26: (integer_of_int32 result4) <> (integer_of_int32 query)),
  forall (result5: int32),
  forall (HW_27: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_28: (integer_of_int32 result5) < (integer_of_int32 query)),
  forall (result6: int32),
  forall (HW_29: (integer_of_int32 result6) = ((integer_of_int32 mean) + 1)),
  forall (low1: int32),
  forall (HW_30: low1 = result6),
  (* JC_61 *)
  (* JC_61 *) (integer_of_int32 high0) < (integer_of_int32 length_0).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 24, characters 21-28: *)
(*Why goal*) Lemma find_array_ensures_default_po_10 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: true = true /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_13: (* JC_59 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_60 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_61 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_62 *) 0 <= (integer_of_int32 low0)),
  forall (HW_15: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_17: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_18: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_19: mean = result3),
  forall (HW_20: (* JC_70 *)
                 ((* JC_68 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_69 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (result4: int32),
  forall (HW_21: result4 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_26: (integer_of_int32 result4) <> (integer_of_int32 query)),
  forall (result5: int32),
  forall (HW_27: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_28: (integer_of_int32 result5) < (integer_of_int32 query)),
  forall (result6: int32),
  forall (HW_29: (integer_of_int32 result6) = ((integer_of_int32 mean) + 1)),
  forall (low1: int32),
  forall (HW_30: low1 = result6),
  (* JC_62 *) (* JC_62 *) 0 <= (integer_of_int32 low1).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 35, characters 20-37: *)
(*Why goal*) Lemma find_array_ensures_default_po_11 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: true = true /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_13: (* JC_59 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_60 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_61 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_62 *) 0 <= (integer_of_int32 low0)),
  forall (HW_15: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_17: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_18: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_19: mean = result3),
  forall (HW_20: (* JC_70 *)
                 ((* JC_68 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_69 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (result4: int32),
  forall (HW_21: result4 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_26: (integer_of_int32 result4) <> (integer_of_int32 query)),
  forall (result5: int32),
  forall (HW_27: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_33: (integer_of_int32 result5) >= (integer_of_int32 query)),
  (* JC_72 *)
  (* JC_72 *)
  (integer_of_int32
   (select int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))) >
  (integer_of_int32 query).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 27, characters 21-76: *)
(*Why goal*) Lemma find_array_ensures_default_po_12 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: true = true /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_13: (* JC_59 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_60 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_61 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_62 *) 0 <= (integer_of_int32 low0)),
  forall (HW_15: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_17: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_18: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_19: mean = result3),
  forall (HW_20: (* JC_70 *)
                 ((* JC_68 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_69 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (result4: int32),
  forall (HW_21: result4 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_26: (integer_of_int32 result4) <> (integer_of_int32 query)),
  forall (result5: int32),
  forall (HW_27: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_33: (integer_of_int32 result5) >= (integer_of_int32 query)),
  forall (HW_34: (* JC_72 *)
                 (integer_of_int32
                  (select
                   int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))) >
                 (integer_of_int32 query)),
  forall (result6: int32),
  forall (HW_35: (integer_of_int32 result6) = ((integer_of_int32 mean) - 1)),
  forall (high1: int32),
  forall (HW_36: high1 = result6),
  (* JC_59 *)
  (* JC_59 *)
  (forall (i_2:Z),
   ((integer_of_int32 high1) < i_2 /\ i_2 < (integer_of_int32 length_0) ->
    (integer_of_int32 (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
    (integer_of_int32 query))).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 26, characters 21-70: *)
(*Why goal*) Lemma find_array_ensures_default_po_13 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: true = true /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_13: (* JC_59 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_60 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_61 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_62 *) 0 <= (integer_of_int32 low0)),
  forall (HW_15: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_17: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_18: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_19: mean = result3),
  forall (HW_20: (* JC_70 *)
                 ((* JC_68 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_69 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (result4: int32),
  forall (HW_21: result4 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_26: (integer_of_int32 result4) <> (integer_of_int32 query)),
  forall (result5: int32),
  forall (HW_27: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_33: (integer_of_int32 result5) >= (integer_of_int32 query)),
  forall (HW_34: (* JC_72 *)
                 (integer_of_int32
                  (select
                   int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))) >
                 (integer_of_int32 query)),
  forall (result6: int32),
  forall (HW_35: (integer_of_int32 result6) = ((integer_of_int32 mean) - 1)),
  forall (high1: int32),
  forall (HW_36: high1 = result6),
  (* JC_60 *)
  (* JC_60 *)
  (forall (i_3:Z),
   (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
    (integer_of_int32 (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
    (integer_of_int32 query))).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 25, characters 21-34: *)
(*Why goal*) Lemma find_array_ensures_default_po_14 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: true = true /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_13: (* JC_59 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_60 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_61 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_62 *) 0 <= (integer_of_int32 low0)),
  forall (HW_15: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_17: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_18: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_19: mean = result3),
  forall (HW_20: (* JC_70 *)
                 ((* JC_68 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_69 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (result4: int32),
  forall (HW_21: result4 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_26: (integer_of_int32 result4) <> (integer_of_int32 query)),
  forall (result5: int32),
  forall (HW_27: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_33: (integer_of_int32 result5) >= (integer_of_int32 query)),
  forall (HW_34: (* JC_72 *)
                 (integer_of_int32
                  (select
                   int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))) >
                 (integer_of_int32 query)),
  forall (result6: int32),
  forall (HW_35: (integer_of_int32 result6) = ((integer_of_int32 mean) - 1)),
  forall (high1: int32),
  forall (HW_36: high1 = result6),
  (* JC_61 *)
  (* JC_61 *) (integer_of_int32 high1) < (integer_of_int32 length_0).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 24, characters 21-28: *)
(*Why goal*) Lemma find_array_ensures_default_po_15 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: true = true /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_13: (* JC_59 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_60 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_61 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_62 *) 0 <= (integer_of_int32 low0)),
  forall (HW_15: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_17: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_18: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_19: mean = result3),
  forall (HW_20: (* JC_70 *)
                 ((* JC_68 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_69 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (result4: int32),
  forall (HW_21: result4 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_26: (integer_of_int32 result4) <> (integer_of_int32 query)),
  forall (result5: int32),
  forall (HW_27: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_33: (integer_of_int32 result5) >= (integer_of_int32 query)),
  forall (HW_34: (* JC_72 *)
                 (integer_of_int32
                  (select
                   int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))) >
                 (integer_of_int32 query)),
  forall (result6: int32),
  forall (HW_35: (integer_of_int32 result6) = ((integer_of_int32 mean) - 1)),
  forall (high1: int32),
  forall (HW_36: high1 = result6),
  (* JC_62 *) (* JC_62 *) 0 <= (integer_of_int32 low0).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 15, characters 10-20: *)
(*Why goal*) Lemma find_array_ensures_exists_po_1 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (exists i_4:Z, 0 <= i_4 /\ i_4 <
                 (integer_of_int32 length_0) /\
                 (integer_of_int32
                  (select int_P_int_M_arr_2 (shift arr_0 i_4))) =
                 (integer_of_int32 query)) /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_11: (* JC_79 *) True),
  forall (HW_12: (* JC_74 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_75 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_76 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_77 *) 0 <= (integer_of_int32 low0)),
  forall (HW_13: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_14: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_15: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_16: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_17: mean = result3),
  forall (HW_18: (* JC_85 *)
                 ((* JC_83 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_84 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (result4: int32),
  forall (HW_19: result4 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_20: (integer_of_int32 result4) = (integer_of_int32 query)),
  forall (HW_21: (* JC_86 *) false = true),
  forall (__retres: int32),
  forall (HW_22: __retres = mean),
  forall (why__return: int32),
  forall (HW_23: why__return = __retres),
  (* JC_20 *) (* JC_17 *) (* JC_17 *) 0 <= (integer_of_int32 why__return).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 15, characters 13-28: *)
(*Why goal*) Lemma find_array_ensures_exists_po_2 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (exists i_4:Z, 0 <= i_4 /\ i_4 <
                 (integer_of_int32 length_0) /\
                 (integer_of_int32
                  (select int_P_int_M_arr_2 (shift arr_0 i_4))) =
                 (integer_of_int32 query)) /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_11: (* JC_79 *) True),
  forall (HW_12: (* JC_74 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_75 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_76 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_77 *) 0 <= (integer_of_int32 low0)),
  forall (HW_13: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_14: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_15: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_16: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_17: mean = result3),
  forall (HW_18: (* JC_85 *)
                 ((* JC_83 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_84 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (result4: int32),
  forall (HW_19: result4 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_20: (integer_of_int32 result4) = (integer_of_int32 query)),
  forall (HW_21: (* JC_86 *) false = true),
  forall (__retres: int32),
  forall (HW_22: __retres = mean),
  forall (why__return: int32),
  forall (HW_23: why__return = __retres),
  (* JC_20 *)
  (* JC_18 *)
  (* JC_18 *) (integer_of_int32 why__return) < (integer_of_int32 length_0).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 15, characters 32-53: *)
(*Why goal*) Lemma find_array_ensures_exists_po_3 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (exists i_4:Z, 0 <= i_4 /\ i_4 <
                 (integer_of_int32 length_0) /\
                 (integer_of_int32
                  (select int_P_int_M_arr_2 (shift arr_0 i_4))) =
                 (integer_of_int32 query)) /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_11: (* JC_79 *) True),
  forall (HW_12: (* JC_74 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_75 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_76 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_77 *) 0 <= (integer_of_int32 low0)),
  forall (HW_13: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_14: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_15: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_16: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_17: mean = result3),
  forall (HW_18: (* JC_85 *)
                 ((* JC_83 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_84 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (result4: int32),
  forall (HW_19: result4 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_20: (integer_of_int32 result4) = (integer_of_int32 query)),
  forall (HW_21: (* JC_86 *) false = true),
  forall (__retres: int32),
  forall (HW_22: __retres = mean),
  forall (why__return: int32),
  forall (HW_23: why__return = __retres),
  (* JC_20 *)
  (* JC_19 *)
  (* JC_19 *)
  (integer_of_int32
   (select int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 why__return)))) =
  (integer_of_int32 query).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 37, characters 6-32: *)
(*Why goal*) Lemma find_array_ensures_exists_po_4 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (exists i_4:Z, 0 <= i_4 /\ i_4 <
                 (integer_of_int32 length_0) /\
                 (integer_of_int32
                  (select int_P_int_M_arr_2 (shift arr_0 i_4))) =
                 (integer_of_int32 query)) /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_11: (* JC_79 *) True),
  forall (HW_12: (* JC_74 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_75 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_76 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_77 *) 0 <= (integer_of_int32 low0)),
  forall (HW_33: (integer_of_int32 low0) > (integer_of_int32 high0)),
  (* JC_88 *) (* JC_88 *) false = true.
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 15, characters 10-20: *)
(*Why goal*) Lemma find_array_ensures_exists_po_5 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (exists i_4:Z, 0 <= i_4 /\ i_4 <
                 (integer_of_int32 length_0) /\
                 (integer_of_int32
                  (select int_P_int_M_arr_2 (shift arr_0 i_4))) =
                 (integer_of_int32 query)) /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_11: (* JC_79 *) True),
  forall (HW_12: (* JC_74 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_75 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_76 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_77 *) 0 <= (integer_of_int32 low0)),
  forall (HW_33: (integer_of_int32 low0) > (integer_of_int32 high0)),
  forall (HW_34: (* JC_88 *) false = true),
  forall (result1: int32),
  forall (HW_35: (integer_of_int32 result1) = (-1)),
  forall (__retres: int32),
  forall (HW_36: __retres = result1),
  forall (why__return: int32),
  forall (HW_37: why__return = __retres),
  (* JC_20 *) (* JC_17 *) (* JC_17 *) 0 <= (integer_of_int32 why__return).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 15, characters 13-28: *)
(*Why goal*) Lemma find_array_ensures_exists_po_6 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (exists i_4:Z, 0 <= i_4 /\ i_4 <
                 (integer_of_int32 length_0) /\
                 (integer_of_int32
                  (select int_P_int_M_arr_2 (shift arr_0 i_4))) =
                 (integer_of_int32 query)) /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_11: (* JC_79 *) True),
  forall (HW_12: (* JC_74 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_75 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_76 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_77 *) 0 <= (integer_of_int32 low0)),
  forall (HW_33: (integer_of_int32 low0) > (integer_of_int32 high0)),
  forall (HW_34: (* JC_88 *) false = true),
  forall (result1: int32),
  forall (HW_35: (integer_of_int32 result1) = (-1)),
  forall (__retres: int32),
  forall (HW_36: __retres = result1),
  forall (why__return: int32),
  forall (HW_37: why__return = __retres),
  (* JC_20 *)
  (* JC_18 *)
  (* JC_18 *) (integer_of_int32 why__return) < (integer_of_int32 length_0).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 15, characters 32-53: *)
(*Why goal*) Lemma find_array_ensures_exists_po_7 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (exists i_4:Z, 0 <= i_4 /\ i_4 <
                 (integer_of_int32 length_0) /\
                 (integer_of_int32
                  (select int_P_int_M_arr_2 (shift arr_0 i_4))) =
                 (integer_of_int32 query)) /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_11: (* JC_79 *) True),
  forall (HW_12: (* JC_74 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_75 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_76 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_77 *) 0 <= (integer_of_int32 low0)),
  forall (HW_33: (integer_of_int32 low0) > (integer_of_int32 high0)),
  forall (HW_34: (* JC_88 *) false = true),
  forall (result1: int32),
  forall (HW_35: (integer_of_int32 result1) = (-1)),
  forall (__retres: int32),
  forall (HW_36: __retres = result1),
  forall (why__return: int32),
  forall (HW_37: why__return = __retres),
  (* JC_20 *)
  (* JC_19 *)
  (* JC_19 *)
  (integer_of_int32
   (select int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 why__return)))) =
  (integer_of_int32 query).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 33, characters 32-62: *)
(*Why goal*) Lemma find_array_ensures_not_exists_po_1 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (forall (i_5:Z),
                 (0 <= i_5 /\ i_5 < (integer_of_int32 length_0) ->
                  (integer_of_int32
                   (select int_P_int_M_arr_2 (shift arr_0 i_5))) <>
                  (integer_of_int32 query))) /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_11: (* JC_94 *) True),
  forall (HW_12: (* JC_89 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_90 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_91 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_92 *) 0 <= (integer_of_int32 low0)),
  forall (HW_13: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_14: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_15: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_16: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_17: mean = result3),
  forall (HW_18: (* JC_100 *)
                 ((* JC_98 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_99 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (result4: int32),
  forall (HW_19: result4 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_20: (integer_of_int32 result4) = (integer_of_int32 query)),
  (* JC_101 *) (* JC_101 *) false = true.
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 18, characters 10-23: *)
(*Why goal*) Lemma find_array_ensures_not_exists_po_2 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (forall (i_5:Z),
                 (0 <= i_5 /\ i_5 < (integer_of_int32 length_0) ->
                  (integer_of_int32
                   (select int_P_int_M_arr_2 (shift arr_0 i_5))) <>
                  (integer_of_int32 query))) /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_11: (* JC_94 *) True),
  forall (HW_12: (* JC_89 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_90 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_91 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_92 *) 0 <= (integer_of_int32 low0)),
  forall (HW_13: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (result1: int32),
  forall (HW_14: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (result2: int32),
  forall (HW_15: (integer_of_int32 result2) =
                 ((Zdiv (integer_of_int32 result1) 2))),
  forall (result3: int32),
  forall (HW_16: (integer_of_int32 result3) =
                 ((integer_of_int32 low0) + (integer_of_int32 result2))),
  forall (mean: int32),
  forall (HW_17: mean = result3),
  forall (HW_18: (* JC_100 *)
                 ((* JC_98 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_99 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (result4: int32),
  forall (HW_19: result4 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_20: (integer_of_int32 result4) = (integer_of_int32 query)),
  forall (HW_21: (* JC_101 *) false = true),
  forall (__retres: int32),
  forall (HW_22: __retres = mean),
  forall (why__return: int32),
  forall (HW_23: why__return = __retres),
  (* JC_25 *) (integer_of_int32 why__return) = (-1).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 18, characters 10-23: *)
(*Why goal*) Lemma find_array_ensures_not_exists_po_3 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (forall (i_5:Z),
                 (0 <= i_5 /\ i_5 < (integer_of_int32 length_0) ->
                  (integer_of_int32
                   (select int_P_int_M_arr_2 (shift arr_0 i_5))) <>
                  (integer_of_int32 query))) /\
                (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (result0: int32),
  forall (HW_9: (integer_of_int32 result0) =
                ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_10: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_11: (* JC_94 *) True),
  forall (HW_12: (* JC_89 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_90 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_91 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_92 *) 0 <= (integer_of_int32 low0)),
  forall (HW_33: (integer_of_int32 low0) > (integer_of_int32 high0)),
  forall (HW_34: (* JC_103 *) false = true),
  forall (result1: int32),
  forall (HW_35: (integer_of_int32 result1) = (-1)),
  forall (__retres: int32),
  forall (HW_36: __retres = result1),
  forall (why__return: int32),
  forall (HW_37: why__return = __retres),
  (* JC_25 *) (integer_of_int32 why__return) = (-1).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 23, characters 2-5: *)
(*Why goal*) Lemma find_array_safety_po_1 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  (-2147483648) <= ((integer_of_int32 length_0) - 1).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 23, characters 2-5: *)
(*Why goal*) Lemma find_array_safety_po_2 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  ((integer_of_int32 length_0) - 1) <= 2147483647.
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 31, characters 4-7: *)
(*Why goal*) Lemma find_array_safety_po_3 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  (-2147483648) <= ((integer_of_int32 high0) - (integer_of_int32 low0)).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 31, characters 4-7: *)
(*Why goal*) Lemma find_array_safety_po_4 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  ((integer_of_int32 high0) - (integer_of_int32 low0)) <= 2147483647.
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 31, characters 4-7: *)
(*Why goal*) Lemma find_array_safety_po_5 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (HW_15: (-2147483648) <=
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) /\
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) <=
                 2147483647),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  2 <> 0.
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 31, characters 4-7: *)
(*Why goal*) Lemma find_array_safety_po_6 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (HW_15: (-2147483648) <=
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) /\
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) <=
                 2147483647),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (HW_17: 2 <> 0),
  forall (result2: Z),
  forall (HW_18: result2 = ((Zdiv (integer_of_int32 result1) 2))),
  (-2147483648) <= result2.
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 31, characters 4-7: *)
(*Why goal*) Lemma find_array_safety_po_7 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (HW_15: (-2147483648) <=
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) /\
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) <=
                 2147483647),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (HW_17: 2 <> 0),
  forall (result2: Z),
  forall (HW_18: result2 = ((Zdiv (integer_of_int32 result1) 2))),
  result2 <= 2147483647.
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 31, characters 4-7: *)
(*Why goal*) Lemma find_array_safety_po_8 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (HW_15: (-2147483648) <=
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) /\
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) <=
                 2147483647),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (HW_17: 2 <> 0),
  forall (result2: Z),
  forall (HW_18: result2 = ((Zdiv (integer_of_int32 result1) 2))),
  forall (HW_19: (-2147483648) <= result2 /\ result2 <= 2147483647),
  forall (result3: int32),
  forall (HW_20: (integer_of_int32 result3) = result2),
  (-2147483648) <= ((integer_of_int32 low0) + (integer_of_int32 result3)).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 31, characters 4-7: *)
(*Why goal*) Lemma find_array_safety_po_9 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (HW_15: (-2147483648) <=
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) /\
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) <=
                 2147483647),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (HW_17: 2 <> 0),
  forall (result2: Z),
  forall (HW_18: result2 = ((Zdiv (integer_of_int32 result1) 2))),
  forall (HW_19: (-2147483648) <= result2 /\ result2 <= 2147483647),
  forall (result3: int32),
  forall (HW_20: (integer_of_int32 result3) = result2),
  ((integer_of_int32 low0) + (integer_of_int32 result3)) <= 2147483647.
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 33, characters 4-6: *)
(*Why goal*) Lemma find_array_safety_po_10 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (HW_15: (-2147483648) <=
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) /\
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) <=
                 2147483647),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (HW_17: 2 <> 0),
  forall (result2: Z),
  forall (HW_18: result2 = ((Zdiv (integer_of_int32 result1) 2))),
  forall (HW_19: (-2147483648) <= result2 /\ result2 <= 2147483647),
  forall (result3: int32),
  forall (HW_20: (integer_of_int32 result3) = result2),
  forall (HW_21: (-2147483648) <=
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) /\
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) <=
                 2147483647),
  forall (result4: int32),
  forall (HW_22: (integer_of_int32 result4) =
                 ((integer_of_int32 low0) + (integer_of_int32 result3))),
  forall (mean: int32),
  forall (HW_23: mean = result4),
  forall (HW_24: (* JC_48 *)
                 ((* JC_46 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_47 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  (offset_min int_P_arr_2_alloc_table arr_0) <= (integer_of_int32 mean).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 33, characters 4-6: *)
(*Why goal*) Lemma find_array_safety_po_11 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (HW_15: (-2147483648) <=
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) /\
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) <=
                 2147483647),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (HW_17: 2 <> 0),
  forall (result2: Z),
  forall (HW_18: result2 = ((Zdiv (integer_of_int32 result1) 2))),
  forall (HW_19: (-2147483648) <= result2 /\ result2 <= 2147483647),
  forall (result3: int32),
  forall (HW_20: (integer_of_int32 result3) = result2),
  forall (HW_21: (-2147483648) <=
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) /\
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) <=
                 2147483647),
  forall (result4: int32),
  forall (HW_22: (integer_of_int32 result4) =
                 ((integer_of_int32 low0) + (integer_of_int32 result3))),
  forall (mean: int32),
  forall (HW_23: mean = result4),
  forall (HW_24: (* JC_48 *)
                 ((* JC_46 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_47 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  (integer_of_int32 mean) <= (offset_max int_P_arr_2_alloc_table arr_0).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 34, characters 27-30: *)
(*Why goal*) Lemma find_array_safety_po_12 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (HW_15: (-2147483648) <=
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) /\
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) <=
                 2147483647),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (HW_17: 2 <> 0),
  forall (result2: Z),
  forall (HW_18: result2 = ((Zdiv (integer_of_int32 result1) 2))),
  forall (HW_19: (-2147483648) <= result2 /\ result2 <= 2147483647),
  forall (result3: int32),
  forall (HW_20: (integer_of_int32 result3) = result2),
  forall (HW_21: (-2147483648) <=
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) /\
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) <=
                 2147483647),
  forall (result4: int32),
  forall (HW_22: (integer_of_int32 result4) =
                 ((integer_of_int32 low0) + (integer_of_int32 result3))),
  forall (mean: int32),
  forall (HW_23: mean = result4),
  forall (HW_24: (* JC_48 *)
                 ((* JC_46 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_47 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (HW_25: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result5: int32),
  forall (HW_26: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_31: (integer_of_int32 result5) <> (integer_of_int32 query)),
  forall (HW_32: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result6: int32),
  forall (HW_33: result6 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_34: (integer_of_int32 result6) < (integer_of_int32 query)),
  (-2147483648) <= ((integer_of_int32 mean) + 1).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 34, characters 27-30: *)
(*Why goal*) Lemma find_array_safety_po_13 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (HW_15: (-2147483648) <=
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) /\
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) <=
                 2147483647),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (HW_17: 2 <> 0),
  forall (result2: Z),
  forall (HW_18: result2 = ((Zdiv (integer_of_int32 result1) 2))),
  forall (HW_19: (-2147483648) <= result2 /\ result2 <= 2147483647),
  forall (result3: int32),
  forall (HW_20: (integer_of_int32 result3) = result2),
  forall (HW_21: (-2147483648) <=
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) /\
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) <=
                 2147483647),
  forall (result4: int32),
  forall (HW_22: (integer_of_int32 result4) =
                 ((integer_of_int32 low0) + (integer_of_int32 result3))),
  forall (mean: int32),
  forall (HW_23: mean = result4),
  forall (HW_24: (* JC_48 *)
                 ((* JC_46 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_47 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (HW_25: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result5: int32),
  forall (HW_26: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_31: (integer_of_int32 result5) <> (integer_of_int32 query)),
  forall (HW_32: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result6: int32),
  forall (HW_33: result6 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_34: (integer_of_int32 result6) < (integer_of_int32 query)),
  ((integer_of_int32 mean) + 1) <= 2147483647.
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 28, characters 19-28: *)
(*Why goal*) Lemma find_array_safety_po_14 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (HW_15: (-2147483648) <=
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) /\
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) <=
                 2147483647),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (HW_17: 2 <> 0),
  forall (result2: Z),
  forall (HW_18: result2 = ((Zdiv (integer_of_int32 result1) 2))),
  forall (HW_19: (-2147483648) <= result2 /\ result2 <= 2147483647),
  forall (result3: int32),
  forall (HW_20: (integer_of_int32 result3) = result2),
  forall (HW_21: (-2147483648) <=
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) /\
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) <=
                 2147483647),
  forall (result4: int32),
  forall (HW_22: (integer_of_int32 result4) =
                 ((integer_of_int32 low0) + (integer_of_int32 result3))),
  forall (mean: int32),
  forall (HW_23: mean = result4),
  forall (HW_24: (* JC_48 *)
                 ((* JC_46 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_47 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (HW_25: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result5: int32),
  forall (HW_26: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_31: (integer_of_int32 result5) <> (integer_of_int32 query)),
  forall (HW_32: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result6: int32),
  forall (HW_33: result6 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_34: (integer_of_int32 result6) < (integer_of_int32 query)),
  forall (HW_35: (-2147483648) <= ((integer_of_int32 mean) + 1) /\
                 ((integer_of_int32 mean) + 1) <= 2147483647),
  forall (result7: int32),
  forall (HW_36: (integer_of_int32 result7) = ((integer_of_int32 mean) + 1)),
  forall (low1: int32),
  forall (HW_37: low1 = result7),
  0 <= ((* JC_57 *) ((integer_of_int32 high0) - (integer_of_int32 low0))).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 28, characters 19-28: *)
(*Why goal*) Lemma find_array_safety_po_15 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (HW_15: (-2147483648) <=
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) /\
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) <=
                 2147483647),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (HW_17: 2 <> 0),
  forall (result2: Z),
  forall (HW_18: result2 = ((Zdiv (integer_of_int32 result1) 2))),
  forall (HW_19: (-2147483648) <= result2 /\ result2 <= 2147483647),
  forall (result3: int32),
  forall (HW_20: (integer_of_int32 result3) = result2),
  forall (HW_21: (-2147483648) <=
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) /\
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) <=
                 2147483647),
  forall (result4: int32),
  forall (HW_22: (integer_of_int32 result4) =
                 ((integer_of_int32 low0) + (integer_of_int32 result3))),
  forall (mean: int32),
  forall (HW_23: mean = result4),
  forall (HW_24: (* JC_48 *)
                 ((* JC_46 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_47 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (HW_25: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result5: int32),
  forall (HW_26: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_31: (integer_of_int32 result5) <> (integer_of_int32 query)),
  forall (HW_32: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result6: int32),
  forall (HW_33: result6 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_34: (integer_of_int32 result6) < (integer_of_int32 query)),
  forall (HW_35: (-2147483648) <= ((integer_of_int32 mean) + 1) /\
                 ((integer_of_int32 mean) + 1) <= 2147483647),
  forall (result7: int32),
  forall (HW_36: (integer_of_int32 result7) = ((integer_of_int32 mean) + 1)),
  forall (low1: int32),
  forall (HW_37: low1 = result7),
  ((* JC_57 *) ((integer_of_int32 high0) - (integer_of_int32 low1))) <
  ((* JC_57 *) ((integer_of_int32 high0) - (integer_of_int32 low0))).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 35, characters 1-5: *)
(*Why goal*) Lemma find_array_safety_po_16 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (HW_15: (-2147483648) <=
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) /\
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) <=
                 2147483647),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (HW_17: 2 <> 0),
  forall (result2: Z),
  forall (HW_18: result2 = ((Zdiv (integer_of_int32 result1) 2))),
  forall (HW_19: (-2147483648) <= result2 /\ result2 <= 2147483647),
  forall (result3: int32),
  forall (HW_20: (integer_of_int32 result3) = result2),
  forall (HW_21: (-2147483648) <=
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) /\
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) <=
                 2147483647),
  forall (result4: int32),
  forall (HW_22: (integer_of_int32 result4) =
                 ((integer_of_int32 low0) + (integer_of_int32 result3))),
  forall (mean: int32),
  forall (HW_23: mean = result4),
  forall (HW_24: (* JC_48 *)
                 ((* JC_46 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_47 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (HW_25: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result5: int32),
  forall (HW_26: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_31: (integer_of_int32 result5) <> (integer_of_int32 query)),
  forall (HW_32: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result6: int32),
  forall (HW_33: result6 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_38: (integer_of_int32 result6) >= (integer_of_int32 query)),
  forall (HW_39: (* JC_54 *)
                 (integer_of_int32
                  (select
                   int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))) >
                 (integer_of_int32 query)),
  (-2147483648) <= ((integer_of_int32 mean) - 1).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 35, characters 1-5: *)
(*Why goal*) Lemma find_array_safety_po_17 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (HW_15: (-2147483648) <=
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) /\
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) <=
                 2147483647),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (HW_17: 2 <> 0),
  forall (result2: Z),
  forall (HW_18: result2 = ((Zdiv (integer_of_int32 result1) 2))),
  forall (HW_19: (-2147483648) <= result2 /\ result2 <= 2147483647),
  forall (result3: int32),
  forall (HW_20: (integer_of_int32 result3) = result2),
  forall (HW_21: (-2147483648) <=
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) /\
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) <=
                 2147483647),
  forall (result4: int32),
  forall (HW_22: (integer_of_int32 result4) =
                 ((integer_of_int32 low0) + (integer_of_int32 result3))),
  forall (mean: int32),
  forall (HW_23: mean = result4),
  forall (HW_24: (* JC_48 *)
                 ((* JC_46 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_47 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (HW_25: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result5: int32),
  forall (HW_26: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_31: (integer_of_int32 result5) <> (integer_of_int32 query)),
  forall (HW_32: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result6: int32),
  forall (HW_33: result6 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_38: (integer_of_int32 result6) >= (integer_of_int32 query)),
  forall (HW_39: (* JC_54 *)
                 (integer_of_int32
                  (select
                   int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))) >
                 (integer_of_int32 query)),
  ((integer_of_int32 mean) - 1) <= 2147483647.
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 28, characters 19-28: *)
(*Why goal*) Lemma find_array_safety_po_18 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (HW_15: (-2147483648) <=
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) /\
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) <=
                 2147483647),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (HW_17: 2 <> 0),
  forall (result2: Z),
  forall (HW_18: result2 = ((Zdiv (integer_of_int32 result1) 2))),
  forall (HW_19: (-2147483648) <= result2 /\ result2 <= 2147483647),
  forall (result3: int32),
  forall (HW_20: (integer_of_int32 result3) = result2),
  forall (HW_21: (-2147483648) <=
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) /\
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) <=
                 2147483647),
  forall (result4: int32),
  forall (HW_22: (integer_of_int32 result4) =
                 ((integer_of_int32 low0) + (integer_of_int32 result3))),
  forall (mean: int32),
  forall (HW_23: mean = result4),
  forall (HW_24: (* JC_48 *)
                 ((* JC_46 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_47 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (HW_25: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result5: int32),
  forall (HW_26: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_31: (integer_of_int32 result5) <> (integer_of_int32 query)),
  forall (HW_32: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result6: int32),
  forall (HW_33: result6 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_38: (integer_of_int32 result6) >= (integer_of_int32 query)),
  forall (HW_39: (* JC_54 *)
                 (integer_of_int32
                  (select
                   int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))) >
                 (integer_of_int32 query)),
  forall (HW_40: (-2147483648) <= ((integer_of_int32 mean) - 1) /\
                 ((integer_of_int32 mean) - 1) <= 2147483647),
  forall (result7: int32),
  forall (HW_41: (integer_of_int32 result7) = ((integer_of_int32 mean) - 1)),
  forall (high1: int32),
  forall (HW_42: high1 = result7),
  0 <= ((* JC_57 *) ((integer_of_int32 high0) - (integer_of_int32 low0))).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

(* Why obligation from file "find_array.c", line 28, characters 19-28: *)
(*Why goal*) Lemma find_array_safety_po_19 : 
  forall (arr_0: (pointer int_P)),
  forall (length_0: int32),
  forall (query: int32),
  forall (int_P_arr_2_alloc_table: (alloc_table int_P)),
  forall (int_P_int_M_arr_2: (memory int_P int32)),
  forall (HW_1: (* JC_11 *)
                ((* JC_7 *) (offset_min int_P_arr_2_alloc_table arr_0) <= 0 /\
                (* JC_8 *) (offset_max int_P_arr_2_alloc_table arr_0) >=
                ((integer_of_int32 length_0) - 1) /\
                (* JC_9 *) (sorted arr_0 length_0 int_P_int_M_arr_2) /\
                (* JC_10 *) (integer_of_int32 length_0) >= 0)),
  forall (result: int32),
  forall (HW_7: (integer_of_int32 result) = 0),
  forall (low: int32),
  forall (HW_8: low = result),
  forall (HW_9: (-2147483648) <= ((integer_of_int32 length_0) - 1) /\
                ((integer_of_int32 length_0) - 1) <= 2147483647),
  forall (result0: int32),
  forall (HW_10: (integer_of_int32 result0) =
                 ((integer_of_int32 length_0) - 1)),
  forall (high: int32),
  forall (HW_11: high = result0),
  forall (high0: int32),
  forall (low0: int32),
  forall (HW_12: (* JC_36 *) True),
  forall (HW_13: (* JC_31 *)
                 (forall (i_2:Z),
                  ((integer_of_int32 high0) < i_2 /\ i_2 <
                   (integer_of_int32 length_0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_2))) >
                   (integer_of_int32 query))) /\
                 (* JC_32 *)
                 (forall (i_3:Z),
                  (0 <= i_3 /\ i_3 < (integer_of_int32 low0) ->
                   (integer_of_int32
                    (select int_P_int_M_arr_2 (shift arr_0 i_3))) <
                   (integer_of_int32 query))) /\
                 (* JC_33 *) (integer_of_int32 high0) <
                 (integer_of_int32 length_0) /\
                 (* JC_34 *) 0 <= (integer_of_int32 low0)),
  forall (HW_14: (integer_of_int32 low0) <= (integer_of_int32 high0)),
  forall (HW_15: (-2147483648) <=
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) /\
                 ((integer_of_int32 high0) - (integer_of_int32 low0)) <=
                 2147483647),
  forall (result1: int32),
  forall (HW_16: (integer_of_int32 result1) =
                 ((integer_of_int32 high0) - (integer_of_int32 low0))),
  forall (HW_17: 2 <> 0),
  forall (result2: Z),
  forall (HW_18: result2 = ((Zdiv (integer_of_int32 result1) 2))),
  forall (HW_19: (-2147483648) <= result2 /\ result2 <= 2147483647),
  forall (result3: int32),
  forall (HW_20: (integer_of_int32 result3) = result2),
  forall (HW_21: (-2147483648) <=
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) /\
                 ((integer_of_int32 low0) + (integer_of_int32 result3)) <=
                 2147483647),
  forall (result4: int32),
  forall (HW_22: (integer_of_int32 result4) =
                 ((integer_of_int32 low0) + (integer_of_int32 result3))),
  forall (mean: int32),
  forall (HW_23: mean = result4),
  forall (HW_24: (* JC_48 *)
                 ((* JC_46 *) (integer_of_int32 low0) <=
                  (integer_of_int32 mean) /\
                 (* JC_47 *) (integer_of_int32 mean) <=
                 (integer_of_int32 high0))),
  forall (HW_25: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result5: int32),
  forall (HW_26: result5 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_31: (integer_of_int32 result5) <> (integer_of_int32 query)),
  forall (HW_32: (offset_min int_P_arr_2_alloc_table arr_0) <=
                 (integer_of_int32 mean) /\ (integer_of_int32 mean) <=
                 (offset_max int_P_arr_2_alloc_table arr_0)),
  forall (result6: int32),
  forall (HW_33: result6 =
                 (select
                  int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))),
  forall (HW_38: (integer_of_int32 result6) >= (integer_of_int32 query)),
  forall (HW_39: (* JC_54 *)
                 (integer_of_int32
                  (select
                   int_P_int_M_arr_2 (shift arr_0 (integer_of_int32 mean)))) >
                 (integer_of_int32 query)),
  forall (HW_40: (-2147483648) <= ((integer_of_int32 mean) - 1) /\
                 ((integer_of_int32 mean) - 1) <= 2147483647),
  forall (result7: int32),
  forall (HW_41: (integer_of_int32 result7) = ((integer_of_int32 mean) - 1)),
  forall (high1: int32),
  forall (HW_42: high1 = result7),
  ((* JC_57 *) ((integer_of_int32 high1) - (integer_of_int32 low0))) <
  ((* JC_57 *) ((integer_of_int32 high0) - (integer_of_int32 low0))).
Proof.
intuition.
(* FILL PROOF HERE *)
Admitted.

