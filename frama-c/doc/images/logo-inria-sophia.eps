%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: logoINRIA Sophiavect-287.eps
%%Creator: Adobe Illustrator(R) 12
%%AI8_CreatorVersion: 12.0.1
%AI9_PrintingDataBegin
%%For: Pierre Laurent
%%CreationDate: 27/06/07
%%BoundingBox: 0 0 269 47
%%HiResBoundingBox: 0 0 268.1402 46.4439
%%CropBox: 0 0 268.1402 46.4439
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%+ procset Adobe_CoolType_Core 2.23 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x205 R agm 4.3861 ct 5.530
%ADO_ContainsXMP: MainFirst
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 70 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/set_gvm
{
	currentglobal exch setglobal
}bdf
/reset_gvm
{
	setglobal
}bdf
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/thold_halftone
{ 
	level3
		{sethalftone currenthalftone}
		{
			dup /HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}
			{
				begin
				Width Height mul {
					Thresholds read {pop} if
				} repeat
				end
				currenthalftone
			} ifelse
		}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			/srcDataStrs [ imageDict begin
				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
				{
					Width Decode length 2 div mul cvi string
				} repeat
				end ] def		
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put
			imageDict /Decode [0 1] put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		DataSource 0 get type
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch get exec length exch 0 ne {pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type /dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{ 
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		dup /CSDBase known {
			/CSDBase get /CSD get_res /Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5 {cleartomark} bind def
}{
	/pdfmark_5 {pdfmark} bind def
}ifelse
/ReadBypdfmark_5
{
	2 dict begin
	/makerString exch def string /tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
		pop pop cleartomark exit
		}{
			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5
		} ifelse
	}loop
	end
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.
%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for
%% definitions of some fundamental procedures.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 201 dict dup begin put
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_in_pattern false def
/AGMCORE_currentpagedevice nd
/knockout_unitsq nd
currentglobal true setglobal
[/CSA /Gradient /Procedure]
{
	/Generic /Category findresource dup length dict copy /Category defineresource pop
} forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_&setoverprint /setoverprint ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not AGMCORE_currentpagedevice/OverrideSeparations known and
						{
							AGMCORE_currentpagedevice/OverrideSeparations get
							{
								/HqnSpots /ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
						}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace
							false
							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup (Cyan) eq exch /Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup (Magenta) eq exch /Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup (Yellow) eq exch /Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup (Black) eq exch /Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type /dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading /AGMCORE_ignoreshade known
					currentdict end exch
					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where {
						begin
						dup 0 get dup /Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[ 
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get [ 
									exch {
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									} forall 
								] 1 xpt
							}if
						}ifelse
						end
					} if
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin /clonedict load end def
	/clonearray Adobe_AGM_Utils begin /clonearray load end def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/getrampcolor
	{ 
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type /stringtype eq {indx get} if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		} for
		ColorSpaceFamily /Separation eq 
		{sep}
		{
			ColorSpaceFamily /DeviceN eq
			{devn} {setcolor}ifelse
		}ifelse
	} bdf
	/sssetbackground {aload pop setcolor} bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		c1x c2x eq
		{
			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
		} ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			/max { 2 copy gt { pop } {exch pop} ifelse } bdf
			/min { 2 copy lt { pop } {exch pop} ifelse } bdf
			rampdict begin
			40 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}
						{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{ /theta 89.99 def}
							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}
							{
								/L1maxX 0 def
								/L2maxX 0 def
							} ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						} ifelse
					} ifelse
				} ifelse
			} if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt { exch } if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			} if
		} if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		newpath
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}
		{
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			} repeat
			pop
		} ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}
			{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}
					{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{ /theta 89.99 def}
						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}
						{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					} ifelse
				} ifelse
			} ifelse
		} if
		grestore
		grestore
		end
		end
		end
		} ifelse
	} bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		x1 x2 eq
		{
			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			rampdict begin
			20 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt { exch } if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				} if
			} if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				} if
			} if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			} repeat
			pop
			ext1 {
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				} if
			} if
			grestore
			grestore
			end
			end
			end
		} ifelse
	} bdf
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
/capture_currentpagedevice {
	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf
} def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup //Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name /MappedCSA xdf}ifelse
} def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup () eq exch (All) eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc {setcolor} bdf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		7 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {
					/AliasedColorants false def
					exit
				}
				{
					new_LookupTables names_index get 0 get null eq {
						dup /Names get names_index get /name xdf
						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
						or or or not {
							/AliasedColorants false def
							exit
						} if
					} if
				} ifelse
			} for
			lut_entry_len 1 eq {
				/AliasedColorants false def
			} if
			AliasedColorants {
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	dup not {
		CSA map_csa
	} if
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants {
				/currentspotalias current_spot_alias def
				false set_spot_alias
			} if
			Names {
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				/names_index names_index 1 add def
			} forall
			AvoidAliasedColorants {
				currentspotalias set_spot_alias
			} if
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
 					0 0 0 0 /setcmykcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				{setcolor} bdf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSDBase known {
			CSDBase /CSD get_res begin
			currentdict /Names known {
				currentdict devncs
			}{
				1 currentdict sepcs
			} ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt /Names where {pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal {
					/tableIndex xdf
					Lookup dup type /stringtype eq {
						compCnt tableIndex map_index
					}{
						exec
					} ifelse
					/Names where {
						pop setdevicencolor
					}{
						setsepcolor
					} ifelse
					currentgray
					tableIndex exch
					HiVal mul cvi 
					NewLookup 3 1 roll put
				} for
				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
				end
			}{
				level3
				{
					currentdict /Names known {
						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt
					} ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict /Names known {
						Lookup dup type /stringtype eq
							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
					}{
						Lookup dup type /stringtype eq
							{/exch cvx /get cvx 255 /div cvx}
							{/exec cvx}ifelse
							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx
					} ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			} ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 
			begin
			CSDBase /CSD get_res begin
			currentdict /Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
			end
		}{
			/Lookup get 4 3 -1 roll map_index setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {
			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup /CSD eq {
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	} ifelse
}def
/del_res
{
	{
		aload pop exch
		dup /CSD eq {
			pop 
			{
				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef
			}forall
		}{
			exch
			{
				1 index undefineresource
			}forall
			pop
		} ifelse
	} forall
}def
/get_res
{
	dup /CSD eq {
		pop
		dup type dup /nametype eq exch /stringtype eq or {
			AGMCORE_CSD_cache exch get
		} if
	}{
		findresource
	} ifelse
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		/CSA get_res
	} if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	clonedict
	begin
	/OldPaintProc /PaintProc load def
	/PaintProc
	{
		mark exch
		dup /OldPaintProc get stopped
		{closefile restore end} if
		cleartomark
	}  def
	end
  } {pop} ifelse
} def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	1 index dup /ID get exch /Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}{null}ifelse
	Intent ne {
		Intent /ColorRendering {findresource} stopped
		{
			pop pop systemdict /findcolorrendering known
			{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				true
			}
			{false} ifelse
		}
		{true} ifelse
		{
			dup begin
			currentdict /TransformPQR known {
				currentdict /TransformPQR get aload pop
				3 {{} eq 3 1 roll} repeat or or
			}
			{true} ifelse
			currentdict /MatrixPQR known {
				currentdict /MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true} ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR [
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind
				] def
				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def
				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def
				currentdict end
			} if
			setcolorrendering_opt
		} if		
	}if
} def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict /ColorRendering known{
			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0} ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get /CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		currentdict/TintProc known currentdict/CSA known and 3 1 roll
		//Adobe_AGM_Core begin
		dup /customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			4 -1 roll{
				exch pop /sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
			pop
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
/set_def_ht
{
	AGMCORE_def_ht sethalftone
} def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.25 0
%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.25 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.25 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict /Adobe_CoolType_Data 2 copy known not
	 { 2 copy 10 dict put }
if
get
	 begin
	 /@opStackCountByLevel 32 dict def
	 /@opStackLevel 0 def
	 /@dictStackCountByLevel 32 dict def
	 /@dictStackLevel 0 def
	 end
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup /args
			7 index
			5 add array put
			put get
			}
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{ pop count }
			if
			dup /argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					 { (*) { pop stop } 128 string /Category resourceforall }
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup
					 {
						  /@shouldNotDisappearDictValue known
								{
										  {
												end
												currentdict 1 index eq
													 { pop exit }
												if
										  }
									 loop
								}
						  if
					 }
				if
				end
		}
		{ false }
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
		currentglobal false setglobal
	  userdict /Adobe_CoolType_Data 2 copy known not
		  { 2 copy 10 dict put }
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0
%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.
%%Version: 1.21 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 27 add dict copy }
	{ 27 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
				mark
				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put
					 {
					 ((Hex) 57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
					 }
				stopped
					 {
					 cleartomark
					 Adobe_CoolType_Utility /@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						  {
						  2 copy get 3 index eq
								{ 1 index length exch sub 1 sub { end } repeat exit }
								{ pop }
						  ifelse
						  }
					 for
					 pop pop
					 Adobe_CoolType_Utility /@eexecStartData get eexec
					 }
					 { cleartomark }
				ifelse
			} }
			{ {
				Adobe_CoolType_Utility /@eexecStartData get eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/AGMIMG_flushfilters
{
	dup type /arraytype ne
		{1 array astore}if
	aload length
		{
		dup type /filetype eq
			{
			dup status 1 index currentfile ne and
				{dup flushfile closefile}
				{pop}
			ifelse
			}{pop}ifelse
		} repeat
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator /imagemask eq{
 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									[ /Separation Name [/DeviceGray]
	 									{ 
	 										sep_colorspace_proc AGMCORE_get_ink_data
											1 exch sub
	 									} bind
										] AGMCORE_&setcolorspace
										/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0 () /SubFileDecode filter
				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0 () /SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx
			}for
		/convProc load /exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2 /add cvx /index cvx
			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx
			}for
	]bind cvx 0 () /SubFileDecode filter
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt {1 add 2 div cvi}{exit}ifelse
			} loop
			string
		} repeat
		end ] def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [ [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA get_csa_by_name 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							devn_alt_datasource
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get get_csa_by_name
				}{
					/Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2007-06-27T16:34:20+02:00</xap:CreateDate>
         <xap:ModifyDate>2007-06-27T16:45:29+02:00</xap:ModifyDate>
         <xap:MetadataDate>2007-06-27T16:45:29+02:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>44</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgALAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9DflvJJJ+!
 XflaSRi8j6R&#xA;YM7sakk20ZJJPUnFWR4qwfVfJvm25v8ARbqz1o26aff3dxfQF5Slza3Opw3aQkDvHbxFF8D8P2Sc&#xA;VXDyVr8kXmmG71Rpo9YuBPpf7+4DW6ippUMPTA2UKg/ZqTQhEVV9Z8malfR6lBFetFb3EunPYoJ5&#xA;0MUdoyidSyHl+9jDDrvXfFUWnlvVW8yXdzPeh9BnjfhZBpRKJJYIbdkLBuKxqtvzUj4uTt0pVlUb&#xA;oei3Om+VbTSHnMl5BaLDNcl5HLT8P3knNyXPKQlt8VYbD5C/MSDy3BpsfmRX1C11CO9jvZTMxlgt&#xA;LaOO3tpacTR5Yg0rb8tyVbkVxVkn+FryKXVZba6ZH1DVLK+jJlmYJb2727zQgEkL6jRzfCux50O3&#xA;RVi0f5bedyfNKyeYWhXWZomsZ4J7kyIq3zXDS0eqQSLbssCrEOBCgnwCqZ6Z5R89W0/liW51yOVd&#xA;FSUapEPVpfPcsyyFqnYRIVaOtfi22G+Ksi8pWOt6fpC2WrvHNPA7iO5jmkmMsbOWVn9SOMqw5U41&#xA;bp1xVS89zTQeVb6WGRopF9Li6EqwrMgNCMVT7FXiH/OV00sXlHRjG7ITqBqVJH+6X8M2vZQ9Z9zg&#xA;doEiA97wDSr7Uo1S6vvMtxpsTD4FgkmnumWtDxiR0VflJIle1c284jkI39zr4yPMypPIvN3l0fu5&#xA;fMXmxx/y0rLEtNx/ugzt2qf73298qOKX82H4+H6Gfix/nTUNT8s6xc6f+mtM8xnVfLhl4XWoXEsk&#xA;D2slK8bqB2kcMw+z6fPl0Wp2yUcoB4TGpff7lljkRYlcUD5T0hde81adoOiRs9zfThZNTuFDShBV&#xA;pZEi+NIwiAt+021QwrTJZZ8EDKXTowxDimIx+b7itLaK1tYbaLl6UCLHHyYs3FAFFWapJoOpzlSb&#xA;!
 Nu/AVcCuxV2KuxV2KuxV2KuxV2KuxV2KpL53llh8l6/LE7Ryx6bdvHIhKsrLA5BBG4IOKo
X8s/8A&#xA;yW/lT/tj6f8A9QseKskxV2KuxVgeof8AK0f8U+YPqPP9Cfo+4/Q3qfUfT+ufVrf6t6NP3/L1/X5/&#xA;WPg6U2xVkPl3/Ef+FYf0t6n6c9OX1PW+r8/U5t6dfq/7jpxpTt13rirD41/OhNG0iKZjJqUepEap&#xA;PD+jyZLBoOak81jj+GVuB4Irbdx8TKpqG/Mk3HmsLUFWp5cEgtRBx4L6ZjK/vDvz9X1u9OG2Krf+&#xA;QnfpHy761fq31jUP8QfVvqfp+n9aX6l/ffvfT9Dl/d/HT7XxYqgZz+b0Oja2H5y3X1u3l0yS2+ot&#xA;cCya5YXEUIkEcHqrboCnrKR8X22NQqqbr/ysb/F+m8vS/wANfVbX9Kf3XL616N99Y9P/AHZx9T6r&#xA;X6OO3qYqivy//wAYfoI/4t9T9Lesa+p9V+xwSnD6p8HHlypy+L6KYqqfmD/yiF//AM8f+TyYqyHF&#xA;Xhv/ADll/wAoho3/AG0D/wAmXza9k/Wfc4HaP0D3vnS08u3Uvl288wySRwWVpNHbQCSpa4uHIYxR&#xA;ChB9OOruTsBTxGbo5BxCPV1YxnhMkba6a2pCfzJ5imNtpjyMOUSJHLdzKAfQtY1UIKbc348Ix4ni&#xA;rRMq9Mef3e/8bsxHi9UuX3+5lmh6/PL5C84XF1Gll5be2h03SdKjJERvZJ0lQrXeWWOOIvJI3xdO&#xA;1BmPkxjxIAbyuyfJvhkvHInaPIBlf/OJ/lxZ9a1jzDKtRZQpaWxI/wB2Tks7L7qkYH+yzG7WyVER&#xA;72zs6G5k9w/M7zm/kvyTqPmVII7p7ERFbaWQxCQySrHxDBXNfj22zRu1VPy68yax5m8oWGv6pYRa&#xA;bJqSC4trWKVpqW7gGNnZkj+Jh8VAOlN8VYn+cP51N+W+q6HDNpsd/Yar6huHWZknhSF0DuI+DKwp&#xA;IONWFS!
 CPfFWcav5ktbbyfeeZbGSK5tILCTUbeVmKxSRJEZlJYBiFZR1piqh5C17V/MPlPTtc1Syi&#xA;0+fUoVuorSKRpQsMqhouTMkfxFTUim2KsT/NX82dW8neZPLmg6VpMGr3vmJ2hhjkuGhaOT1EjQsF&#xA;jk+BjJ19jiqV+cvzl86eQ5dMuPOHli0TSNQn+rvdadftcSRkDkT6UkERb4akAdadRhV7BgV5l59/&#xA;NjW/L/5i6F5K0nSbbUbrXYlkjlluZIjFWR0ZpFSKT4AsZaoqdjtir0xeXEcqcqb06VxVgf5xfmnb&#xA;/l35dh1BbeO/1G6m9O105pGjaRFUtLICqyHjGu5JFPfFU8/L7zdF5w8m6X5kig+rDUYi7W4f1PTd&#xA;HaN050WtGQjpiqp58/5QbzF/2zLz/qHfFVD8s/8AyW/lT/tj6f8A9QseKskxVJvOOsXujeWb/U7G&#xA;IT3VsgaKJlLgkuFNVDRk0Br9ofPFWO2/nnzE2t6BZHTRPp+q2trJd6hHG6iGe4W4coyh5Aq8bbrz&#xA;ajUFTyGKp75m17UtL9b6nbC49PStQv1qrNWez9H0Yvh7Seq23U02xVItN84+cdQTRuOji2nub65t&#xA;tWgkTkYIbSURyMrNNCKHcq45VFCqHFUDZ/mJ5xurrzTbjRgh0iQR6cfSmqWN5JbKkvqGGOVniRZ1&#xA;McgXiwBYdcKoXV/zT85WVpoksPl0yS6paQtcx8Jv9GvGnCyxyDbiqwRTt/rBRUg1xVM9V8++ZVfz&#xA;XFp2mKh0WNJdHnuYZmS8ERKXagKU3SQcV4nuDgVFeb/OHmPQ9Mv5YLSGaez+oK10YbmSBfrLMtxM&#xA;0UAlmZI+OypUiu5xVvRfOnmDUNU0CCXSjDa6zptnqEsqpI6xNNBdSXUZmH7sejIlqgrufU79lUZ+&#xA;XPmfVPMegPqGpRJBdCdojA!
 kTRcAI0biQ0sxYgufi+H/VGKoj8wf+UQv/APnj/wAnkxVkOKvEf+co&#xA;LK+1PT/K+j2
KCS5v9RaOFOhMhQIu/YfvNzm17LIiZSPQODromQiB1LyK7sdKvYRdXs7ReQvK1bGx&#xA;9KiyaleVDzCGp2e4b43kofTj4g1ooOxEiNh/eS39w/Z9pcOUQdz9Edvef2pf5c9Lzz53jh1SL07G&#xA;O1unsdLtW9KKOO0t5J4raLZyqFk+Ij4jUtXka5PJ+6x7c7G/vPNhj/ez35dzHNc8y6jrC28E3C30&#xA;+yDLYadbgpbwK5q3BSWYsx+07ks3cnLoYxH3nq0zyGXuD63/AOcfvLTaF+WWnGVSlzqhbUZgfCeg&#xA;i++FEOc72hl48p8tndaPHw4x57sP/wCcqr+4vtP8reR7J6XnmPU0qBueEZWJAw8DJcKf9jmGHJe3&#xA;6fY22n2FtYWq8La0iSCBPCOJQij6AMCvJ5vLemfmF+aPnWHVIxNpGkaVb+XoTQGk90TdzSx16SQs&#xA;EFflhV5PYeYPMukeX9W/IbV/U/TFxqVrp2j3gBKmxu7hWmNd6J6fxpXs5H7NMVfWltbQ2ttFbQKE&#xA;ggRY4kHRUQcVH0AYFfOmrWWp+ff+cl9Qi0u/NgfKGmmOy1ARxzrFdBaKxilDIxWe6NQf5MKoL8uT&#xA;P5y/M6bQPzevrm+81eWpWk0bTZPQh0+XhQuwihii9RxxWRTWjp2oMVfTmBXgHkf/AJ2//nJzzR5h&#xA;P7yx8rW50+0b7QSan1Y0P+VS4P04Ve561rGm6LpN3q2pzrb2FlG01xM3RUUVPzPYDucCvBrbQPzM&#xA;86Xmqec7vy/aXFp5j0+XTdCtr28a3n07TLlXjLiERSKZJkfmW513oNjTCqd/84las13+V0mnyEiX&#xA;SdQuLf0yKFUkCTj/AIeVsBV6b58/5QbzF/2zLz/qHfFVD8s//JceVP8Atj6f/wBQseKovzD5kXRp&#xA;tNhFlcXsupXH1aNLZC5T4S5d6AkI!
 Au57d8VVdJ1uXUNQ1W0ayktl0u4FsZ3eNllYxJMCgRiwHpzI&#xA;fi8aYqlF9+YEFoNfkbS72WHQGRJHjjr9YkfhRLcmiu37wbVriqbaR5m0rVPLyeYIZOGmSRyTrO3T&#xA;0oywMm3YhOXyxVjUP5veXptD0rWEgn9DVln9CImMOstvPHA0LUcqXZpaqFJqBXFUZq35hw6Zb6/N&#xA;PpsxGh3Ftaf3kKiea9aJYArM4CKTcJyZ6BRXwxVKbz87vLVnZaRdTWt1/uZtYrm0jQRvV5J1gMPJ&#xA;WKllq8lQeJRGIOKpnf8A5n6NbzeZYIIJbu48rpFLexxtEOaSgljEWcf3ZUq4am+Kqvmf8wbXQLK4&#xA;lnspJLqBrOIW3qwxK0t8xVEM0jrEoXgeTMaeFcVXab+Yuj6hqWk2EUM0cus2dnf2nqhFPpXsF3Oo&#xA;ZeXLlGtiQ9OhdcVTHyl5kXzHo6aollcWMMpHopcoUZ4yiusi1G6ty2IqD2OKof8AMH/lEL//AJ4/&#xA;8nkxVkOKsC/Nby2moWsOsT3sWn2ukWl6k17JXlCt56MUssa0IZxbCZUHXmy0zM0mSjw1dkfZ+2mj&#xA;NCxfKrfJHnDzONbvYYbOI2eg6an1bRtOrtFCDUs9PtSyt8cjd29gM6HDi4RvvI8y6TLk4jt9I5IH&#xA;y3rt1oOv2Gs2oDTWEyTKjfZcKfiRvZ1qp9snkgJxMT1Y458Mge5l+m/lzF5h/MHT9P0ItJ5b1mU3&#xA;NrddTDaKec8Uv8s1uvwMp6niR8LKTjS1HBjJl9Ufv/UXIGDiyAD6S+0IIIbeCOCBBHDEojijUUVV&#xA;UUVQPADOZJvd3jEdc/KryzrfnCx8238t4+raa0bWHGcrFF6R5BVjpSjHdvHArMSKggGhPcdvvxVj&#xA;3lDyNpHlX9JHTpbmZtWuTe3r3UpmZrhxR5KkA1bavyxV!
 bqf5feVtS84aZ5vurTlrukxtFa3AYgFW&#xA;DAc1GzcPUbjXpXFWROpZGUMVLAgMtKivc
VrirEPJv5WeWfKOs6lrGlvdvf6vU6jLdTmb1XLmTm3I&#xA;fa5Md/fFVLzz+UvlbzdfWmrTmfTPMFgytZ63p7iG6TgaqCxDK4B6cht2IqcVT7R9G1S00h7LUdbu&#xA;tUupFZDfyR28Ei1BAMawRRqCK/tct8VSnyJ+WHlnyRNqM2iG556qySXxuZjNzdCxD1YV5fvGr44q&#xA;ivOnkPRvONpDY6zLcmwhkWY2cMnpxSOh5KZQAS4B/ZJp7YqyJkrGUBKVBAZaVHuK1GKsS8ifld5a&#xA;8kTX0mhvdKuokPdRTzmWNpAa+oFI2belRiqY+fP+UG8xf9sy8/6h3xVOoYYYIUhhRYoYlCRRIAqq&#xA;qiiqqjYADoMVUL/StM1BYlv7OC8WFxLCJ40lCSDo68waMPEYqiEhijaRkRUaVucrKACzBQvJqdTx&#xA;UD5DFUKui6Mt1PdrYW4urrj9auBEnqS8CCvqPSrcSopXFVUWFiLNrIW8QsnVo3tuC+kUevJSlONG&#xA;qaimKubT7BiC1tESsv1hSUU0mpT1Rt9un7XXFVs+mabcRXEU9pDNFd0+txyRqyy0AUeoCKPQKBvi&#xA;qm+iaK8cMb6fbNHbqq26NDGRGqAqoQEfCFViBTxOKr20nSmEgazgYSh1lBjQ8llbnIG23Dt8TeJ3&#xA;xVu70vTL2KaG8tIbmK4CieOaNJFkCGqhwwIbielcVbg03TrcW4gtYYhaRfV7QJGq+lDRR6cdB8Cf&#xA;AvwjbYeGKrdP0rS9NieHTrOCyhkcyyR28aRK0jAAuQgALEAb4qiJYYpozHMiyRt9pHAZTQ13BxVd&#xA;iqF1PStM1Szay1O1ivbNypktrhFkjYqQy8kYFTQiu+SjMxNg0USiCKKXReR/JUJUw+X9NjKCilLO&#xA;BaClNqJkznyH+I/NiMcR0C6XyX5OmblLoOnSMBQM9pAxp4bpiM!
 8/5x+aTCPcidJ8u+X9G9X9EaZa&#xA;ad65Bn+qQRwcytac/TVeVKnrkZ5JS+okrGAjyFJhkGTsVdirsVdirsVQthqdhqAuDZzCcWs72s7L&#xA;WizRGkiVI3KnY077dRkpRI5oBBRWRS7FXYq7FXYqh9S1Gx02xnv7+ZbeztlLzTP9lVHfJRiZGhzQ&#xA;SALKoRDcW5V0EkMyUZHXZlYbhlYdwdwcilUxV2KvOvMP+OfW1X6l9d4fpKy+q/Vq+p6NGr/efuvR&#xA;5+ly9PtX1duWFUNqP+JPq2ofVf0j9e/SWrfo71vrFef1G99H0OXwen/c+l+x/L8VcVZF5S/Tf+It&#xA;a+s/Xv0N6Nh+ifrvTj6H7zjy/e+py/vOe9eu+BWE+Rf8bfpa1+tfXuX6au/05148/wBH2np/WfV+&#xA;Ljx58eH7utOG3p4VZN5g/wAUfp1f0b+kvT/TVl6/p0+r/Ufqo58fU+H0/V5epx3r17YFQGn/AOJP&#xA;01p317659e+uX31Snr/7z+rZ+t9Z5fuuPD1uNP3NePp/Fwwqh9M/xx/h+H9I/pb9J/U5+fqV+19a&#xA;j9X1PqvxcvS5+n6fx8K+n8XDFUPqf+NK+ZP0Z+kfr1NP+tfVOXH6z6NnX6r6/wANOHq+px3pTn+z&#xA;irGf+cqOnlb1eH91qXL1eP2uFv0r8PKvTv4Zt+yv4vh+l1+u6fFgnm71/wBIn6z9S+u/o3y56f1n&#xA;1f0hz9CLl+jfT/dfar6tfozLw8trq5+7n1aMl8W9XUff8GQj/Dv+PPOf1j6z+mqeY/qfo/VvQp6E&#xA;nP1+H+k04V4+p8HL7O+U+rw4V9Po7/7G308cu/1d39vzUNK5+ief1+voeVafpLjzp9c/3Tw/3R/v&#xA;uu9MlL4fx8vd96B8f4OfvZH5G/xj/wBDC619a/veV1+mK19P6jxT6lwr/wA8+Hf7Vc!
 oz8H5YV5V7&#xA;+rZi4vGP2+7p+Pev/wCch/8AFn+MfK/6O5en8P6C9Pr+k/rCV5dq8fT
pXbjywdncHBK/j7l1fFxR&#xA;r4e/8fpSnVvrX/K2Jvqnq/Wf8SaZ/iLhX6p9X9Sw+p/a/wB2fWPV40+Ljy7ZbCvB3/mGu/8Aiv7K&#xA;YT/vDX84X/saVda/5V5+jPzH/wAO/UfrPq2P1P6rx5fVK2Hr8KfsfWvtf5WCHiXj4r6/P1foSeD1&#xA;1V/2fpQNr+gf+Vj+b/V+t/p71vMP6M+q/VuHL6rJy9Xj/pX2OXDl8HKnHeuSPF4UOXD6L59/yQOH&#xA;xJfzt+7+1j/lj1P0VrH1L9G+p+gtNp+jvX9H1v0nb8Pr3P8A4+f5+G1OmXZeYu/qPP8Aqnl5NWHk&#xA;ar6Ry9/XzehfmP8A4n+q6z/ib6j+l/8AC1x6v6N9b6tx/SMPDj6v7yvHrXavtmHpuDbguuPr/Vcn&#xA;NxcJ4qvhPJNP+cYeX+GNcp6fo/pM+n6XHhX0I+XHjtlfan1x9zLRfSfezaP9Pf4D1r9OfWPrn1e7&#xA;p9b+qepw9A0/3j/dUrX3zF9PiDh5bd/6XIF8Jt83+RfrX6Y8v+t9b/R/6M1L9C+vT0eH6Muvr3pU&#xA;/wCXzl9FM3eeuGXK7F/6YV9jq8POPxr5G/td5O+rf8q8v+P6P4/pXRvV+v1+q8v3/L636fxen/NT&#xA;frjmvxBz+mXLn05Jx14fTmOf6Wa/lt+jv9xn6V+qfof635n+s+jy/R31X6vb+r6Hqb/V+PKle1cx&#xA;dTe9XxVD33Z+1vwVQuq9Xu/sYl5h/wAKf8qm0L9G/VfX/TV3+k/T41+3dfV/V/548eNe2ZGPj8aV&#xA;39Ir7LaJ8Phiq+o/pRer/VP015a9Cn1z9HeXfqH1b0KV9dudK/6ZWnX6r3+1tTBC+GXdc/x3fNlK&#xA;uKPuj3d/z+SbeT/rP/K69S/RPH9KfpLzFy9T0vTr+89D1PR/0jh6tK+t8H8nxZVmrwBfKofj!
 u+TL&#xA;F/emudy/Hf8ANIPL/wCm/wDlXnnz9Lep+iPrOnfpb1+XqfpH9Iw/WaU/a4f3vf7OXZOHxIVz3r3V&#xA;s1xvglfKxfvvdBa59a/wZqf6R9an6f0v0Pr3H1/qf6Ln+qetTbl9W9OuShXGK/my5d/EL+1E/p3/&#xA;AJw5+7ZGyfVP8eeRfW+r8fqWj+jzp6dPrDcfwpWmR38Ofvl9zM1xx9wf/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:06EC73DF264611DCB2CDB7360D2D9FF5</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:24AA73A4266011DCB2CDB7360D2D9FF5</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:06EC73DE264611DCB2CDB7360D2D9FF5</stRef:instanceID>
            <stRef:documentID>uuid:EF08713406CB11DCB8A3F987B3A0F5DC</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_AGM_Core/capture_currentpagedevice get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -46.4438 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 46.4438 li
268.14 46.4438 li
268.14 0 li
cp
clp
[1 0 0 1 0 0 ] concat
0.4 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
267.94 0.871582 mo
267.94 33.6816 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
@
267.94 0.871582 mo
267.94 34.1372 li
@
153.831 17.4546 mo
154.769 14.3091 155.406 11.5522 156.444 8.76807 cv
157.383 6.2915 159.546 1.7876 160.005 1.01025 cv
160.025 0.976074 159.903 0.838379 159.96 0.92041 cv
155.781 2.58057 151.969 5.06689 148.445 7.84424 cv
148.621 8.10205 148.8 8.37158 148.919 8.6499 cv
148.984 8.79736 149.152 9.21143 149.094 9.09912 cv
149.046 9.01123 149.201 9.29834 149.242 9.47217 cv
149.268 9.59033 149.33 9.84814 149.351 9.96631 cv
149.388 10.1519 149.487 10.4458 149.507 10.6343 cv
149.539 10.8804 149.601 11.062 149.566 11.3062 cv
149.505 11.73 149.58 11.6694 149.576 11.9771 cv
149.574 12.2378 149.537 11.939 149.529 12.1519 cv
149.521 12.2964 149.537 12.7261 149.483 12.856 cv
149.416 13.0181 149.539 12.9731 149.326 13.4233 cv
149.208 13.6743 149.207 13.6968 149.119 13.9194 cv
149.075 14.0386 149.064 14.1636 149.017 14.2964 cv
148.943 14.4976 148.715 14.9087 148.706 14.9858 cv
148.69 15.1636 148.69 15.0552 148.419 15.4741 cv
148.232 15.7622 148.054 16.0454 147.75 16.3364 cv
147.667 16.4175 147.671 16.5493 147.593 16.6353 cv
147.593 16.6353 li
147.464 16.7788 147.279 16.8589 147.023 17.1948 cv
146.941 17.2788 146.929 17.4312 146.845 17.5103 cv
146.665 17.6841 146.55 17.6772 146.36 17.8374 cv
146.176 17.9956 146.041 18.1284 145.755 18.4653 cv
145.449 18.7036 145.009 18.8677 144.792 19.019 cv
144.745 19.0825 144.605 19.1841 144.349 19.3345 cv
144.248 19.395 144.128 19.4624 143.99 19.5376 cv
143.908 19.5815 143.82 19.6997 143.724 19.7524 cv
143.251 19.9302 142.725 20.1968 141.982 20.5591 cv
141.97 20.7017 141.96 20.8423 141.955 20.9849 cv
141.946 21.1372 141.906 21.2915 141.904 21.4438 cv
141.902 21.5376 141.902 21.6665 141.904 21.7612 cv
141.904 21.9019 141.943 22.0083 141.949 22.1499 cv
141.955 22.2798 141.962 22.5161 141.972 22.645 cv
141.992 22.9263 142.058 23.2456 142.097 23.5278 cv
142.106 23.5981 142.046 23.5981 142.058 23.6694 cv
142.099 23.9341 142.183 24.0337 142.228 24.2407 cv
142.253 24.3618 142.216 24.5161 142.273 24.7622 cv
142.299 24.8823 142.326 24.9302 142.355 25.0493 cv
142.412 25.2759 142.472 25.5698 142.536 25.7915 cv
142.562 25.8833 142.589 25.9771 142.619 26.0688 cv
142.656 26.188 142.728 26.1987 142.767 26.3149 cv
142.841 26.5327 142.847 26.6392 142.927 26.8501 cv
143.009 27.063 143.113 27.3062 143.22 27.6958 cv
143.244 27.7817 143.361 27.8237 143.399 27.9048 cv
143.539 28.2163 143.607 28.5425 143.881 28.8999 cv
143.929 28.9644 143.884 29.0757 143.919 29.147 cv
143.97 29.2397 144.021 29.2261 144.07 29.3198 cv
144.242 29.6362 144.314 29.8042 144.517 30.1265 cv
144.566 30.2026 144.666 30.521 144.767 30.5601 cv
144.875 30.603 144.896 30.688 144.964 30.7847 cv
145.07 30.938 145.237 31.2749 145.361 31.4136 cv
145.751 31.8481 146.058 32.3452 146.798 32.98 cv
146.908 33.0718 147.007 33.1714 147.115 33.2632 cv
147.275 33.4009 147.545 33.6362 147.609 33.5229 cv
150.5 28.4585 152.234 23.019 153.831 17.4546 cv
129.865 25.7847 mo
127.434 28.5767 125.505 31.3257 123.445 34.4819 cv
123.406 34.5396 123.462 34.6108 123.509 34.605 cv
131.263 33.728 138.876 33.9204 146.539 34.5474 cv
146.539 34.4536 146.57 34.3198 146.525 34.2876 cv
143.67 32.3286 141.876 29.8159 140.784 26.6226 cv
140.062 24.52 139.576 22.2876 139.97 20.0659 cv
142.085 18.9692 144.273 18.0103 145.744 15.8853 cv
147.097 13.9302 147.855 11.3804 146.75 9.25635 cv
140.46 14.0513 135.168 19.687 129.865 25.7847 cv
cp
135.8 8.69482 mo
135.695 8.65771 135.571 8.64014 135.45 8.61084 cv
135.252 8.56299 135.075 8.55518 134.912 8.58154 cv
134.074 8.70947 133.65 9.69482 133.187 10.3169 cv
133.271 10.4126 133.365 10.4858 133.466 10.5347 cv
133.593 10.5972 133.669 10.5122 133.793 10.5737 cv
134 10.6714 134.282 10.7407 134.453 10.6099 cv
134.535 10.5464 134.797 10.6187 134.889 10.5884 cv
135.291 10.4644 135.165 10.3257 135.641 10.1245 cv
135.942 9.99951 136.155 9.53955 136.062 8.97803 cv
136.036 8.81592 135.932 8.7417 135.8 8.69482 cv
cp
126.785 22.6929 mo
127.732 20.9399 128.703 19.3853 129.804 17.6694 cv
130.545 16.5171 131.832 14.8901 132.23 14.0933 cv
132.279 13.9956 132.138 13.9077 132.162 13.8335 cv
132.207 13.688 132.27 13.5835 132.183 13.394 cv
131.986 12.9663 131.81 12.8608 131.509 12.6118 cv
131.552 12.6489 131.07 12.8091 131.187 12.6987 cv
130.566 13.3833 li
130.074 14.0698 li
129.745 14.4048 li
129.429 15.0405 li
129.273 15.2651 li
128.896 15.7095 li
128.594 16.3052 li
128.523 16.438 128.418 16.5688 128.275 16.8618 cv
127.809 17.4458 li
127.809 17.4458 127.759 17.5405 127.675 17.6978 cv
127.633 17.7778 127.572 17.8657 127.528 17.9771 cv
127.498 18.0601 127.279 18.2036 127.262 18.4097 cv
127.252 18.5122 127.051 18.9058 126.984 19.0474 cv
126.923 19.1665 126.71 19.5024 126.556 19.7876 cv
126.4 20.0776 126.585 19.6938 126.429 19.979 cv
126.216 20.3696 126.089 20.6968 126.08 20.7173 cv
126.08 20.7173 124.947 22.7974 124.817 23.0513 cv
124.322 24.021 122.55 27.6118 121.863 30.1616 cv
121.857 30.1792 121.744 30.1685 121.673 30.1685 cv
122.405 20.2251 122.77 10.2534 122.38 0.286621 cv
122.427 0.286621 122.472 0.282715 122.521 0.286621 cv
129.074 0.814941 135.557 0.992676 142.087 0.824707 cv
147.89 0.674316 153.658 -0.0483398 159.466 0.00244141 cv
159.466 0.0913086 159.431 0.162598 159.398 0.17041 cv
159.175 0.227051 158.387 0.57373 157.395 1.05029 cv
156.937 1.26904 156.703 1.38721 156.955 1.26221 cv
156.792 1.34229 156.52 1.52881 156.351 1.61377 cv
156.111 1.73291 155.9 1.7876 155.653 1.9126 cv
155.408 2.03857 155.37 2.09326 155.162 2.20068 cv
155.073 2.24854 155.019 2.18799 154.929 2.23584 cv
154.828 2.28857 154.761 2.37744 154.66 2.43408 cv
154.598 2.46436 153.736 2.98877 153.675 3.02197 cv
153.459 3.11768 153.867 2.94678 153.623 3.08154 cv
153.418 3.1958 153.468 3.06006 153.279 3.17041 cv
153.137 3.25244 152.963 3.43994 152.832 3.51904 cv
152.699 3.6001 152.786 3.50049 152.665 3.57471 cv
152.328 3.78662 152.146 3.90186 152.052 3.96533 cv
151.847 4.08936 151.905 4.03467 151.22 4.42822 cv
151.022 4.56689 150.077 5.19482 149.81 5.38721 cv
149.609 5.52002 150.26 5.13916 150.115 5.2417 cv
149.86 5.37158 149.699 5.49463 149.469 5.65381 cv
149.335 5.74561 148.883 6.11963 148.746 6.21045 cv
148.4 6.43799 148.114 6.65479 147.739 6.85498 cv
147.563 6.61768 147.17 6.17334 146.955 5.979 cv
147.434 6.41064 145.624 4.99658 144.996 4.65088 cv
144.394 4.31592 146.414 5.61865 146.416 5.56299 cv
146.416 5.56299 146.165 5.52295 145.436 4.93213 cv
145.673 5.12549 145.62 5.04346 145.169 4.76025 cv
145.074 4.69971 144.087 4.26807 143.99 4.21826 cv
143.783 4.11768 143.852 4.20068 143.636 4.11377 cv
143.509 4.06494 143.521 4.04932 143.392 4.00439 cv
143.291 3.96924 143.79 4.18018 143.686 4.14502 cv
143.613 4.12256 142.759 3.75635 142.509 3.68604 cv
143.699 4.02295 143.209 3.91357 141.636 3.50537 cv
141.238 3.40088 139.96 3.28662 139.784 3.24658 cv
139.66 3.22217 139.748 3.33838 139.622 3.31494 cv
139.46 3.28369 139.652 3.36182 139.492 3.3335 cv
139.302 3.30518 139.33 3.27686 139.144 3.25049 cv
139.047 3.23779 139.162 3.22705 139.064 3.21533 cv
138.888 3.19189 139.369 3.34131 139.197 3.32471 cv
138.972 3.30322 139.005 3.32275 138.873 3.31104 cv
138.755 3.30127 139.016 3.32275 138.88 3.30811 cv
138.55 3.27002 138.544 3.36768 138.061 3.36377 cv
137.893 3.36279 137.702 3.36182 137.603 3.36182 cv
137.408 3.36182 136.723 3.43213 136.543 3.43213 cv
136.35 3.43408 136.407 3.51709 136.25 3.521 cv
135.757 3.52686 135.515 3.55908 135.758 3.50635 cv
135.328 3.60303 135.437 3.58838 134.879 3.76318 cv
134.707 3.81787 134.035 3.92432 133.751 3.99365 cv
134.646 3.7749 133.045 4.2417 132.968 4.25146 cv
132.804 4.27197 132.37 4.48389 132.21 4.52979 cv
131.875 4.62549 131.845 4.63135 131.734 4.68799 cv
131.514 4.8042 131.514 4.80615 131.255 4.90381 cv
131.136 4.94873 130.947 5.02588 130.826 5.06494 cv
130.65 5.12354 130.445 5.26318 130.277 5.34326 cv
130.044 5.45459 130.185 5.40674 129.912 5.52686 cv
129.774 5.5874 129.551 5.62646 129.358 5.73389 cv
129.255 5.7915 129.154 5.88037 129.052 5.93115 cv
128.975 5.96924 128.748 6.11768 128.671 6.15186 cv
128.409 6.271 128.361 6.34717 128.14 6.47119 cv
127.689 6.72119 127.322 7.06787 126.82 7.42236 cv
126.83 7.66846 126.794 7.70264 126.972 7.84424 cv
127.07 7.92334 127.252 7.9165 127.728 7.76904 cv
130.822 6.04248 134.173 5.15967 137.64 4.98486 cv
140.683 4.83057 144.111 5.49854 146.044 8.05615 cv
144.665 9.17529 143.326 10.1694 141.978 11.312 cv
141.876 11.396 141.741 11.5874 141.638 11.6733 cv
141.56 11.7417 141.37 11.8149 141.228 11.937 cv
141.159 11.9966 141.195 12.0562 141.125 12.1177 cv
140.98 12.2417 140.76 12.3237 140.586 12.4956 cv
140.458 12.6187 140.402 12.6772 140.24 12.8208 cv
140.172 12.8843 140.068 13.0513 140 13.1128 cv
139.873 13.23 139.742 13.3472 139.612 13.4663 cv
139.541 13.5327 139.363 13.6353 139.292 13.6997 cv
139.097 13.8823 139.045 13.8882 138.852 14.0718 cv
138.798 14.1255 138.624 14.2319 138.548 14.3091 cv
138.4 14.4663 138.245 14.6714 138.119 14.7534 cv
137.881 14.9155 137.868 14.9907 137.68 15.1597 cv
137.562 15.2671 137.517 15.2993 137.392 15.3833 cv
137.317 15.4351 137.25 15.4927 137.205 15.5718 cv
137.152 15.6655 136.964 15.6714 136.893 15.7524 cv
136.574 16.1167 136.095 16.5835 135.787 16.9155 cv
135.725 16.9819 135.666 16.9771 135.607 17.0396 cv
135.48 17.1753 135.436 17.2544 135.218 17.4702 cv
135.142 17.5454 134.971 17.646 134.914 17.7046 cv
134.7 17.9224 134.708 17.9946 134.64 18.0562 cv
134.521 18.1606 134.365 18.2642 134.234 18.3638 cv
134.088 18.4751 133.976 18.6626 133.861 18.8081 cv
133.748 18.9517 133.643 18.9409 133.482 19.1392 cv
133.287 19.3794 133.16 19.5269 133.051 19.6528 cv
132.964 19.7554 132.884 19.7915 132.8 19.895 cv
132.738 19.9741 132.683 20.064 132.599 20.1177 cv
132.207 20.3638 132.111 20.5435 131.83 20.8296 cv
131.769 20.8911 131.61 20.8755 131.437 21.1265 cv
131.313 21.3091 130.826 21.856 130.696 21.9917 cv
130.593 22.1021 130.869 21.8677 130.609 22.1499 cv
130.445 22.3267 130.425 22.3657 130.263 22.5454 cv
130.183 22.6333 130 22.7554 129.919 22.8452 cv
129.781 22.9976 129.701 23.105 129.577 23.269 cv
129.515 23.3501 129.476 23.2153 129.172 23.7124 cv
129.035 23.938 128.912 24.1333 128.558 24.3745 cv
128.38 24.4946 128.451 24.7339 128.219 24.8462 cv
127.919 24.9897 128.046 24.8784 128.01 24.9907 cv
128.028 24.9399 127.39 25.5122 127.252 25.9634 cv
127.16 26.0688 126.957 26.2896 126.853 26.4126 cv
126.761 26.522 126.667 26.5659 126.568 26.687 cv
126.439 26.8462 126.377 27.0444 126.242 27.2104 cv
126.136 27.3384 126.102 27.3628 125.996 27.4956 cv
125.87 27.6489 125.672 27.8052 125.544 27.9624 cv
125.423 28.1138 125.3 28.3687 125.181 28.5171 cv
124.937 28.8179 124.781 28.8599 124.484 29.3433 cv
124.027 29.9116 123.655 30.3823 123.474 30.6265 cv
123.404 30.521 123.368 30.4858 123.368 30.4858 cv
124.462 27.4839 126.314 23.6245 126.785 22.6929 cv
cp
1 0.68 0 0.12 cmyk
f
166.16 13.7788 mo
166.283 13.4927 166.201 12.8774 165.298 12.8354 cv
165.4 12.5083 li
170.699 12.5083 li
170.575 12.8354 li
169.935 12.8726 169.486 13.1636 169.219 13.7788 cv
169.24 13.7788 165.816 26.3286 165.81 26.3472 cv
165.615 27.0356 166.201 27.355 166.623 27.2935 cv
166.611 27.2935 166.55 27.6216 166.55 27.6216 cv
161.26 27.6216 li
161.375 27.2935 li
161.785 27.2935 162.462 26.9653 162.708 26.3911 cv
166.148 13.7886 li
0 0 0 1 cmyk
f
230.234 13.7788 mo
230.355 13.4927 230.274 12.8774 229.372 12.8354 cv
229.474 12.5083 li
234.772 12.5083 li
234.649 12.8354 li
234.009 12.8726 233.559 13.1636 233.293 13.7788 cv
233.314 13.7788 229.889 26.3286 229.883 26.3472 cv
229.688 27.0356 230.274 27.355 230.695 27.2935 cv
230.684 27.2935 230.624 27.6216 230.624 27.6216 cv
225.332 27.6216 li
225.448 27.2935 li
225.858 27.2935 226.536 26.9653 226.783 26.3911 cv
230.223 13.7886 li
f
214.153 12.5083 mo
204.891 12.5112 li
204.789 12.8394 li
205.424 12.8354 205.753 13.3081 205.619 13.7788 cv
202.18 26.3716 li
201.943 26.9028 201.667 27.2935 200.866 27.2964 cv
200.783 27.6255 li
206.021 27.6255 li
206.103 27.2769 li
205.939 27.2769 li
205.507 27.1489 205.138 26.8218 205.292 26.312 cv
208.752 13.7847 li
208.752 13.7847 212.674 13.7876 212.674 13.7847 cv
213.948 13.7603 214.622 14.9546 214.522 15.7759 cv
214.522 17.1274 213.68 18.3794 212.468 18.7759 cv
211.113 19.2856 209.203 19.1392 208.258 18.8735 cv
207.746 19.5552 li
208.731 20.4751 209.43 21.2759 210.519 22.979 cv
212.489 26.3472 215.631 28.6362 219.082 28.5923 cv
219.913 28.5464 221.052 28.5347 221.515 27.5601 cv
221.619 27.3442 221.351 27.4985 221.423 27.4507 cv
217.315 27.9087 216.7 26.3062 214.235 22.9399 cv
213.454 21.7485 212.634 20.5161 212.12 20.3149 cv
213.702 19.9819 215.344 19.5708 216.618 18.2397 cv
217.726 16.8804 218.013 15.5874 217.438 14.2974 cv
216.391 12.2593 214.44 12.5679 214.153 12.5083 cv
f
252.022 26.3472 mo
252.042 27.0874 251.549 27.2935 251.118 27.2935 cv
251.037 27.6216 li
256.128 27.6216 li
256.232 27.2935 li
255.289 27.2935 255.204 26.6968 255.061 26.3472 cv
252.679 13.0005 li
252.576 12.5679 252.104 12.5083 251.795 12.5083 cv
248.838 12.5083 li
248.735 12.8354 li
249.227 12.8354 249.639 13.2241 249.27 13.7788 cv
240.314 26.3472 li
240.007 26.6567 239.641 27.2173 238.529 27.2935 cv
238.406 27.6216 li
242.494 27.6216 li
242.612 27.2935 li
242.382 27.3579 241.886 26.9556 242.319 26.3472 cv
245.286 22.2192 li
248.305 22.2192 li
248.778 22.2192 249.538 22.2192 250.005 22.4858 cv
251.046 20.9468 li
251.014 20.7817 li
246.315 20.7817 li
250.077 15.5024 li
250.09 15.5601 250.919 20.3296 251.014 20.7817 cv
252.022 26.3472 li
cp
f
191.422 12.8452 mo
191.504 12.5083 li
195.545 12.5083 li
195.454 12.8452 li
195.25 12.8452 li
194.776 12.9067 194.325 13.1128 194.12 13.7886 cv
190.454 27.1909 li
190.378 27.6401 189.933 27.6313 189.933 27.6313 cv
188.656 27.6313 li
188.656 27.6313 181.778 16.0503 181.767 15.9985 cv
181.767 15.9985 178.976 25.8237 178.943 26.3589 cv
178.902 27.0356 179.272 27.3032 179.908 27.3032 cv
179.847 27.6284 li
179.847 27.6284 178.818 27.6274 177.802 27.6284 cv
176.832 27.6313 175.876 27.6382 175.852 27.6284 cv
175.852 27.6284 175.99 27.3032 175.945 27.3032 cv
176.356 27.3032 177.095 26.9741 177.218 26.3589 cv
180.586 13.9536 li
180.667 13.3179 180.143 12.8452 179.498 12.8452 cv
179.605 12.5083 li
182.322 12.5083 li
182.734 12.5513 183.027 12.4507 183.609 13.5444 cv
189.709 23.7095 li
192.441 13.7886 li
192.54 13.1538 192.073 12.8452 191.762 12.8452 cv
191.422 12.8452 li
cp
f
107.9 0.840332 mo
107.9 33.8535 li
@
107.9 0.840332 mo
107.9 34.1372 li
@
0.200195 0.959961 mo
0.200195 33.0151 li
@
0.200195 0.959961 mo
0.200195 34.2339 li
@
0.200195 0.67627 mo
0.200195 33.0151 li
@
0.200195 0.67627 mo
0.200195 34.2339 li
@
17.8076 0.866699 mo
18.4434 0.866699 li
18.4434 4.90088 li
17.8076 4.90088 li
17.8076 0.866699 li
cp
f
20.9756 0.866699 mo
21.647 0.866699 li
23.3047 3.83887 li
23.3149 3.83887 li
23.3149 0.866699 li
23.9199 0.866699 li
23.9199 4.90088 li
23.2485 4.90088 li
21.5962 1.93457 li
21.5811 1.93457 li
21.5811 4.90088 li
20.9756 4.90088 li
20.9756 0.866699 li
cp
f
26.8691 3.55615 mo
26.8691 4.17773 27.2813 4.42041 27.7896 4.42041 cv
28.3491 4.42041 28.5576 4.11572 28.5576 3.81055 cv
28.5576 3.49951 28.4048 3.37549 28.2573 3.31299 cv
28.0034 3.20605 27.6729 3.13232 27.1743 2.97998 cv
26.5542 2.79346 26.3711 2.37549 26.3711 1.95703 cv
26.3711 1.14941 27.0425 0.770508 27.6982 0.770508 cv
28.4561 0.770508 29.0913 1.21729 29.0913 2.05908 cv
28.4561 2.05908 li
28.4253 1.53906 28.1099 1.34717 27.6729 1.34717 cv
27.3779 1.34717 27.0068 1.46582 27.0068 1.87256 cv
27.0068 2.15479 27.1797 2.31299 27.439 2.39209 cv
27.4946 2.40918 28.2983 2.64063 28.4863 2.70313 cv
28.9644 2.86133 29.1934 3.31299 29.1934 3.73145 cv
29.1934 4.63525 28.4712 4.99707 27.749 4.99707 cv
26.9204 4.99707 26.249 4.55615 26.2339 3.55615 cv
26.8691 3.55615 li
cp
f
31.1812 0.866699 mo
34.1206 0.866699 li
34.1206 1.47705 li
32.9663 1.47705 li
32.9663 4.90088 li
32.3306 4.90088 li
32.3306 1.47705 li
31.1812 1.47705 li
31.1812 0.866699 li
cp
f
36.3218 0.866699 mo
36.9575 0.866699 li
36.9575 4.90088 li
36.3218 4.90088 li
36.3218 0.866699 li
cp
f
39.1694 0.866699 mo
42.1089 0.866699 li
42.1089 1.47705 li
40.9546 1.47705 li
40.9546 4.90088 li
40.3188 4.90088 li
40.3188 1.47705 li
39.1694 1.47705 li
39.1694 0.866699 li
cp
f
44.2695 0.866699 mo
44.9053 0.866699 li
44.9053 3.21729 li
44.9053 3.75977 44.9355 4.38672 45.7593 4.38672 cv
46.5835 4.38672 46.6138 3.75977 46.6138 3.21729 cv
46.6138 0.866699 li
47.2495 0.866699 li
47.2495 3.44873 li
47.2495 4.48291 46.6543 4.99707 45.7593 4.99707 cv
44.8647 4.99707 44.2695 4.48291 44.2695 3.44873 cv
44.2695 0.866699 li
cp
f
49.415 0.866699 mo
52.3545 0.866699 li
52.3545 1.47705 li
51.2002 1.47705 li
51.2002 4.90088 li
50.5645 4.90088 li
50.5645 1.47705 li
49.415 1.47705 li
49.415 0.866699 li
cp
f
58.4346 0.866699 mo
59.106 0.866699 li
60.7637 3.83887 li
60.7739 3.83887 li
60.7739 0.866699 li
61.3789 0.866699 li
61.3789 4.90088 li
60.7075 4.90088 li
59.0552 1.93457 li
59.04 1.93457 li
59.04 4.90088 li
58.4346 4.90088 li
58.4346 0.866699 li
cp
f
64.6587 3.29639 mo
65.7676 3.29639 li
65.2231 1.56152 li
65.208 1.56152 li
64.6587 3.29639 li
cp
64.8828 0.866699 mo
65.5591 0.866699 li
66.957 4.90088 li
66.2759 4.90088 li
65.9351 3.83301 li
64.4858 3.83301 li
64.145 4.90088 li
63.4893 4.90088 li
64.8828 0.866699 li
cp
f
68.2686 0.866699 mo
71.208 0.866699 li
71.208 1.47705 li
70.0537 1.47705 li
70.0537 4.90088 li
69.418 4.90088 li
69.418 1.47705 li
68.2686 1.47705 li
68.2686 0.866699 li
cp
f
73.4092 0.866699 mo
74.0449 0.866699 li
74.0449 4.90088 li
73.4092 4.90088 li
73.4092 0.866699 li
cp
f
77.0449 2.88379 mo
77.0449 3.65771 77.3706 4.42041 78.1484 4.42041 cv
78.9268 4.42041 79.252 3.65771 79.252 2.88379 cv
79.252 2.10986 78.9268 1.34717 78.1484 1.34717 cv
77.3706 1.34717 77.0449 2.10986 77.0449 2.88379 cv
cp
79.8877 2.88379 mo
79.8877 4.03662 79.2368 4.99707 78.1484 4.99707 cv
77.0605 4.99707 76.4097 4.03662 76.4097 2.88379 cv
76.4097 1.73096 77.0605 0.770508 78.1484 0.770508 cv
79.2368 0.770508 79.8877 1.73096 79.8877 2.88379 cv
cp
f
82.2217 0.866699 mo
82.8931 0.866699 li
84.5508 3.83887 li
84.561 3.83887 li
84.561 0.866699 li
85.166 0.866699 li
85.166 4.90088 li
84.4946 4.90088 li
82.8423 1.93457 li
82.8271 1.93457 li
82.8271 4.90088 li
82.2217 4.90088 li
82.2217 0.866699 li
cp
f
88.4458 3.29639 mo
89.5547 3.29639 li
89.0103 1.56152 li
88.9951 1.56152 li
88.4458 3.29639 li
cp
88.6699 0.866699 mo
89.3462 0.866699 li
90.7441 4.90088 li
90.063 4.90088 li
89.7222 3.83301 li
88.2729 3.83301 li
87.9321 4.90088 li
87.2764 4.90088 li
88.6699 0.866699 li
cp
f
92.8696 0.866699 mo
93.5054 0.866699 li
93.5054 4.29053 li
95.3511 4.29053 li
95.3511 4.90088 li
92.8696 4.90088 li
92.8696 0.866699 li
cp
f
36.3931 14.0747 mo
37.0186 14.0747 li
38.0151 14.0747 38.229 13.4419 38.229 12.6338 cv
38.229 11.8257 38.0151 11.1929 37.0186 11.1929 cv
36.3931 11.1929 li
36.3931 14.0747 li
cp
35.7573 10.6167 mo
37.2627 10.6167 li
38.3813 10.6167 38.8643 11.521 38.8643 12.6338 cv
38.8643 13.7471 38.3813 14.6509 37.2627 14.6509 cv
35.7573 14.6509 li
35.7573 10.6167 li
cp
f
41.2085 10.6167 mo
43.8223 10.6167 li
43.8223 11.2271 li
41.8442 11.2271 li
41.8442 12.2837 li
43.6748 12.2837 li
43.6748 12.8599 li
41.8442 12.8599 li
41.8442 14.0405 li
43.8579 14.0405 li
43.8579 14.6509 li
41.2085 14.6509 li
41.2085 10.6167 li
cp
f
50.7305 12.4531 mo
51.7729 12.4531 li
52.1748 12.4531 52.3936 12.2324 52.3936 11.8091 cv
52.3936 11.2949 52.0933 11.1929 51.7627 11.1929 cv
50.7305 11.1929 li
50.7305 12.4531 li
cp
50.0947 10.6167 mo
51.8291 10.6167 li
52.6221 10.6167 53.0288 11.0234 53.0288 11.707 cv
53.0288 12.4814 52.5459 12.6792 52.4292 12.7241 cv
52.4292 12.7354 li
52.6475 12.7695 52.9678 12.9502 52.9678 13.5889 cv
52.9678 14.0576 53.0288 14.4868 53.1665 14.6509 cv
52.4849 14.6509 li
52.3882 14.4756 52.3882 14.2554 52.3882 14.0576 cv
52.3882 13.3174 52.251 12.9897 51.666 12.9897 cv
50.7305 12.9897 li
50.7305 14.6509 li
50.0947 14.6509 li
50.0947 10.6167 li
cp
f
55.4541 10.6167 mo
58.0679 10.6167 li
58.0679 11.2271 li
56.0898 11.2271 li
56.0898 12.2837 li
57.9204 12.2837 li
57.9204 12.8599 li
56.0898 12.8599 li
56.0898 14.0405 li
58.1035 14.0405 li
58.1035 14.6509 li
55.4541 14.6509 li
55.4541 10.6167 li
cp
f
62.8887 11.8994 mo
62.7817 11.436 62.5122 11.0972 61.9834 11.0972 cv
61.2056 11.0972 60.8799 11.8599 60.8799 12.6338 cv
60.8799 13.4077 61.2056 14.1704 61.9834 14.1704 cv
62.5479 14.1704 62.8584 13.7017 62.9092 13.1143 cv
63.5293 13.1143 li
63.4785 14.0801 62.8633 14.7471 61.9834 14.7471 cv
60.8955 14.7471 60.2446 13.7866 60.2446 12.6338 cv
60.2446 11.481 60.8955 10.5205 61.9834 10.5205 cv
62.8022 10.5264 63.4482 11.0293 63.5244 11.8994 cv
62.8887 11.8994 li
cp
f
65.8735 10.6167 mo
66.5093 10.6167 li
66.5093 12.2212 li
68.1621 12.2212 li
68.1621 10.6167 li
68.7974 10.6167 li
68.7974 14.6509 li
68.1621 14.6509 li
68.1621 12.8315 li
66.5093 12.8315 li
66.5093 14.6509 li
65.8735 14.6509 li
65.8735 10.6167 li
cp
f
71.3398 10.6167 mo
73.9536 10.6167 li
73.9536 11.2271 li
71.9756 11.2271 li
71.9756 12.2837 li
73.8062 12.2837 li
73.8062 12.8599 li
71.9756 12.8599 li
71.9756 14.0405 li
73.9893 14.0405 li
73.9893 14.6509 li
71.3398 14.6509 li
71.3398 10.6167 li
cp
f
76.959 12.4531 mo
78.0015 12.4531 li
78.4033 12.4531 78.6221 12.2324 78.6221 11.8091 cv
78.6221 11.2949 78.3218 11.1929 77.9912 11.1929 cv
76.959 11.1929 li
76.959 12.4531 li
cp
76.3232 10.6167 mo
78.0576 10.6167 li
78.8506 10.6167 79.2573 11.0234 79.2573 11.707 cv
79.2573 12.4814 78.7744 12.6792 78.6577 12.7241 cv
78.6577 12.7354 li
78.876 12.7695 79.1963 12.9502 79.1963 13.5889 cv
79.1963 14.0576 79.2573 14.4868 79.395 14.6509 cv
78.7134 14.6509 li
78.6167 14.4756 78.6167 14.2554 78.6167 14.0576 cv
78.6167 13.3174 78.4795 12.9897 77.8945 12.9897 cv
76.959 12.9897 li
76.959 14.6509 li
76.3232 14.6509 li
76.3232 10.6167 li
cp
f
84.1338 11.8994 mo
84.0269 11.436 83.7573 11.0972 83.2285 11.0972 cv
82.4507 11.0972 82.125 11.8599 82.125 12.6338 cv
82.125 13.4077 82.4507 14.1704 83.2285 14.1704 cv
83.793 14.1704 84.1035 13.7017 84.1543 13.1143 cv
84.7744 13.1143 li
84.7236 14.0801 84.1084 14.7471 83.2285 14.7471 cv
82.1406 14.7471 81.4897 13.7866 81.4897 12.6338 cv
81.4897 11.481 82.1406 10.5205 83.2285 10.5205 cv
84.0474 10.5264 84.6934 11.0293 84.7695 11.8994 cv
84.1338 11.8994 li
cp
f
87.1182 10.6167 mo
87.7539 10.6167 li
87.7539 12.2212 li
89.4067 12.2212 li
89.4067 10.6167 li
90.042 10.6167 li
90.042 14.6509 li
89.4067 14.6509 li
89.4067 12.8315 li
87.7539 12.8315 li
87.7539 14.6509 li
87.1182 14.6509 li
87.1182 10.6167 li
cp
f
92.5845 10.6167 mo
95.1987 10.6167 li
95.1987 11.2271 li
93.2202 11.2271 li
93.2202 12.2837 li
95.0513 12.2837 li
95.0513 12.8599 li
93.2202 12.8599 li
93.2202 14.0405 li
95.2339 14.0405 li
95.2339 14.6509 li
92.5845 14.6509 li
92.5845 10.6167 li
cp
f
23.7163 20.3667 mo
26.3301 20.3667 li
26.3301 20.9771 li
24.3521 20.9771 li
24.3521 22.0337 li
26.1826 22.0337 li
26.1826 22.6099 li
24.3521 22.6099 li
24.3521 23.7905 li
26.3657 23.7905 li
26.3657 24.4009 li
23.7163 24.4009 li
23.7163 20.3667 li
cp
f
28.6743 20.3667 mo
29.3457 20.3667 li
31.0034 23.3389 li
31.0137 23.3389 li
31.0137 20.3667 li
31.6187 20.3667 li
31.6187 24.4009 li
30.9473 24.4009 li
29.2949 21.4346 li
29.2798 21.4346 li
29.2798 24.4009 li
28.6743 24.4009 li
28.6743 20.3667 li
cp
f
38.0537 20.3667 mo
38.6895 20.3667 li
38.6895 24.4009 li
38.0537 24.4009 li
38.0537 20.3667 li
cp
f
41.2217 20.3667 mo
41.8931 20.3667 li
43.5508 23.3389 li
43.561 23.3389 li
43.561 20.3667 li
44.166 20.3667 li
44.166 24.4009 li
43.4946 24.4009 li
41.8423 21.4346 li
41.8271 21.4346 li
41.8271 24.4009 li
41.2217 24.4009 li
41.2217 20.3667 li
cp
f
46.6982 20.3667 mo
49.2056 20.3667 li
49.2056 20.9771 li
47.334 20.9771 li
47.334 22.0337 li
48.9766 22.0337 li
48.9766 22.6099 li
47.334 22.6099 li
47.334 24.4009 li
46.6982 24.4009 li
46.6982 20.3667 li
cp
f
51.9355 22.3838 mo
51.9355 23.1577 52.2612 23.9204 53.0391 23.9204 cv
53.8174 23.9204 54.1426 23.1577 54.1426 22.3838 cv
54.1426 21.6099 53.8174 20.8472 53.0391 20.8472 cv
52.2612 20.8472 51.9355 21.6099 51.9355 22.3838 cv
cp
54.7783 22.3838 mo
54.7783 23.5366 54.1274 24.4971 53.0391 24.4971 cv
51.9512 24.4971 51.3003 23.5366 51.3003 22.3838 cv
51.3003 21.231 51.9512 20.2705 53.0391 20.2705 cv
54.1274 20.2705 54.7783 21.231 54.7783 22.3838 cv
cp
f
57.7734 22.2031 mo
58.8159 22.2031 li
59.2178 22.2031 59.4365 21.9824 59.4365 21.5591 cv
59.4365 21.0449 59.1362 20.9429 58.8057 20.9429 cv
57.7734 20.9429 li
57.7734 22.2031 li
cp
57.1377 20.3667 mo
58.8721 20.3667 li
59.665 20.3667 60.0718 20.7734 60.0718 21.457 cv
60.0718 22.2314 59.5889 22.4292 59.4722 22.4741 cv
59.4722 22.4854 li
59.6904 22.5195 60.0107 22.7002 60.0107 23.3389 cv
60.0107 23.8076 60.0718 24.2368 60.2095 24.4009 cv
59.5278 24.4009 li
59.4312 24.2256 59.4312 24.0054 59.4312 23.8076 cv
59.4312 23.0674 59.2939 22.7397 58.709 22.7397 cv
57.7734 22.7397 li
57.7734 24.4009 li
57.1377 24.4009 li
57.1377 20.3667 li
cp
f
62.4873 20.3667 mo
63.3823 20.3667 li
64.3838 23.5249 li
64.394 23.5249 li
65.3701 20.3667 li
66.2549 20.3667 li
66.2549 24.4009 li
65.6499 24.4009 li
65.6499 21.2876 li
65.6396 21.2876 li
64.6328 24.4009 li
64.1094 24.4009 li
63.1025 21.2876 li
63.0923 21.2876 li
63.0923 24.4009 li
62.4873 24.4009 li
62.4873 20.3667 li
cp
f
69.5449 22.7964 mo
70.6538 22.7964 li
70.1094 21.0615 li
70.0942 21.0615 li
69.5449 22.7964 li
cp
69.769 20.3667 mo
70.4453 20.3667 li
71.8433 24.4009 li
71.1621 24.4009 li
70.8213 23.333 li
69.3721 23.333 li
69.0317 24.4009 li
68.3755 24.4009 li
69.769 20.3667 li
cp
f
73.1543 20.3667 mo
76.0938 20.3667 li
76.0938 20.9771 li
74.9395 20.9771 li
74.9395 24.4009 li
74.3037 24.4009 li
74.3037 20.9771 li
73.1543 20.9771 li
73.1543 20.3667 li
cp
f
78.2949 20.3667 mo
78.9307 20.3667 li
78.9307 24.4009 li
78.2949 24.4009 li
78.2949 20.3667 li
cp
f
83.0752 23.4688 mo
83.3804 23.0786 li
83.8228 23.5083 li
84.0513 23.2031 84.1377 22.7905 84.1377 22.3838 cv
84.1377 21.6099 83.8125 20.8472 83.0342 20.8472 cv
82.2563 20.8472 81.9307 21.6099 81.9307 22.3838 cv
81.9307 23.1577 82.2563 23.9204 83.0342 23.9204 cv
83.1665 23.9204 83.314 23.8926 83.4409 23.8247 cv
83.0752 23.4688 li
cp
84.7275 24.3838 mo
84.4175 24.7681 li
83.8887 24.2539 li
83.6191 24.4233 83.3193 24.4971 83.0342 24.4971 cv
81.9463 24.4971 81.2954 23.5366 81.2954 22.3838 cv
81.2954 21.231 81.9463 20.2705 83.0342 20.2705 cv
84.1226 20.2705 84.7734 21.231 84.7734 22.3838 cv
84.7734 22.9375 84.6211 23.5479 84.2598 23.9321 cv
84.7275 24.3838 li
cp
f
87.0923 20.3667 mo
87.728 20.3667 li
87.728 22.7173 li
87.728 23.2598 87.7583 23.8867 88.582 23.8867 cv
89.4063 23.8867 89.4365 23.2598 89.4365 22.7173 cv
89.4365 20.3667 li
90.0723 20.3667 li
90.0723 22.9487 li
90.0723 23.9829 89.4771 24.4971 88.582 24.4971 cv
87.6875 24.4971 87.0923 23.9829 87.0923 22.9487 cv
87.0923 20.3667 li
cp
f
92.5845 20.3667 mo
95.1978 20.3667 li
95.1978 20.9771 li
93.2202 20.9771 li
93.2202 22.0337 li
95.0503 22.0337 li
95.0503 22.6099 li
93.2202 22.6099 li
93.2202 23.7905 li
95.2339 23.7905 li
95.2339 24.4009 li
92.5845 24.4009 li
92.5845 20.3667 li
cp
f
13.4165 30.1167 mo
16.0303 30.1167 li
16.0303 30.7271 li
14.0522 30.7271 li
14.0522 31.7837 li
15.8828 31.7837 li
15.8828 32.3599 li
14.0522 32.3599 li
14.0522 33.5405 li
16.0659 33.5405 li
16.0659 34.1509 li
13.4165 34.1509 li
13.4165 30.1167 li
cp
f
18.0542 30.1167 mo
20.9937 30.1167 li
20.9937 30.7271 li
19.8394 30.7271 li
19.8394 34.1509 li
19.2036 34.1509 li
19.2036 30.7271 li
18.0542 30.7271 li
18.0542 30.1167 li
cp
f
27.0981 30.1167 mo
29.7119 30.1167 li
29.7119 30.7271 li
27.7339 30.7271 li
27.7339 31.7837 li
29.5645 31.7837 li
29.5645 32.3599 li
27.7339 32.3599 li
27.7339 33.5405 li
29.7476 33.5405 li
29.7476 34.1509 li
27.0981 34.1509 li
27.0981 30.1167 li
cp
f
32.0562 30.1167 mo
32.7275 30.1167 li
34.3853 33.0889 li
34.3955 33.0889 li
34.3955 30.1167 li
35.0005 30.1167 li
35.0005 34.1509 li
34.3291 34.1509 li
32.6768 31.1846 li
32.6616 31.1846 li
32.6616 34.1509 li
32.0562 34.1509 li
32.0562 30.1167 li
cp
f
42.1831 32.5464 mo
43.292 32.5464 li
42.7476 30.8115 li
42.7324 30.8115 li
42.1831 32.5464 li
cp
42.4072 30.1167 mo
43.0835 30.1167 li
44.4814 34.1509 li
43.8003 34.1509 li
43.4595 33.083 li
42.0103 33.083 li
41.6694 34.1509 li
41.0137 34.1509 li
42.4072 30.1167 li
cp
f
46.5664 30.1167 mo
47.2021 30.1167 li
47.2021 32.4673 li
47.2021 33.0098 47.2324 33.6367 48.0562 33.6367 cv
48.8804 33.6367 48.9106 33.0098 48.9106 32.4673 cv
48.9106 30.1167 li
49.5464 30.1167 li
49.5464 32.6987 li
49.5464 33.7329 48.9512 34.2471 48.0562 34.2471 cv
47.1616 34.2471 46.5664 33.7329 46.5664 32.6987 cv
46.5664 30.1167 li
cp
f
51.7124 30.1167 mo
54.6519 30.1167 li
54.6519 30.7271 li
53.4976 30.7271 li
53.4976 34.1509 li
52.8618 34.1509 li
52.8618 30.7271 li
51.7124 30.7271 li
51.7124 30.1167 li
cp
f
57.2954 32.1338 mo
57.2954 32.9077 57.6211 33.6704 58.3989 33.6704 cv
59.1772 33.6704 59.5024 32.9077 59.5024 32.1338 cv
59.5024 31.3599 59.1772 30.5972 58.3989 30.5972 cv
57.6211 30.5972 57.2954 31.3599 57.2954 32.1338 cv
cp
60.1382 32.1338 mo
60.1382 33.2866 59.4873 34.2471 58.3989 34.2471 cv
57.311 34.2471 56.6602 33.2866 56.6602 32.1338 cv
56.6602 30.981 57.311 30.0205 58.3989 30.0205 cv
59.4873 30.0205 60.1382 30.981 60.1382 32.1338 cv
cp
f
62.4878 30.1167 mo
63.3823 30.1167 li
64.3843 33.2749 li
64.3945 33.2749 li
65.3706 30.1167 li
66.2554 30.1167 li
66.2554 34.1509 li
65.6504 34.1509 li
65.6504 31.0376 li
65.6401 31.0376 li
64.6333 34.1509 li
64.1099 34.1509 li
63.103 31.0376 li
63.0928 31.0376 li
63.0928 34.1509 li
62.4878 34.1509 li
62.4878 30.1167 li
cp
f
69.5454 32.5464 mo
70.6543 32.5464 li
70.1099 30.8115 li
70.0947 30.8115 li
69.5454 32.5464 li
cp
69.7695 30.1167 mo
70.4458 30.1167 li
71.8438 34.1509 li
71.1626 34.1509 li
70.8218 33.083 li
69.3726 33.083 li
69.0317 34.1509 li
68.376 34.1509 li
69.7695 30.1167 li
cp
f
73.1553 30.1167 mo
76.0947 30.1167 li
76.0947 30.7271 li
74.9404 30.7271 li
74.9404 34.1509 li
74.3047 34.1509 li
74.3047 30.7271 li
73.1553 30.7271 li
73.1553 30.1167 li
cp
f
78.2954 30.1167 mo
78.9312 30.1167 li
78.9312 34.1509 li
78.2954 34.1509 li
78.2954 30.1167 li
cp
f
83.0757 33.2188 mo
83.3804 32.8286 li
83.8228 33.2583 li
84.0518 32.9531 84.1382 32.5405 84.1382 32.1338 cv
84.1382 31.3599 83.813 30.5972 83.0347 30.5972 cv
82.2568 30.5972 81.9312 31.3599 81.9312 32.1338 cv
81.9312 32.9077 82.2568 33.6704 83.0347 33.6704 cv
83.167 33.6704 83.3145 33.6426 83.4414 33.5747 cv
83.0757 33.2188 li
cp
84.728 34.1338 mo
84.418 34.5181 li
83.8892 34.0039 li
83.6196 34.1733 83.3198 34.2471 83.0347 34.2471 cv
81.9468 34.2471 81.2959 33.2866 81.2959 32.1338 cv
81.2959 30.981 81.9468 30.0205 83.0347 30.0205 cv
84.123 30.0205 84.7739 30.981 84.7739 32.1338 cv
84.7739 32.6875 84.6216 33.2979 84.2603 33.6821 cv
84.728 34.1338 li
cp
f
87.0928 30.1167 mo
87.7285 30.1167 li
87.7285 32.4673 li
87.7285 33.0098 87.7588 33.6367 88.5825 33.6367 cv
89.4067 33.6367 89.437 33.0098 89.437 32.4673 cv
89.437 30.1167 li
90.0728 30.1167 li
90.0728 32.6987 li
90.0728 33.7329 89.4775 34.2471 88.5825 34.2471 cv
87.688 34.2471 87.0928 33.7329 87.0928 32.6987 cv
87.0928 30.1167 li
cp
f
92.5845 30.1167 mo
95.1987 30.1167 li
95.1987 30.7271 li
93.2202 30.7271 li
93.2202 31.7837 li
95.0513 31.7837 li
95.0513 32.3599 li
93.2202 32.3599 li
93.2202 33.5405 li
95.2339 33.5405 li
95.2339 34.1509 li
92.5845 34.1509 li
92.5845 30.1167 li
cp
f
20.481 44.231 mo
20.3892 43.7681 20.1353 43.4868 19.6924 43.4868 cv
19.0391 43.4868 18.7153 44.147 18.7153 44.8071 cv
18.7153 45.4673 19.0391 46.1274 19.6924 46.1274 cv
20.1138 46.1274 20.4595 45.7603 20.5024 45.2446 cv
20.8428 45.2446 li
20.751 45.9888 20.3135 46.4438 19.6924 46.4438 cv
18.8394 46.4438 18.375 45.6938 18.375 44.8071 cv
18.375 43.9185 18.8394 43.1685 19.6924 43.1685 cv
20.2866 43.1685 20.7456 43.522 20.8213 44.231 cv
20.481 44.231 li
cp
f
24.4014 44.5903 mo
24.3853 44.02 24.0669 43.4868 23.5161 43.4868 cv
22.96 43.4868 22.6519 44.0259 22.5981 44.5903 cv
24.4014 44.5903 li
cp
22.5981 44.9087 mo
22.6035 45.4614 22.8628 46.1274 23.5161 46.1274 cv
24.0127 46.1274 24.2827 45.8032 24.3906 45.3345 cv
24.731 45.3345 li
24.585 46.0356 24.2178 46.4438 23.5161 46.4438 cv
22.6304 46.4438 22.2578 45.688 22.2578 44.8071 cv
22.2578 43.9907 22.6304 43.1685 23.5161 43.1685 cv
24.4126 43.1685 24.7686 44.0376 24.7417 44.9087 cv
22.5981 44.9087 li
cp
f
26.2754 43.2583 mo
26.6157 43.2583 li
26.6157 43.7915 li
26.6265 43.7915 li
26.751 43.4204 27.1235 43.1685 27.5176 43.1685 cv
28.3008 43.1685 28.5381 43.6235 28.5381 44.3618 cv
28.5381 46.354 li
28.1978 46.354 li
28.1978 44.4224 li
28.1978 43.8892 28.0415 43.4868 27.4907 43.4868 cv
26.9507 43.4868 26.6265 43.9419 26.6157 44.5493 cv
26.6157 46.354 li
26.2754 46.354 li
26.2754 43.2583 li
cp
f
30.8008 43.2583 mo
31.3682 43.2583 li
31.3682 43.5767 li
30.8008 43.5767 li
30.8008 45.6646 li
30.8008 45.9106 30.8335 46.0552 31.0762 46.0728 cv
31.1733 46.0728 31.271 46.0669 31.3682 46.0552 cv
31.3682 46.3794 li
31.2656 46.3794 31.168 46.3911 31.0654 46.3911 cv
30.6118 46.3911 30.4556 46.2231 30.4609 45.6938 cv
30.4609 43.5767 li
29.9746 43.5767 li
29.9746 43.2583 li
30.4609 43.2583 li
30.4609 42.3286 li
30.8008 42.3286 li
30.8008 43.2583 li
cp
f
32.939 43.2583 mo
33.252 43.2583 li
33.252 43.9849 li
33.2627 43.9849 li
33.4355 43.4868 33.8135 43.1919 34.3159 43.2173 cv
34.3159 43.5942 li
33.7002 43.5591 33.2788 44.063 33.2788 44.7036 cv
33.2788 46.354 li
32.939 46.354 li
32.939 43.2583 li
cp
f
37.6265 44.5903 mo
37.6104 44.02 37.292 43.4868 36.7412 43.4868 cv
36.1851 43.4868 35.877 44.0259 35.8232 44.5903 cv
37.6265 44.5903 li
cp
35.8232 44.9087 mo
35.8286 45.4614 36.0879 46.1274 36.7412 46.1274 cv
37.2378 46.1274 37.5078 45.8032 37.6157 45.3345 cv
37.9561 45.3345 li
37.8101 46.0356 37.4429 46.4438 36.7412 46.4438 cv
35.8555 46.4438 35.4829 45.688 35.4829 44.8071 cv
35.4829 43.9907 35.8555 43.1685 36.7412 43.1685 cv
37.6377 43.1685 37.9937 44.0376 37.9668 44.9087 cv
35.8232 44.9087 li
cp
f
43.2212 46.1274 mo
43.9448 46.1274 44.1987 45.4478 44.1987 44.8071 cv
44.1987 44.1646 43.9448 43.4868 43.2212 43.4868 cv
42.5732 43.4868 42.3086 44.1646 42.3086 44.8071 cv
42.3086 45.4478 42.5732 46.1274 43.2212 46.1274 cv
cp
44.5386 46.354 mo
44.2256 46.354 li
44.2256 45.7661 li
44.2148 45.7661 li
44.0688 46.1685 43.626 46.4438 43.2212 46.4438 cv
42.3735 46.4438 41.9683 45.6821 41.9683 44.8071 cv
41.9683 43.9302 42.3735 43.1685 43.2212 43.1685 cv
43.6372 43.1685 44.042 43.4028 44.188 43.8462 cv
44.1987 43.8462 li
44.1987 42.0708 li
44.5386 42.0708 li
44.5386 46.354 li
cp
f
48.27 44.5903 mo
48.2539 44.02 47.9355 43.4868 47.3848 43.4868 cv
46.8286 43.4868 46.5205 44.0259 46.4668 44.5903 cv
48.27 44.5903 li
cp
46.4668 44.9087 mo
46.4722 45.4614 46.7314 46.1274 47.3848 46.1274 cv
47.8813 46.1274 48.1514 45.8032 48.2593 45.3345 cv
48.5996 45.3345 li
48.4536 46.0356 48.0864 46.4438 47.3848 46.4438 cv
46.499 46.4438 46.1265 45.688 46.1265 44.8071 cv
46.1265 43.9907 46.499 43.1685 47.3848 43.1685 cv
48.2813 43.1685 48.6372 44.0376 48.6104 44.9087 cv
46.4668 44.9087 li
cp
f
52.7305 43.2583 mo
53.0435 43.2583 li
53.0435 43.9849 li
53.0542 43.9849 li
53.2271 43.4868 53.605 43.1919 54.1074 43.2173 cv
54.1074 43.5942 li
53.4917 43.5591 53.0703 44.063 53.0703 44.7036 cv
53.0703 46.354 li
52.7305 46.354 li
52.7305 43.2583 li
cp
f
57.4185 44.5903 mo
57.4023 44.02 57.084 43.4868 56.5332 43.4868 cv
55.9771 43.4868 55.6689 44.0259 55.6152 44.5903 cv
57.4185 44.5903 li
cp
55.6152 44.9087 mo
55.6206 45.4614 55.8799 46.1274 56.5332 46.1274 cv
57.0298 46.1274 57.2998 45.8032 57.4077 45.3345 cv
57.748 45.3345 li
57.6021 46.0356 57.2349 46.4438 56.5332 46.4438 cv
55.6475 46.4438 55.2749 45.688 55.2749 44.8071 cv
55.2749 43.9907 55.6475 43.1685 56.5332 43.1685 cv
57.4297 43.1685 57.7856 44.0376 57.7588 44.9087 cv
55.6152 44.9087 li
cp
f
61.2637 44.231 mo
61.1719 43.7681 60.918 43.4868 60.4751 43.4868 cv
59.8218 43.4868 59.498 44.147 59.498 44.8071 cv
59.498 45.4673 59.8218 46.1274 60.4751 46.1274 cv
60.8965 46.1274 61.2422 45.7603 61.2852 45.2446 cv
61.6255 45.2446 li
61.5337 45.9888 61.0962 46.4438 60.4751 46.4438 cv
59.6221 46.4438 59.1577 45.6938 59.1577 44.8071 cv
59.1577 43.9185 59.6221 43.1685 60.4751 43.1685 cv
61.0693 43.1685 61.5283 43.522 61.604 44.231 cv
61.2637 44.231 li
cp
f
63.1753 42.0708 mo
63.5156 42.0708 li
63.5156 43.7915 li
63.5264 43.7915 li
63.6509 43.4204 64.0234 43.1685 64.4175 43.1685 cv
65.2007 43.1685 65.438 43.6235 65.438 44.3618 cv
65.438 46.354 li
65.0981 46.354 li
65.0981 44.4224 li
65.0981 43.8892 64.9414 43.4868 64.3906 43.4868 cv
63.8506 43.4868 63.5264 43.9419 63.5156 44.5493 cv
63.5156 46.354 li
63.1753 46.354 li
63.1753 42.0708 li
cp
f
69.1641 44.5903 mo
69.1479 44.02 68.8296 43.4868 68.2788 43.4868 cv
67.7227 43.4868 67.4146 44.0259 67.3608 44.5903 cv
69.1641 44.5903 li
cp
67.3608 44.9087 mo
67.3662 45.4614 67.6255 46.1274 68.2788 46.1274 cv
68.7754 46.1274 69.0454 45.8032 69.1533 45.3345 cv
69.4937 45.3345 li
69.3477 46.0356 68.9805 46.4438 68.2788 46.4438 cv
67.3931 46.4438 67.0205 45.688 67.0205 44.8071 cv
67.0205 43.9907 67.3931 43.1685 68.2788 43.1685 cv
69.1753 43.1685 69.5313 44.0376 69.5044 44.9087 cv
67.3608 44.9087 li
cp
f
71.0439 43.2583 mo
71.3569 43.2583 li
71.3569 43.9849 li
71.3677 43.9849 li
71.5405 43.4868 71.9185 43.1919 72.4209 43.2173 cv
72.4209 43.5942 li
71.8052 43.5591 71.3838 44.063 71.3838 44.7036 cv
71.3838 46.354 li
71.0439 46.354 li
71.0439 43.2583 li
cp
f
75.6934 44.231 mo
75.6016 43.7681 75.3477 43.4868 74.9048 43.4868 cv
74.2515 43.4868 73.9277 44.147 73.9277 44.8071 cv
73.9277 45.4673 74.2515 46.1274 74.9048 46.1274 cv
75.3262 46.1274 75.6719 45.7603 75.7148 45.2446 cv
76.0552 45.2446 li
75.9634 45.9888 75.5259 46.4438 74.9048 46.4438 cv
74.0518 46.4438 73.5874 45.6938 73.5874 44.8071 cv
73.5874 43.9185 74.0518 43.1685 74.9048 43.1685 cv
75.499 43.1685 75.958 43.522 76.0337 44.231 cv
75.6934 44.231 li
cp
f
77.605 42.0708 mo
77.9453 42.0708 li
77.9453 43.7915 li
77.9561 43.7915 li
78.0806 43.4204 78.4531 43.1685 78.8472 43.1685 cv
79.6304 43.1685 79.8677 43.6235 79.8677 44.3618 cv
79.8677 46.354 li
79.5278 46.354 li
79.5278 44.4224 li
79.5278 43.8892 79.3711 43.4868 78.8203 43.4868 cv
78.2803 43.4868 77.9561 43.9419 77.9453 44.5493 cv
77.9453 46.354 li
77.605 46.354 li
77.605 42.0708 li
cp
f
83.5938 44.5903 mo
83.5776 44.02 83.2593 43.4868 82.7085 43.4868 cv
82.1523 43.4868 81.8442 44.0259 81.7905 44.5903 cv
83.5938 44.5903 li
cp
81.7905 44.9087 mo
81.7959 45.4614 82.0552 46.1274 82.7085 46.1274 cv
83.2051 46.1274 83.4751 45.8032 83.583 45.3345 cv
83.9233 45.3345 li
83.7773 46.0356 83.4102 46.4438 82.7085 46.4438 cv
81.8228 46.4438 81.4502 45.688 81.4502 44.8071 cv
81.4502 43.9907 81.8228 43.1685 82.7085 43.1685 cv
83.605 43.1685 83.9609 44.0376 83.9341 44.9087 cv
81.7905 44.9087 li
cp
f
88.064 44.9321 mo
89.2627 44.9321 li
89.2681 45.395 89.4355 45.4302 89.7808 45.4302 cv
91.2495 45.4302 li
91.5034 45.4302 91.7627 45.4009 91.7627 45.0649 cv
91.7627 44.686 91.6226 44.6626 90.0781 44.6626 cv
88.2744 44.6626 88.0693 44.4224 88.0693 43.354 cv
88.0693 42.5688 88.1338 41.9634 89.646 41.9634 cv
91.3198 41.9634 li
92.7021 41.9634 92.832 42.4849 92.832 43.2466 cv
92.832 43.3853 li
91.6333 43.3853 li
91.6333 43.0669 91.6006 42.9341 91.0498 42.9341 cv
89.7217 42.9341 li
89.4517 42.9341 89.2681 43.0356 89.2681 43.27 cv
89.2681 43.6489 89.4136 43.6606 90.6987 43.6548 cv
92.562 43.6489 92.9941 43.7739 92.9941 45.0396 cv
92.9941 46.2114 92.6377 46.4028 91.0444 46.4028 cv
89.5918 46.4028 li
88.501 46.4028 88.064 46.1743 88.064 45.2329 cv
88.064 44.9321 li
cp
1 0.68 0 0.12 cmyk
f
95.9585 44.4165 mo
95.9585 45.0474 96.0771 45.2856 96.644 45.2856 cv
98.1777 45.2856 li
98.7446 45.2856 98.8638 45.0474 98.8638 44.4165 cv
98.8638 43.9478 li
98.8638 43.4087 98.7446 43.0786 98.1128 43.0786 cv
96.709 43.0786 li
96.0771 43.0786 95.9585 43.4087 95.9585 43.9478 cv
95.9585 44.4165 li
cp
94.7271 43.5337 mo
94.7271 42.2622 95.3696 41.9634 96.4497 41.9634 cv
98.3721 41.9634 li
99.4521 41.9634 100.095 42.2622 100.095 43.5337 cv
100.095 44.8306 li
100.095 46.1021 99.4521 46.4028 98.3721 46.4028 cv
96.4497 46.4028 li
95.3696 46.4028 94.7271 46.1021 94.7271 44.8306 cv
94.7271 43.5337 li
cp
f
103.098 44.1821 mo
104.96 44.1821 li
105.241 44.1821 105.349 43.979 105.349 43.7212 cv
105.349 43.5532 li
105.349 43.2583 105.22 43.0903 104.858 43.0903 cv
103.098 43.0903 li
103.098 44.1821 li
cp
101.898 42.0103 mo
105.166 42.0103 li
106.305 42.0103 106.581 42.647 106.581 43.4985 cv
106.581 43.8696 li
106.581 44.5181 106.327 45.2622 105.479 45.2622 cv
103.098 45.2622 li
103.098 46.354 li
101.898 46.354 li
101.898 42.0103 li
cp
f
108.308 42.0103 mo
109.507 42.0103 li
109.507 43.5591 li
112.035 43.5591 li
112.035 42.0103 li
113.233 42.0103 li
113.233 46.354 li
112.035 46.354 li
112.035 44.7114 li
109.507 44.7114 li
109.507 46.354 li
108.308 46.354 li
108.308 42.0103 li
cp
f
115.187 42.0103 mo
116.386 42.0103 li
116.386 46.354 li
115.187 46.354 li
115.187 42.0103 li
cp
f
120.096 44.6509 mo
121.629 44.6509 li
120.852 43.0181 li
120.096 44.6509 li
cp
120.074 42.0103 mo
121.634 42.0103 li
123.785 46.354 li
122.451 46.354 li
122.078 45.5864 li
119.648 45.5864 li
119.296 46.354 li
117.958 46.354 li
120.074 42.0103 li
cp
f
130.793 44.6509 mo
132.327 44.6509 li
131.549 43.0181 li
130.793 44.6509 li
cp
130.771 42.0103 mo
132.332 42.0103 li
134.482 46.354 li
133.148 46.354 li
132.775 45.5864 li
130.345 45.5864 li
129.994 46.354 li
128.655 46.354 li
130.771 42.0103 li
cp
f
135.988 42.0103 mo
137.845 42.0103 li
140.097 45.1665 li
140.108 45.1665 li
140.108 42.0103 li
141.307 42.0103 li
141.307 46.354 li
139.449 46.354 li
137.198 43.1978 li
137.187 43.1978 li
137.187 46.354 li
135.988 46.354 li
135.988 42.0103 li
cp
f
142.911 42.0103 mo
147.479 42.0103 li
147.479 43.0903 li
145.794 43.0903 li
145.794 46.354 li
144.595 46.354 li
144.595 43.0903 li
142.911 43.0903 li
142.911 42.0103 li
cp
f
149.148 42.0103 mo
150.346 42.0103 li
150.346 46.354 li
149.148 46.354 li
149.148 42.0103 li
cp
f
153.5 44.1821 mo
155.363 44.1821 li
155.644 44.1821 155.751 43.979 155.751 43.7212 cv
155.751 43.5532 li
155.751 43.2583 155.623 43.0903 155.26 43.0903 cv
153.5 43.0903 li
153.5 44.1821 li
cp
152.3 42.0103 mo
155.568 42.0103 li
156.708 42.0103 156.983 42.647 156.983 43.4985 cv
156.983 43.8696 li
156.983 44.5181 156.729 45.2622 155.881 45.2622 cv
153.5 45.2622 li
153.5 46.354 li
152.3 46.354 li
152.3 42.0103 li
cp
f
159.855 44.4165 mo
159.855 45.0474 159.974 45.2856 160.541 45.2856 cv
162.075 45.2856 li
162.642 45.2856 162.761 45.0474 162.761 44.4165 cv
162.761 43.9478 li
162.761 43.4087 162.642 43.0786 162.01 43.0786 cv
160.606 43.0786 li
159.974 43.0786 159.855 43.4087 159.855 43.9478 cv
159.855 44.4165 li
cp
158.625 43.5337 mo
158.625 42.2622 159.267 41.9634 160.347 41.9634 cv
162.269 41.9634 li
163.349 41.9634 163.992 42.2622 163.992 43.5337 cv
163.992 44.8306 li
163.992 46.1021 163.349 46.4028 162.269 46.4028 cv
160.347 46.4028 li
159.267 46.4028 158.625 46.1021 158.625 44.8306 cv
158.625 43.5337 li
cp
f
165.795 42.0103 mo
166.995 42.0103 li
166.995 45.2388 li
169.689 45.2388 li
169.689 46.354 li
165.795 46.354 li
165.795 42.0103 li
cp
f
171.341 42.0103 mo
172.541 42.0103 li
172.541 46.354 li
171.341 46.354 li
171.341 42.0103 li
cp
f
174.425 44.9321 mo
175.624 44.9321 li
175.628 45.395 175.796 45.4302 176.142 45.4302 cv
177.611 45.4302 li
177.865 45.4302 178.124 45.4009 178.124 45.0649 cv
178.124 44.686 177.984 44.6626 176.439 44.6626 cv
174.635 44.6626 174.43 44.4224 174.43 43.354 cv
174.43 42.5688 174.495 41.9634 176.007 41.9634 cv
177.681 41.9634 li
179.063 41.9634 179.193 42.4849 179.193 43.2466 cv
179.193 43.3853 li
177.994 43.3853 li
177.994 43.0669 177.961 42.9341 177.411 42.9341 cv
176.083 42.9341 li
175.812 42.9341 175.628 43.0356 175.628 43.27 cv
175.628 43.6489 175.775 43.6606 177.06 43.6548 cv
178.923 43.6489 179.355 43.7739 179.355 45.0396 cv
179.355 46.2114 178.999 46.4028 177.406 46.4028 cv
175.953 46.4028 li
174.862 46.4028 174.425 46.1743 174.425 45.2329 cv
174.425 44.9321 li
cp
f
184.517 44.4575 mo
187.216 44.4575 li
187.216 45.2153 li
184.517 45.2153 li
184.517 44.4575 li
cp
f
192.449 42.0103 mo
194.291 42.0103 li
195.646 44.8071 li
197.001 42.0103 li
198.843 42.0103 li
198.843 46.354 li
197.677 46.354 li
197.677 43.2349 li
197.666 43.2349 li
196.094 46.354 li
195.198 46.354 li
193.626 43.2349 li
193.616 43.2349 li
193.616 46.354 li
192.449 46.354 li
192.449 42.0103 li
cp
f
202.888 40.4868 mo
204.2 40.4868 li
203.055 41.6743 li
202.197 41.6743 li
202.888 40.4868 li
cp
200.733 42.0103 mo
205.009 42.0103 li
205.009 43.0181 li
201.932 43.0181 li
201.932 43.7153 li
204.847 43.7153 li
204.847 44.6138 li
201.932 44.6138 li
201.932 45.311 li
205.08 45.311 li
205.08 46.354 li
200.733 46.354 li
200.733 42.0103 li
cp
f
208.125 45.2388 mo
210.253 45.2388 li
210.766 45.2388 210.966 45.0767 210.966 44.4575 cv
210.966 43.8696 li
210.966 43.2524 210.766 43.0903 210.253 43.0903 cv
208.125 43.0903 li
208.125 45.2388 li
cp
206.927 42.0103 mo
210.544 42.0103 li
211.744 42.0103 212.165 42.4478 212.165 43.522 cv
212.165 44.8423 li
212.165 45.9165 211.744 46.354 210.544 46.354 cv
206.927 46.354 li
206.927 42.0103 li
cp
f
214.033 42.0103 mo
215.232 42.0103 li
215.232 46.354 li
214.033 46.354 li
214.033 42.0103 li
cp
f
216.9 42.0103 mo
221.468 42.0103 li
221.468 43.0903 li
219.784 43.0903 li
219.784 46.354 li
218.585 46.354 li
218.585 43.0903 li
216.9 43.0903 li
216.9 42.0103 li
cp
f
223.072 42.0103 mo
227.349 42.0103 li
227.349 43.0181 li
224.271 43.0181 li
224.271 43.7153 li
227.187 43.7153 li
227.187 44.6138 li
224.271 44.6138 li
224.271 45.311 li
227.419 45.311 li
227.419 46.354 li
223.072 46.354 li
223.072 42.0103 li
cp
f
230.421 44.147 mo
232.404 44.147 li
232.728 44.147 232.846 44.0024 232.846 43.6899 cv
232.846 43.5474 li
232.846 43.1626 232.673 43.0903 232.295 43.0903 cv
230.421 43.0903 li
230.421 44.147 li
cp
229.222 42.0103 mo
232.841 42.0103 li
233.764 42.0103 234.013 42.52 234.013 43.3013 cv
234.013 43.5767 li
234.013 44.1587 233.894 44.5005 233.343 44.645 cv
233.343 44.6567 li
233.699 44.729 233.997 44.9028 233.997 45.6157 cv
233.997 46.354 li
232.798 46.354 li
232.798 45.8325 li
232.798 45.3774 232.679 45.2271 232.306 45.2271 cv
230.421 45.2271 li
230.421 46.354 li
229.222 46.354 li
229.222 42.0103 li
cp
f
237.101 44.147 mo
239.083 44.147 li
239.408 44.147 239.526 44.0024 239.526 43.6899 cv
239.526 43.5474 li
239.526 43.1626 239.353 43.0903 238.975 43.0903 cv
237.101 43.0903 li
237.101 44.147 li
cp
235.902 42.0103 mo
239.521 42.0103 li
240.444 42.0103 240.693 42.52 240.693 43.3013 cv
240.693 43.5767 li
240.693 44.1587 240.574 44.5005 240.023 44.645 cv
240.023 44.6567 li
240.378 44.729 240.676 44.9028 240.676 45.6157 cv
240.676 46.354 li
239.478 46.354 li
239.478 45.8325 li
239.478 45.3774 239.359 45.2271 238.986 45.2271 cv
237.101 45.2271 li
237.101 46.354 li
235.902 46.354 li
235.902 42.0103 li
cp
f
244.337 44.6509 mo
245.871 44.6509 li
245.093 43.0181 li
244.337 44.6509 li
cp
244.316 42.0103 mo
245.876 42.0103 li
248.025 46.354 li
246.691 46.354 li
246.319 45.5864 li
243.889 45.5864 li
243.539 46.354 li
242.199 46.354 li
244.316 42.0103 li
cp
f
249.532 42.0103 mo
251.39 42.0103 li
253.641 45.1665 li
253.652 45.1665 li
253.652 42.0103 li
254.851 42.0103 li
254.851 46.354 li
252.994 46.354 li
250.742 43.1978 li
250.731 43.1978 li
250.731 46.354 li
249.532 46.354 li
249.532 42.0103 li
cp
f
258.895 40.4868 mo
260.207 40.4868 li
259.062 41.6743 li
258.204 41.6743 li
258.895 40.4868 li
cp
256.74 42.0103 mo
261.017 42.0103 li
261.017 43.0181 li
257.939 43.0181 li
257.939 43.7153 li
260.855 43.7153 li
260.855 44.6138 li
257.939 44.6138 li
257.939 45.311 li
261.087 45.311 li
261.087 46.354 li
256.74 46.354 li
256.74 42.0103 li
cp
f
262.891 42.0103 mo
267.167 42.0103 li
267.167 43.0181 li
264.09 43.0181 li
264.09 43.7153 li
267.005 43.7153 li
267.005 44.6138 li
264.09 44.6138 li
264.09 45.311 li
267.238 45.311 li
267.238 46.354 li
262.891 46.354 li
262.891 42.0103 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 12.0
%%AI8_CreatorVersion: 12.0.1
%%For: (Pierre Laurent) (INRIA)
%%Title: (logoINRIA Sophiavect-287.eps)
%%CreationDate: 27/06/07 16:45
%AI9_DataStream
%Gb"-6gN"UNFWgMaq%*?kERZ$G-ZKB5*0).#8WSn29BbAFLX1XJ>g7/O794-f,$FM-o,[F4#O;^>1\^$DOY+%!A4Cbt(Qh66Yd!Ot
%lN]YaGlRTqf5KPpHh%)"I^FH5XP:G2EG'[S]lJDp_%6P"gL&`b>W/m#ep(P+L,3agWQi=`Yp%"@B-d^[+2!"$k4AQ=]2(ZknG^]"
%a,g,lGOIbDr6]E^Vq:B\5C*3ErQFN_`SKi=^RK[kro<L;laM)IfC(rZ^](U`B/@>^rQW=E[s)3Zo^i$rh1#.HcHZI+mPieKY<UT%
%C3T//JUdUcc/%QdDgu*j]`%]Ip[uiSi=G03q"l^_5CKP=:e(M<g]->Arc.u6j/;YGfKf]/k-LG!F8a/3h%,!armP6Qm&*oHS'u9T
%<INf?e3DGIT-\/Ks8MlNVt]XtG;e,FIl;]Qn6^ZbqtpEl^HU.KrqDuZMMCi*g\]mc^&E+(o69>%.(`R&e]BR\%H45MPgC)kUcRP@
%Y)P+6bXLQ8U!s+rg$P;*B>J1Mca6iirPRCE5Q7TVop`F5X<2pbe+WCBDeQl25CE=hg](Dh0U-Ng;i&'Pbur=<e),ZFq<msoYM[%l
%6o0#cj$FdajSd]>GBGXIQg;980WR!9VZ!,*r9Es1Df7j?'RG9'q:"*mms_Xe1]OGWlcn`[h0s#jpt>+Shu2j=5N0+ZQ#^JGnN63b
%E\r&COYTD<.r!knLf7Trc4n<;2#(*=>sh-/NV$R*oERUa/+U"WDng_tmROHsWL^UsV_d!^cP)n!o+)r"IbjLhS>EI5ndg0_U4E/C
%j?FQ1SVL"5DVt!)<92m8V"HUkB0Z3'*Q6L?YP7MS@=]nGrnueENi)6*]D(42ht2-j97?a0n*,Jor\m&i?X).4XF3i.`P:Kkr;>u(
%rR3uYGlRU65CW@Oqrrn!?bcWMgYK%s^q,$-qq8a_qsBkK?gW=;:\C@S+5VHo%BH_G5C<A&pKns.n!@tNlTXYf5(*A)gYK'i^V?gt
%<*ZA(ZFg'rqNnc2W$Q9>gYLJ"^\R$`a4o<]\GmV`ki]-6rO*?3gNR"S>ef7gs/XoAgCLL&L4=DShsS40c9KaHC\-NR+&@2#FSrIh
%o[ZsUm<3^RrmTV?o]'8-q"4:?Vml]do4d+VkC.!="t.'$frn09?bd'DYOCo9eoh#kDr88hiLOmjoC[IN5<f#58mjj4A]6l#-ZE;i
%rGSn.hOh$SrcJ0Yn*f+^]WY,pmqkH%oPdlu\$-b(5W5n3lJ3P"n)"*DpX$JM^:X?N_]A=X1AV4]&$5(UDr5tKM8:i0^\uYVh#%!+
%^]+T<Zk'[HDh%Mdp:+n!SZkWP?GCjc@>F@FQi-cidb<#icG0A-]@ZeeJm\Obo"pm*It0[_>Nfk>D^l(^M=diM8#UXni>:so^]-Zt
%->tDEpsJMbk9&Qn\pa><c.h!bYGU9]1824ipj2egl0kM8Eh0D_FhA49rn:Z4CNDXG?!glC?!cp%0!<L'b#Q/J=7IbFq($Z#YKYOE
%H$ss\H$Qs8]XU)=/=6/f?,k',kqCkhSM&1K]YE<1m4\52rPeb`?hSc;p2M2JIdcuRDt`eAou5J#ji.5Yio9m1>i^fb&MM"T^Mk"_
%_Hb=JfB65uQfn8;Mt?Q)]U\0VF<8cG\Nb<$p=u1ajgn]^bH`c;jh-h@9.I3"ieo=qQnmjjI$HAV5%!CB.ZEGYEm,^(m'<1fa`G$g
%=6VL-dmZ;n-0:@h9Hj5mP-(7%Nn<eN?H.E+M!)%]*)heN6m#^AdDS%MLT>A3p>I3c:K@23TaF"-"<UmQ_1^KKq^[0\p\r%%=)fbf
%jJ*7BHfqLiIWj?2b$DTl]5Zr9\EoB:/i`<iZ]d1_[b(5q?J<*+YiiII$ppZteludh20Ln0k/pqt]t#i[VO21_M'a'XS?^)$H*6Hm
%f;4l#FA?nJP.?%l>R*1=^8J`<WlU=gAGk7_@F'6sL[k2CkrCgE4&!tA:!_A;G),nXf<bTY%%,9,#J[hE:iW/rnbt".Y4EmiKj7RR
%Q*:.Klgi-95L\0ZkPF[j4Wh<F?'G1A>kZ8#%UL3ZM>gX`iQ)`E?Bm]KnA!3u+1Y!neOBJLWKMp28OKL'U/Y$1;+\c=,otT\Y%5IO
%EoJTPM3Ya78nQ@!\_1&iF&fu!Y%5USHK6S^MNpBe8uKtj`Dh]FAL1[7I]e@J<eBHa@>gDdj\"a^/&BtA_KT"pI'/.L<eBNc@>pI:
%k"7&J/&g:Fb'@"%I]epb7Q4>Q)Cg#,Q->OdDD*Km]r^;h]&LH'jOdJ<*%H5/Pt[N:XtM9X^9$Dm\tZIO<GARW4]M9L1+8aWq-p@W
%s0CYSFdXa9W+oLI%&#G4<#J-(%-+';Nm!='fB73d-FPZE?^XQg9I<hQF'cE&^2fjHoBV=FE[,qiVTP>oAPoG4W`!!N7:fbk's"P4
%F(K!mZ8H"B>HDWn=*Adog"sHK^T7>+j]pK4XaJMtrYR/Xb`uP,?X?EkH!XPD^:p$d6a`2aqT<2UA[E>afEL]#.n!p#\E=H0'!?0o
%f_$<;[aOh%^J5pccVA]`1J$n_%X31*$QY)q1"ppN>#O;]`;,8AZGU0'ihU@9oHVC9<kYAc)Ed_f%eH#n7$ug%?Jk&Y4^8[!o6f0a
%X[?@FVl3Bqg=,[.ok@'GR\$6;D.uep;q.]sm:gm(qR!(^9i"WYjt[S1b/Hu,?IZ_relLC7Y"r.fnh605VF.*/QV(H1+]7Pu-*?En
%W:d!MeoXI4qGKn#3[AH'/8:4l[:[;eEV]q%P_\@qLIAN@G"qpp?5F,Wqnq%(^K`sA>s3/+Ai1T.\`O.""$`"KAfnP6X:#@)WU0Oc
%`KDSS:6/8@2m6_si\<%^i&)NVb9-cU84C8-(.?e<o('i)l(J:l?CQ,BB/Qc=B6LLlZA1TES3:2,`1?g2enG`"VWY6[Mg.*BQZZKM
%X6I0rdir*mcXiX_nS3A&la.M,-W5?<MK,W_oRF!)Gu!QRce6m!Wj(R3>9E/1jr'WdEr*Uj*bolg&c,6WFA5GcdNj#W*Gn7DbQV<Q
%?g.#[_+BR;pN*DNoj^A)(*6gbk?2!`^7So;YTN^D*\,I.['9K3*G\+B(kYa(kIbKUGB9QWmH*>*rE/'>g@e?K]`.C$S]0LAIb=Vo
%a'VOk8F=d'Vs:kaJBR9Wou6V"F*OgaL\.aidY6p/^$DqF@<tK5H7W?h*n%YA9,FI\oWD\G!B.Q/oB.f$pY+'f*/<]a>FM/$0\pM;
%drQA'HYmJC%`<Cl/PTSaR'(eCrjaU5&9*GP>#OYr<f%%<\T1a(@?ae#.$?!5Xa>@>n[X#Fm`jYWIes'2#9Z.b?1#_I&=pR6U9c/)
%9O#r$\B:k$3Y0<5Tn3Z*?GZ_G25"qSfFdrsUtrfcr8tJR2-(4_nbq;2>DVWJ_dGP3![E"tW\`R<mFHfdJ?".$KW]j0KX04.jBXP#
%!pTjXU+B"E9IL<?$trlX)5Zug>SC5&BmWS>]1dY-dkUHi0Fi?^MrF-.ddRL3X>g-\p#%Dph3RSJ5MFP__/-Pk#?r.U(9S:_Jm;6n
%0"R3P=g+RO\R$)"mIe'?X3SarE3jbN%l7R08F=I^jnT707CjhaDn3/[Ks,R20(dl`FfEt-?e:L]>r3KqS"qqfq=/b7\CLl"dqs44
%X_2Ebf[eC5&Lj2H.&TS-CkS9O#9lnQ7[Z@Q>V^08Q1/q1EF!BeqfY^1lfI9:3I1"Ip?R[L#k1hFHU7D.m+-76R:=.Leu^;=Nj`&[
%G[nj-3nLLOgP,BWljCcYSZlH4^*n<r-cYC$7:8DbV^NIGi"O3;U(:cV#X=IN.pV!M)*ha6';Dp*4oh+'GQDaci!7%0J0tn0\AGJF
%)0l=(#N--.+b3(E^6=-&!N,p(6/2P:`>.CTbZk8F#&k(1*Q1*kIfK]S*^X*7p]ti%WsKAQ7bVC8V#XF;[K;Bk=:6f!@P>N)JAhMP
%\H9/(fduQ(g#'*qR0N/0&2GD>6O8O1(*YV0HmY[Z6D''I#mh9>-L[`P+bNH*Fb;1:,[r7a<=#`=?m<ZYU4m7g)(3!JFC%,tnl#<m
%Atei`(lEQMM!#$S'!?mmMBY7+Gl!rHZ_.k'cP\hQ6J(k"_6\YAdrP`>_G!]MI?H1.8VW90%FVX!C8_s<JA^?'[."V%7NQZV4RD?Y
%d&Zf#2sV&!3m<s?$E!c<\-BDhA)lkPQ.)rt`bXr`h=@NtS?UIn@(F`1br5M[CZ!O*_of-bbo*PHl&7hi$"YW@g*o'U7C,uNCPCCk
%R`2#S/6M:tS_ZU`(X7+Her+.T&.=6F0U`^Ym2-N+!&eDE0gg==@a>UDL=e>9L'\S.3eil8;IV!6N!Pl61a-U%eqC7>BbTK\jGih)
%otV-$,;LX"N^t0'4!o/>n;--;d3GqeKF^Z31h`FJ!Jq#D=Tjsb,(r>k*HEM03.h>G80SYb$fq+p64k=`FX6hI;,"2^-':r/UF^DA
%e8gT_`];0\5W(@?*t`37:es;!$"`:F^Lnj3%Cn>7%`ET7"pD^a\qE#+L*7MCl=njb=Wdhl,bs[WYB.*/&E;*&pkjHmZne<Y6EC`-
%M'1lT9.5?^S3kQ_Xn6\NfD/Bcp`/gkY09u,/+OGMnp3=16k!Ld?rFQ\K!5eZrEadFL&@J,<VX^a<CEWW"5AR5TU4ibkp<'c$76e@
%;e^[F#kXs"HbJ-PqOc2A\[rKQpBgjs.G^_G*`+bEU@i'n104J0:GsdQdtS1j\3&WQ'a<tQe&mcXm1`[W;V'D5[&6T4:g'5d7e]1:
%+;jJqc*Dr0Q&1JNC0p-5/Bu,]N%AFMBeBLm['6ZD@WRGE>gVQ+7MdhlOPtme0:=]f$e;8\<'<_<G9UU"0PLAE(.GTBQi2Uhoha#V
%UZ+>#0cj*r&mGT//E>h6&KnM&+#Z8.6u4A?C`74f$kaNG@,nX%)ga8Dm")r,(+G_4"<OL8549@bpn,)+qu)X(jJoCoVSXnf)*ig>
%Ih1eFU6+i6ouGfMi3!UL%.Y+&i3MO3fH5bq`8EA45d9b(>fd\8#a@,PKq$ZT.?3SM/%rlfVT95T+*Pr$<H6-'hg;HTA"4LrI/DY=
%HK')JI1>%m%:FV%Mgt065BkUApTW!20n-d!;>=e5DsqlLqg[GZIX(hele@<2$UF)Zj&oK#p*rPT'j"Jj\CP:b%NaF'_H>>e%N_/^
%8p\9,EQZVdLsT'f7o-[GpIl*#@NKmp+4_T-D+K,/pb^FJ':oktJ2F8^F_%Bt4?_r^X(%PuV=dH3%,6c`@Z8n6$T/K.-:h!N_.!LY
%l`XE=e_Jmf]kl]!eAAi)mIk/J/YhaB8U!C9R]*ZUDB?5NXb)\EUt\8qd`9=@4.S""D4.KV5AO^-M*K>?TgU%Go;=b>YVmKIhXmgb
%qpcbYYi.HV3S[B>[QSX'RL]A^!LMVnCO.Im?N*W6d*mIC&*jc=]1SV:F#oOE6.uHE1S^<D67.PV+CKeG8]#%7h*nDETlMS[5";3P
%>BG9k>NIbG^LZm*6>:aDR_DA@V[\gG&Tjo5bu]+RRKFk.3c_qWjsO't"Wa3F\e%W5i@Be6MEBc/eGFSgZ(![?"dD`bg!U$^qQkJU
%3*X-F21@L%pL*R[Cu&R^^0!eOA[Q3P/R,"7aEF[DCU$m'S#&,KP+&/ZR\/9l13GdI4WB^+R%2ZLm+G:\f&=pMZ=fB)\mHf8>!!6'
%l`QchB&S=b/XH'3emq49]pRFW6geO5B\hU!\Q$8NBssbj]#">CajAP:\4tQ0$MNdsc:47Kie6B,;YnmAW27p(3h_mdn"BJO8sbjd
%n$`(>m'I2sUIQ&dllkrK&A<'u@JD)nO?>fa#72\%ZB.$J@Ld%YBmsqEc>)0#D<&^7Bb@5c(t6&h-Limtm:G&qkBpg@h]-KG[!g>F
%`Poc]RHAqarJtWe)*F"O&$jptie4C[@:BJ`(&L<5)rVr)A1;94@6;caR;tbMAAeFt?@aEr2tu?_q\,]QDqZ(g4%Fm-1$WDNCK5hs
%k/l@iStf^1c-eC2@-W$uafmY"pQjXp_9D2>:$kbT-kWer7`]giG;c)4?rCY'IDeK`$h_M[;HgDbjt+"^G0ur4$1>Afg1hK:Sect4
%qV,M=:VVAQme-PGf=Pr=o[U;Q]qkXS8cACHqX5;^3hLl^q+2TU(Fcl8[JK"IS'C7PVo.]H0V5JK5?EWR;Y6.DnKmAY9?tSES<#<`
%+.l?1G`(k[pR(0]Q']FMO1A$.e+emR9B*u^?JipgNR-J?9B+",g;K%ZOD=-5ldQCdE5<W;m6'q8ZZc,9TcUq<lMmnJec1fXo-Ksj
%1CBUI&;M?;%ln\"nu7b<hqrOI)^db>o(--j%A.flIsL]#`07;ns8F<1lZ_?jGUBW597k`]"Kd0!$!P_-G$:3_Z0B)(X^/8go!OKP
%%jl.iUo5YPDB55Gjecs%"rHWbgB]e>BRaLW=ZQK:HsGPbNrPmb^Jg0m=4lJUBS1TpnB]PAQQuuaa>=R-/aLX'agj7T*)7K8Vp8&d
%/2^Yr".Hct)/PU1"B*HBQV!,+BO.\37dN'"dq9E'ip7t2((+IS;jUm$JI1^(AC2Qi:7knO$GFD7VP^X9R`fs\d)JFRSsF0mCd"*u
%R![3<e$9HCMusQ'qB6Aa``s)<BE=89"IH&O?_cSsBJ'AYX*T^gVN_4?dp!MC&4pbk4bcU^epP_&$>']`[[a>4@>$#Ho#:u'4t123
%7QXN,oG*V)@#m4B9@fT9d6TjhH-("l"3^L-4=)nQd,GbelBKZdPgT>,37.aQ41IO[e=MjF:u[*X8q+P^&8&:H)+^Q>1b4Go8Qd,6
%>T`WDLLps\Mf#f;+f50_Ur5`5`+,Mb%ced\9N8rmlO[bi9H:M-[L;X[Xc0`;$q*l6H4+V'_d/F]8X&^:69\,`2\6:PMic#9JP<"R
%QQmb:9#4*n/rl$N1"Ta(Bb0h%9c-@*TGO!n-t4BrSm[X'GYKrHBEUq&,#gqn`^QXALp82`fHM=<nX.nW!tW$r-jX"A)[U4HU^TYe
%P*(Uca;-'VS?#.nM<Cs(;9;C*:me%PS?AbeQ&`#KBZiqP*+pc/I,QPM8nF/t4">Q9e>?*5T'BR(>Q.gT/.FLCdp7.,gi3).Kp6:t
%i,&8`l1>'jeE*4so(l6sr"odD!Rs#GSbu"A")?8_Xr_HR,ZVs(BhB-T,n81LZk2n>5C9Z-^"C[1ip:;2%d4]6oSWhJ`<#qsJ:;K'
%IqRp-n#s"jH0pL,!LK/Bkm+DUU7IqHH3p3mjRp3FG('aiIL2Wq$(q3gFSMIO<P4hHI5sgoEfTeR*9m!'T23++cB3R<&Uf(foHho.
%9;7d9p=,UAd!V"Sk1MeC,11WBnT[HWhZ^]@8bDR95C_(;?N0Vc_LeC58GW)!Vn[iqmq3.uJ$'@Y-c@#"c(G.L8`@$+JX./@9+/4\
%_L3llY(A@nU4(j*Xqs3CjauMh/i=0)Jbt>?I3mgV#]O@&PEY:HIGNeR,upqCC;TORR7j*Ao6$`Q<qdSt;oP;a_R[21lKi/l8Pr>]
%W@I8BpaVP9V.d'NAQYoC.i2]d\/q^#ADKnL16&BGedAO#R'k#Ae0F(9$!sb@9>XOK*%Og_W_Xuj:rf*9LQn`S2$t(tC#R3?X&<_E
%C8jr;$IuN1WQ_ZFeZttcLNlr2&f'MceZ5[uYaURu>#lOK>4%)s<e`u=4NBd.N711l%:#Og;J]oAVWFg?>.%X\f;Fg57+PjP_&ZM1
%M-"2hjGn!C;UOl2h*K`e;lB)MZ*7?>$=;7h;1)SF0e"QkAsnMB/5g@b+tJtFNR>0h=uSqJ7VC\I(.O<JcJi4Oq6;XEBi0VfiC8kK
%D@mh6hP&$@(`,5I%/Dr9r*$@:fY\U8HEl2D'l>9,!Yrr$Ml:XKd6/!8+m*hO(S<+uYr=.Q&PUN=R2qJ\6fg"!ot'9Zbu[SDM:>jF
%H-C?*a$cKIUh);+'326t1*)R)+Sq<trE9SA?88))C\c0^i['f>d*0^QU/o\NbVWR+a;UR/A<lQj=Eh`bVlk&_dD@/SUL84OXL].H
%-<m^?W.lMHI=^[gAk<l_;F`22H,pKb.(>,%!iD/u!@PB`^_ec)2;iKJJ4I4Y*p\>RUVLuG<M8=e7K#AbbhrD?HJY%(o.W=Gb[7rO
%Si>f8$:Uk^@u*A80%YN#XV&qY?JfNI<KS=q\)h2MVht0H\FX;#+"1X&Ne*0Fp=$%!^"0IG/7Q@F@m:a6YLI"7+;!-C&:V/U-'h!d
%7r"0`72>^&N]g]S&c5E7F]96@.KuE/&>Af*bSsa4K.TZkW]1-H(+V1rIfeo=F%h\6gW-=OeN^YK\mF_;X@GC+DqQ+gL&-X!%Jmo,
%:K$(Tg/?fXZp.isPp";5`:pY;e"R,$>nhiT@PBN"B^+uPAKY.`r+.%-ALRm1'baK'4rO?%Pe34BmYSDA"J!knFi?b=PN,GDS@`@R
%DtP8WKnr4NpNU<2*7*++7Cj:H\r#?9Tl)&9;Q@?/N`[+`?C0ut3YE7"3-(s*pTe=R/(f9QPQqAOWE&:c)T/qYUFRNk-n4Bk;Y<PZ
%qK%rS!dWXeP^>&+b0&1"=DlF"m5()'>&I3Z_kF)E+YY!"<+T'n$EKAWW_Z>:#gLV*BSOE(BiW6B%T9!GQ'AAHR^K*X4IinQl:an-
%RAp.l:kRLObGGVZ'pqGgC1f&nb-UBO'-DujB2qWjYtd;s.TqiH:P9k:=Krf!@G:2Y5:JF;>+MKO,rkjZF*N#(>5(o@=uqI@0&ku=
%*id_<8LN:oU$>9Pn^TI@Mbd<I<K#.</UH]0a4kA$j][X-<0Wl$*bV9u<3XU,ie&:pd-2/!Y1&!ta6V-eUrU)qcl`9iBDt80_[i7I
%Gjp*r..>!tK<oc<e0Y2H<osCi<e`*U&%4ktbYY/#P\8n(Y4e@(]ME5<,\_)DQB%j7TETdKE?pD/h("B5(Cuuob(aWPYY!"^KqU%q
%<<1,tr$<YUO8,!<UBQuYIH(Dnp>]oDL13)YPiZB)mNl<)?gW+fi&(D#WAXKV:qHl;>G"[MUIN^Og1]gId/#lO,4ZX*p!>P?2sHV#
%.XIZOFYW[9RdZ46B2e7elPsV[G8R=XW%ij'IBTZcpt"HC%^sltfp\tDW(#ZMD%,EGCQ>mdI"T,;nA):FNit>dq,)nbfgF?RVG9A8
%F>2KkI>DS&kOd]Xc%+*g"$$mf^GnAio7T*JBe)UC8@d[G!l80ehs#^O^CM%9D7ZN?&^@Z9&9Z;7VUH?m/$D#$dccEq*E/KS\Pk@=
%FORJ2aa6DKK3.D8SYLoQH;':H=,Oejdm(MAN)SoP3EI:W]5Z9W>$8Y:^>R?eVcc-slLMV&2m58eXh&UAkMXGqCTQ]4?B@PtOpXU@
%JS<o5VS7pc6X3$DfW.S,K]2u8VZn$&K<SBLhOpIb*k#E.]GQ;"ZElPrN98;TWDVC=C'5htUBT-=k0)/&3HZ+]rD<r7*\E`e"/_M?
%VmQ\L<O)L!c1Y_2?^8e\&F2@:)o3@L4_K-eLgAJN`]!t!9[=U6#W"K'*(mr/,oJl^IrD`>l+q.ub,0rt#EP*5GV\sN'=&,i`dR&M
%i?M+q9q"N4n(Q0&Z_agC9ub3'*V5j<26csnXZ13tRL>[/3Y6La>0uu?<kgNtS9Bj)F+uLWD^[_B1"Y^QlPt>te^p=>ipLRl^ZP)S
%Vr+:-EMZR?</J?=qTtc@<m0D>FTFBJ+M%S$FThK)4')91(QU"p4"Y24Ze>@D!Sm:lhB.ulogNgW:C%Om,'-*7r5-U+23c!A?Wd(.
%qu4h3YHJ4+b%FX;8'Cn[XtOc!ANFSV+)Ukf<POJnrFXQOaK@1&q6jqtN)`ahJs[.G`j43,:;WL.-97>rT"<A2=.2HJP"J<7WH5I.
%8?m37aXhS&\T#*D/f/;V=<s]$3L=R5Eop9Jr+^_XWN>esg`-oNip;)IYKU)-/+OGMnp6/U<l>Ob#puK1+p\R]Cl,R\p%!1,=5b\$
%Q,(&(GhYV<V&n9Uk'82n-)-J.-6:K4Bmo7PZmP`4hs8gIe,P[#b2&=J]gll3QXnWod!@I<Ib\^M5M<E:9H,=Cj(A5p!Z%]!+_BE4
%^UBu?XXThsh5):7l#Pa_feVuVG*PM;ij=YIgl.G47M[_bZt!NRBjk5h1dip%%T/.-0_@l\b;Mi62.Jk?q^59b[k7S,>4rJpndcc!
%rF/_(oUoXlU!jhh*2Rn[4oJi98nOWr`&c@lHX^l`_%&A0X)'kYE9A4a[PPJt15<h:Jb69CZi,Hi;bTB/='0DR5_D=O&*^/>O7*/@
%O10Jo/40\UK59J_QIm9=.O%9,1g`Tr:jbm/SG=YcZn>-g9OCIg$jnC+[n,.3HWC:rf7!+m<_maVj=M`L*h43W.,iHW86ZI:@gP)m
%CZCM(S%A*t(?!b1gffeDA_+*oE\Yd]Qa1JnZu`^>CbIgi4\_K9hA#X[W]+KPNY61F]5iHbM08N+dq-s,pSPS^ot;gD9ni$kiUpr5
%;rjDthj!r6c8UHkWV!:A:Fqnt;C(q),,s628Zr>\oJ$F3+HB>"q-"co(.LekFMAMY71PkH"OU'Th%i;q.Q,A@kg8e;cRmOc6gWTi
%3*"\&3am(QBX3`1PV5PKEg.t&%SnQHIQ'%CQV*>E4E/bZcW**gJX]D/(iZJ[DE9X`^o8Bbl-t@eVreAS,[nL[$@NFqD>DWDN2&mt
%+!p956Jn,fH0]."'?.SIZR&AE$?Ha#Dp+)q0CJMJCA7Q[)2PfW&!QQ;=RYL4aSCrUT8jKT03Rs$,jIm#IQEi$k0)?4:QN[&ZT&i3
%>(:P,5P@4]dJP'7PI%5?4CHWZj\li1nFV)GeOXeR(/D(]j\u=8f^s\5m"B3'Mg2<UTCbd&QLAO6QH*U-4j!KiR/@gt:,_i8Tt-6+
%!-hDomWT?'95`kbZZbi@_drJACCtVDiBQW.STPdq3Zm*;.]DclBb<J7%Plb\,e&e;;RcFC`'8^.$[a0Fo4`+0;gd3A:JIb]XudG)
%J)kfri-.0JlNa%eGLC^#%KKfFm^\7pOhW_4l1u(-_ti/G6Y!9R,<5R#0[+dI\&H+`:A%B"U#+m6]b]YVi`fSs908BiKsOID5JR$\
%Rp3V;hOA`&q9YV#>[?=;dcnF_pKUa=c\om-c.HYcr(N[+8*iBILk4uQ4HGMU5"N[T69apU#mV4e/6pj!Hl/9/_m.U)(,n"ZmJ,nf
%lDDj(>o#qkI=M/'p;goh5A"gTXR?ZW4CFE11r:>MopqK.2d?S<bPRD[#@.b--MQQfNZ$Y'i&<lKs6f%lhS/mZp>*3]??N^OrX[IR
%Ih.$KoTu2brq,IK_n.#XIX(k[h<jOSs06qL5<jYmC)V#7[LRie(Gc#oNqY>q6)ru#eHOh.o:POGs/Ed4HNjCgkBB/DrTes*G@)Tm
%T79`<C&Qi1*Hl[+n$M8$LCJ-UkMYbKG5)H60ffbJBqInCpdZ@R/7UGJ.I@%9J+9kXiEkr"]rN%ibcph_fc^o6KYP3Oa6R"ZL&er7
%`_16s$>s=USQ(i:-W62Sn2G#-mm-sI-kE`%6+`155b0I=_k-bal=cN:AXGTQ%:uWn6T<SU%j0p:s!J>b`ktpKIl^UhO(3$BW)(RZ
%ob6C(hi@m&GohaqcpO^)hLbfsc++drG5$!l[<oHJ<Q0`JYAP"/YNC]a)FoC'ZEEap>B*(9GngDMBmHY:D]#`'"5_/RlA0SubON`M
%o#/$Fpkp]jn;ZJk%l8h_OGDQJL>aUG:ucg@DF6=1;I85"-P)3(8^fh`,OX,G01O`o;]]\5A]/Etmc@2E(KY2Cn:mEX2-iNhL67F!
%4a/<*9b\o7<=$D?a[<3#0OdHW]TWNM&aOt6j-ARQJJ]/3h!P&!Nh8P[%$!RoC4dI[X!g8nkAe"K)mtghSj`3mAOOg`_rhLU`k<Y$
%C==dG[IM@pIm%'LX/rt!)<EdBr:K7Hs7guRqtbL1k3i0ihZ<UZJp-+sf%I44B]']!^5.82-hm1Y'o%5`8uLK>D0=;jdJ2kM\dXDi
%o&";gbQOl,iRrRkX^)fCi8<3fl)S8g!rV"a@+''1c`CbEm%0'f*NfDoE#iK7B#fs7a.:U2a;jt<r28%-e-uplIPYLo6iiK9X("e?
%j8>=M.WPN^p/<)r@]@U>I78]>ThYIphsG1]n*pps27M!K0s@.++Fho2E-#*"[](dg_3Y!;K('?Hd:%^aa)!'Hr#Lqk(f'/<WHYen
%R5rcjf'0-=rQZaW/fX%rP0@O/`KI8)c@<jClD$*`d40PJ5b3/dOWS`)9KU8OYpmF'!AHK^W/\.\W%E;lG;M8rNb@(]\!<-/S7'`3
%12^`;`.J,DQk`1*2kiM@r]#T$SVfmf-O+qH#8)lm=%+Nc,sli9r*VJ7p16lG'NZdT`88s;IE.kjKc0G><;E+7+M;%%^J32^!Vd.M
%ataWs&`RZ#T&_>i\\ItKZ;Z2c^n\?hEOFaEapM=;;HOc0>[p*pV=?U^qf_;OW]H<:T/)$CkBM%PqN[1,<-<oqZrc?D^6=W?gO*U"
%F?=oRZp%.Cqt.The'gJ2NO+%7`\ac671rKiGEroG$3KM$$l+O0F`!ZiR%SK^&o:HlD5BYQ+<iT+"*h`>$/,CJZ'M7+*t"rqE//PQ
%CP+8b#`jod*QGW6E-:ml9j13IPo6on/.eHu]S4XP*=6*W^;nT=3/1PmQfnt=XF#IV]'Nb7Y;FiDiM)*HeYGRg3r1W.1CZ_nmDmo/
%3i!"3^T3KN]$)i1'smA@4*,"G642`dEbq+G66a-PaoKEhrB%\mTB9?ND<:1:(ZI=EW'`7_m<%"WCAtgRPFpE'T0U\Y<S#8)#/u+;
%QAl!dI26n"Q)T!".<GZ_=5"4V!4"eRV*j=c8EO4FKNgMPqku$C8hRm"YtR\:MiS<7lq#t]5^5dMKChC>WJsN).??COQ7=k,I.r@R
%@C32lEr6pTjqpkp-0NtL\?2P!ikAYb."2t"GSp(O%e'UMA/qd4dg<b/oZ7RYV64H?FRJW<<K>4"CE!<`O*,m18)\<]=3q[Hj]ddP
%H^*+o`!jt[7Aoc`Y#lh0`<W0F0.Qk/Qb1Bq@03Hb#$E^CVE/:n8C,R41r+I5m7kVb$qb1%34H<NLR$Q.^+Dp/dP_T:N7YqXYg\RE
%KsGuq:+Ju2&5t:p;Q<_HBeA2r#`I,[AYXcIcqOFTB]AZ(\Q9YL+dHslMm'!!.YDa1@]-sr*N/YTT4NE@q!\G7i1;SHmdWFbO\\..
%Gs<K[7K4G+L*p80i*Y^\8Y5Q[^C:A.Xo-f@a`8j<H9:%-h(hlZcI/r$$trbXVW"4Aq@*;%=9LRA?II\&:Q7=>2U]4JI5e<mf*A*b
%gTOC!=[6MBU+H;3VNH>rQ\Q]dJ'`>O[ah?V3l%6H6.>RD\rQToo(V\57Ft$tUU68E7_raR,!?HGdEGKc-PWCS-E?)EA0Mf.WAC=9
%9\r,J)M1**&+F*:Se_HVUu,40XmXH\(22;adX"j?NRQWQ[qWN5I9>@EWq,YL)>i3"Wi>$XWFMo9i2B;'C3k=ib;6Ko^0*Fi)0kD/
%Q%kloVN-e]TN8GS;iW.nW61S3M".`&;C7<U_Eo!S!3\.N9YSYR1Tk_STGd8_9*_d*NC_c&nMB:0&%UltLg8+W#d)fp+*G#/kha5O
%9OpQbUGcueeApQqjQfUL&a`r_^]45Vh<Sut^RG"g*Oq$-,bNla,mGN;)A*tc!#lGl-,5Sqa6_C>*u;;E2ajOj-O4,ZQ8&Yk]^Io0
%T%hH\rIbb(Md\U9pso0CT,-h;Hkq)5994Hnh,Tb=Qd%/Nj:1Lup)[(9WVD3IoaoreDSHh"5Xk/$4+EQT/QE]9-?5?PbUdrMFO/1:
%2)1X_Ep"p)ik=+&J:?Y!7:?dN+P[K26($Zs^66@D'LEgo<L"E8(jpdXGuqa?"u#?E<2BjZ-W:=:Y]Eq&<o!>PnFe/)AUq*E5k?Ij
%b,bE^[iOo;"kDEA@]]I^7kj=j[fHmhOetZ7<Q(<=X.r33XDb.+(g%Yb:c-C@cXM!.FUJn+Q?acQ<Oa5,#%#/mmnEG$?ZBO>U%P3\
%%PK4S\'hjnGZ93h2neZdW%]8k?%ZREEo2A3_YD#!QSY=Uf@>:.FTRc[XaOa?_tq*LO+:aIlVNS?kd7qiYWuWU-riWV`J;ulO(o"H
%A?>fUlgsDM6Y:lU_H-aI@U%FXh2Y>LDlMG\S3pE7G<8\f]ObZ"GsBKS5u_N%^C^i#%i36="qk;MT\klN#-nE[$GM(o@Ct.Eat_;%
%Zefjm'9Eh4TWin*^8DhMj&tq\F<iIrh"NV,0Nnl=5ks\I\%%l[!<T#28%rS5h6a6[%Vlc5Qk`2Mp?VSc3>KL-lU.5).[2ORq`UT+
%hBs?MH!R/pICIf2VDP(5MDggoI8<66`qu>D=3(I#1(=OtD[jj3jL-u?el6DHW8@`$\@Snb+01oB4:+F`ZQPB"#U[ZtTpGG\mu!&$
%N5-q!Xtj&VS9Y=u\[\bKR5<*t^oC.A4FA/[Zuf`)n#O)]dp!MEK<PF[5UCYp$_he[MHs3+%\YYN:l.PuG'./gc"r(+#csb"MDY/b
%kOj6l6,uA`@$SpU>k`*>Fg%"rD7jKj!oG4VF67<+[n]updB)cPAe]kk1P/ks9(G^mf@(Lt>G<64%toJ'.d>d%rV#(7m_eqJ.-gJL
%TWoE"@)A7acd;9ZT@H+n#&D!(^YWY97B"GQrjW[mP;,nR!>:LFiS_2WqV*YF0a0fAdtcQLDnj$b==9d?NhS-DPKF]]%lJ>Cqa%bh
%3pc8EMS8<=!'^opK#QfX.J@4`pFL_)CC3$;m@AI'iLM`maSJ_nY58GR_u6_IEO4O0DuFlC3f9B4'LQNd<X(:#^[#NDh-DtZXug"[
%b8miQLIR_)M^g=Xh=,QB^O9T1*j\B9l0Xttrb;+^gCKo+L3,@6qqqtX"+&0=U'J';a+%kH-j'85[i'[`q;35F14Hs;h,VhGge[n1
%VXH4I?hdFSd'hm\5ia%Ipp*%u0&:I%;db3TU4K-d`":h]!n*dV8)N*ED#<Y9n]ld6f<eTi1XQ`-1BO7'?f#P<cQ#--s!VfnqGt6'
%bk<Z(GJ^7Jl#2jmju*D1(HY=)e]G;DdIqW9N*s'WO^B'hX`f(pjM11WUV&B8VIc-NGiEa6T(b4YF82Q`c[(gIO,K@5RDr84(4,-;
%c,6IP?ShFpS)nMYpgO"+h-U[FYA@(hNc>n%m(1$bh=m[Yj6OFk4`GrL4?>G[dpF^kI/`nFl0!gd^&?uODg(9DC#5E4s8MhTe)tEf
%;VNH($.Q"lB2H[Lnrc_4AF^]@EF38Z,-H-d"5aOF3G&P5M$S!i)ut2R]Yi_,Ck<KOi#*Z@=1"$q*1O.I!Mq:?\]P]Y>cK-9BfHhE
%MhSUYT%T:uNdrNI,I#=3%%Cl_%7/"kj7Ap>)$&hLPD+l4'c=ba;W(9Kb3W-\"CM4,]uk.&$t#:cb,tD#=D&djBT<WM&?0NHdVBSu
%q$ZJ\2a;(B!J^O(o+.HGhnJpYpAMVT+9&YE;$HpFJJkPhEaS55lRtJ&7/1s"_i'HE2fCn;s5O!Tf?j/jh;?e<s*+DPZGd'5+:u0^
%=Ub';_^l!K+r)$"ol]\0_$RM*$[,K/*t&Pk\,2M+"Ilu)<G!B3>W`*%(t(=nAq(Xt#b64FN)oJhkHs"AKK%47@jl@dSi*+DeH4ca
%D'HkEg)NGagnSPR`Z5*Ge1e+!H^88+<B[8,/AcoS)&\k.qb)tF&2HGmbkuc:],uL0qrdtq:+_!urf$lP3@^U/T\7Os7R3.dJ?,]<
%&`64^g!.AN98;]:"J!1"#cpX$$k2dh*WS5uM1MAbJ6dgK!3h"%NPGsS+TN\T%42r_&=hnn+BY9d*=.Zj=9r#\1B97STi9VR,RL*J
%L-)WtIfcRP/D,8of1aM'O@=/S9B%V']hh8_)kNHoARPT9](mRgMZSp(!kgo7O<s0k0rF$]dmWPqJj!up!(Xnh$k[ck-(%?I1GHc#
%d$ncGR@fNT,mk/*J9;'H'kM"C#\_!l5euGDFoX"5M;1Cq8F-&gn?q%0eQ:6L..C3s00nhn"X_q9nc^J_#iJf4Nn`^MJb(_'E1e2%
%"ajG)WrpS.3<VQj_@A,M:sjYlr'fCmQ,TXZnIR)N(pHl*,3s]qg:F_8"p'iG2"7*'XE_T8Y]"O-i%MFd1s-A18;eF6)o4JB_T$O$
%m!Rbf_gl+jhI:)7$RbljkgQ&H&q$Mf1]fd^'^0*4$jJXGO$n6Y&5s_V#]qCn'Ln`K7/5@i_t/]X8=0.%4H6DNd58#GG/KMMBcq?.
%(hR%J_QckG_BB\="</gMk@b0,&^,.JP`m7um9Y;tk<Qg\Jt^iuI&uO+,7%k(1bc_d=XQ1taBdk;%=MIOf'YF\G`T1@$mJf:s3^K"
%\nd7[Q-YIk*iCC;H,(F'@$mk:C&aOai"BlZk/PJmI6[c8Z=.un0e=P\&kjDM`#5)X@l@Y-=/Mk-f2j'0aA<kJQEqq&5P3'upY?q-
%8sj)VR%1'NZB0iNR;N6P.^X0Jd`U1&DtGd1-8Q3F6qGTS^mGfqXuf@<3HLJB_dEQMV;3gbc9V1+/2Xp>ZU^u)W+&#8?kRDgLJnD1
%f+f3+!rU*bc/>iRI&ai*7`l5tP:?UfD+th?dgYj\N&#&QUOQs+@iubp;c`-:=RA[*WTY!`^6Jk]@!YM<7$9rYCo+X%,T<)s68`5R
%X.(Yg`s`']&O@e=pehpIB%d;$La#K?PrkK"1Y/<^7XRX>WhKjq]VA$h&>+teT[$0K%9\ZY%Mb/8,-Na]9!%3aM7FJm"cm[Ab>N8'
%(IB/XC)a4L.af)n+[WDJhJEa]QNMao*4Btccgafal@!^nLW8[H\ja73M7Wn.9B6VFV32!4*Q4@cG`J@U;11!nii*#*J;e>diZ2?\
%pJ:\nGZ'5ZTaHrFmAhnPWH7SgT-ptW,lL'2&kB/]On4F^WUi**._'+M,Q>VB7Zq.ubKYclFe`1?MEofrpMCpGE3(\m\<+&u&djMI
%LOiq?1qe#Y*Q`I2@[(SQ_*<WA!olt68ireY,QiD)A7S8nXF$$'I,/><b!\'gA*lXRXHJ#UF3HP)b]t@QQ*UBtKBkP,5nZ,-&(!n@
%)N9^ui\GNV5<gmuRpSrI@br(Efa.A&]Fe5`j8KT*'7iV]'#?Q@!5s[V(a,bo/1t"?Xa;N/Vo4&A0P2[Zjn1ic]RDbZ!$n\QF*>#Q
%(IW1CAGCng;/et6!GF7D76sA@NhChAd;atW#ar-qC]pfS!LW(lX.ikV-_)]>`",e1lF64?kDMnPpr$#$D#`uG?[^)qFRZUqVIt6"
%2^a$#GrCKM&b<=PFZ57)\:]S@]9)i"hA9K+;CN.Ioh?=^J@)Q51&FK/QuB"aNCLX_G@(k-^6:*t:GMg1dOXT30!_$N%TMrB!1k3!
%4iF'A53ubug3'*4^E"Ul+?TamVXGTCj'u)dOlKN#lf2^cJ-[:ch(2`r:6s8@a6s!m4Q/`d\p_WGFk=,FaElLGL138j_J7fsKrYOD
%<&Yld/pgXI9F?RZ7>X3eTf5-a^qiI-S(>OZE7`.]E^E.%L;N@7T#_-*JDb*"4.=,i.(adZoH@(@9c9d\.)6Z^CW^%AW?WO)5up'g
%Qnf%O1BC/)rim$]c^&Dm-<%tjJjiUn,:Y,V)QU';&qI3VGts"sBVr]X0RariE.[Z`am<[JI0+#?VI/?*h/"lqGf-j^aqbQM8-3+;
%CpF+GAuu+b3@P+'&EY)ZN1!P%!kE=uG3TOUY2Qbb.XfJF3&GB#''BZRe(2TN6O37d)>%fT.gA_N0`MGGF-3A&,29J&74<73+I(oT
%"uM4eksP%JYJ1T1I0hH:D\t'B5f4q!]h@,r`EJ_1J?.C6>,]>7?9;Q*[t6-8G20N@"d)<*'(uM2^=gNL]=M@)56,V^ZX4nmjW1FZ
%G6j]2I19P78^'@NnJ0]p9EJG9fEsI,<.]k0U]n[_`b)CU>JjS$^37HH$495'OUYY`pa&RRLTbi;dH96E.km`_iW<KQ8=`>$`)dS"
%h2&7BC.p@bn?m$0J]oq[?gCCCiP4>e@EE);Y8'\niHC!\\T2d=,Dr`DI`lVcZPe^aEuK$6<nj:)dbu`"<+K.._ccboln0=(_JaKF
%,L3%/k40-t6.C_AN&V1iT^UT"_Dg5Z\O,$HQ*W2gM6qCTREBYC>M9H(eeU4j_aa8.CJ.*N&CQBBJ,fbXVSh*p$m9jKYSQ`FP>9T2
%[P[*Bi@Pn[2Wu]:m_n1iG[$Li`\a>?=?n:!W^kh?q@'[sJ@8j'XeQrb(@ChP0@@5h8gR&-<4#(OBdPi:d2#HccIaGsQE8B+L:/Cb
%Y1fRdeU+;YR$MCn2Ig+2Lpl5IMq3r&Mq5h,;DQr-fGccD/PHs`[6(aLQTD!+*SQ)Kf?@eo>8TX\Bt&qRDmlolM7-s\.rg9O77^]O
%>F9MXTqX,@O-'g1BFA2^`d4uqT_1;RBFDVqh%aeS<*ei=*l)HW=uN`VgMr'qJ[T4n-b@a"D1RobW.-Y/$Tq=D`>cd#(m[+UF9"!L
%S1**CH(`;XG(I)0?4c:66X'i_LVUtCD0%#TAV%6s[@"WJV$!qtA;;56L:(Q@:J1]h^p[c4?nF"?0r'7!'7_6o,M"'Kb\"Xo>i@]3
%!GfdtA<m8uJ5asa&_>qIBOWp)nBEk3Y-GF8$ZfWH#V_H9l8l"(m=c!b/$NcQ9+_2`8g]XGg9A#o9dPfD!qrWV^0rT]_Kk]'FBG$#
%<q])-0)m6GQHEOdjXE`Y:)@q<G">iYN\r#__8u:H7Y$Qj<N$qC(//SrRO-N':pTYDfYZU9;FVNi[?:^Iedg&U24uN@cN8B$5[+=@
%'UCKU$nR$+5,'X!:2`\@BNt?m9+_2uXt5[#j3L5kXX)3:9*kX7Gkb]8g-Ph]Rn1%W=pEkI71JAT2pZ86!/G6^8aa!*"bT4'.a^Qj
%hgu?h"N]#9rddFn!bEh!o3sMCBI"&lUBk=@7Z6^4HNpC9"cXc7*Me?VgKBr$V%QV;B*F.`IbKD1#S`5,)14,l1bsr*@'LU*(^.0/
%Z"OA_NV9p`9=GbOO=Ao%'^6ft=QNeRIMX)!L;&>/3TO.MG/\XRZZmdu=oksG,U8-jlAlGDBN\gl(XiYI79njfc-u#Mh#pp%D(u<f
%p/iS(NBH+hLa0-7m9g(?9T\EF=aanQ\WF$cKT*d4E.+d_e)?80n,c;^)N+"I"#Vd0,S8YnJ<i+IZJQC!qN]ZX@:@f,'$=Q@.`H?l
%&UX]#YO&/]Y]Pe9DNJ;23<4T.d\%RkiCq5lK\-FNo\)Q<E*j>G1h.aT+$&4:nJC[':Nu+_%!hQ(B<)?MB/&B`?HmK2WN:Up%G2bq
%$j<-[*"u&Y$aQ:fZ\]JG)ui@uhQ:#k::c7Qf,,,7+$pX.TNjS^[a2GcotVB*X5>Yc,KX<@d'A@^E8Dts(%?=PVk&J!6*PF9m[P7G
%E!,Ihk0^dT2nJUfcQam\fJK>K)CPYk":e:i%6B]Q>S>]i(*cuZ)@qB8[8F'A_Jq>"-,:D'7ZqAU82\S`@M=h`(*]IU=004nLU3c?
%8egs=?U-n>`fTDh\[[5)1PI&O)WA8(J.kq^A=QbMNpp%)UX'`#L'$V>n;S`7kXALp,L;ng&fZVW=8JL'=;DDn,aA1/"\0]Spu'Me
%FH=5-gZjdVRrS;9=L\^>)ndeQ)tUECf(%%RV`NQXpc?%*MrIG.P'$rX5Z\Vl7V4LDECc>"%4ln65=\<VNinm',0oF.=Cl"qEc<1N
%34X.4g@Z>21Os*teRtChg^lP-!:Dmn\)Gbl?tWqeb\SOs!Zeu<fh@EHY.\9d-lM/aQ(TYiU(9?^$I0VUm5(/h^l;N;P(;a/Upf20
%G;0!ZX5U8bLat_VX9'O[3Oa^(4:9XD5JW:EH,^sjnD_^c)/73Qc8mZ?[BIr*=[sHtUTNIc:hVWi.RbS\]hpa:!)X9#[MmZsScH(b
%J>Y/)_btFHg,>$tLI4F)4TQdEHZ2DC*<TDNahn0GD<aN#@-!+oC)b!q?tgAXA6U<%P%k,'>PBeY9pD?TJrN7*K,4MJ%fe=lO4q$]
%m9(kNR$n+\g-QrGR+`<r:*>ES8(9NE&h,DWpBO_54aHum<KAA[TnD#0f0U\8WNCo@e1jpO")9rLB<n1!X1f?g9m\.OE"!N!7AL:l
%f==XB_WC9O1enQ"p8BS,)CQp7*X2KN%VAHlA[@W0L>q(%j_XlB#fFi23JIZ;]I<;q..Xf(VRDe#7W<&!o:e77".DQmh/%=iaHs]C
%kq(M@^_u)<YGRT(KIC>tgn\+5R+E"R:*Ono`1*FfNJiP=I]k0NO!<('&=3g[(*e]qF?saU$#q9=Y<`$f>t6)<GI[G7"sDV.A.6BY
%k*SDqQRG2\+p2?'pm=<kN-%TcN.@7L"ITAsEUU:e"YZY*YP9lu"*=Oj=u+sWZ[$Zp7rDj$b^fI#e'.cV=eZknO>[?NQ'paT&]NIo
%<HPU6jY8!Ra-A.N,.%o?joqYGcEo$,@?e%!ldBX,5Ht(D8AhK9Zl&lU/=$!I[9na'Vl!J9+K;([(a*sG%*FboQQ[Kf7a)TC-+J+X
%(lm"3VQA8^1@/hI.t0985YVdk6BJ"eQuOoP\5gqqEOUrf!ef#KSM?[hNZNfbb-J?rQEf`,G0:8%83u%J!Ghlo?,[ECLEIXueHXGs
%hJ,]G4b$j2Kd/pZg3(KHJ5j#;LRSC*TegpY67jjB8d]t*Uk!AL(Q@$@(5"/s2M:UOo^o3jAjpqF.pHFMYbK3!nt$0E>"`U?*MMN?
%YQb4lFgB3(;c1C7,rLg=U.R(3aGi$^h^*!O_">dT-,]rUiLtd1@<Wq$7X7-([q5hNn8J[-cpSB5@S/?+8e1Y!>'-fE>Y1+K1pUT_
%A/(+Na8V1]MOrm<:RRn)6@<4_CiTNPfO\"b!Q`b*c>DdV"Y^K2WrmEKcI/odQMnGZ*2L$WF8Osm!74<]&aTQY^.<)aPqIJS7@cu&
%X9(->hf?A1_J0+0+qaHT.$#'r@7#,eD!MHN=s9`&#`c)1S3=L8OqU#Z_0,X%7NP#)T.!GTJH7=#e2EGU#u,#_\9J8%UuG;$3e&,I
%?"H&p+<gIl7lrsA5i>f7E%$UbK(.Y)8i&U>PW0V!l+H2]U-@h7TgNtO745cp8mdNF^p6ksXW71hJ<<u&)-8X+"h]j@fOA=)R:GjX
%Cd7Ss(M/meKM!<lf-+4Rc`Gq@lhG<T'JZ;t?iMg>?m&5lF5,XBoGmYl6!'2WokeMa_^#luPRp$O(e1CXWB%4f8aR>&>=GXT(uPZB
%HQKtCDf@%KH)YN>/K+o2Sfn)sd>*<#A0/(upN[O()*02jD$Vg_"i_iZ<Bba>W"G^F'#Q_dZGCc&C)\Q&!gcUa#tPik&TKOO7:sBh
%+b#57C*81]=;n,q,&01.eJ+$`/:;cA!s0:E;9)N-D'[OPkHH'V>V,6n`fMukS(%UX.AI7O.??*-E.-?(5Im`[WLF.V@.ln,i6^,/
%-L53]2rogiUJ4eD6=(MPZ&cs/#oNVWQ<;`#%/^utI85M0b94-270HEl).HEkK@i7Y$FDBAoX63Q/Yiq:QM1a/:&rKp,riY.QIs'r
%bE<*V!P*e,[H&d7&V,M"-t1qHKs;%]o$'<ab6hI:oRQfX`\J(fd0t"*,MTN`LeT;9U7&m>KZR*EasEcWQqft<N$1i?P'DL$1p_UJ
%\%Zuo+t4-9d\4OcXV`"@`(mOV!YX9*3LG^iC?luuQ(qooMEORG[aI)ml4s_pTsh;[o#j]N"opej,[k)*=@^rd0WRfT4+pSf*#+QE
%P"M2IoUqj14qiF$S@H@jaM.-*U8VkWK.1E,"p>0TZ?`^'+GM!07hLa#6TBHQEct'r"Ph3sT(=9\gVTg2PFb.BrS>8B_6[gC?[E50
%!98[X()8phgBuE2[4Lm(-Q%p,06Z0^1FLSCZ^RH4-qq?S#2]jIqN[.N1MK6+p9>(o\q%k!8HBrZBbI9E.$UIX6^l?Y9opVk/5-"&
%RJHqrp[>bM.p#L\mpJ0N+4AVAEIYK[H%?knF6M`Acillr_#`u9Xe,!YIlhVLqA#CbiTJ\mkEI@7TM#E^s&sTh@5q8j`?;V.2Z]Mc
%SDkqk(8D;,P6="dF5jI7]C!>)n#JR]1E=r68<h!t9>rJH$UT4aXCLd'E.e8ein]a#h&?<*hp;%"P1p6U&jmWCqJ=S"2,cb`JXK?b
%Z?a(#XMP(h[>9,(=l\+ON.82&kPM>jS*^rkq*Vg-\EGdG,Jk&-4#SCi0a`jmL::1]'^LY[gVMS:]Bu3i>T4%pZdlGJ<S'm*DKgl5
%MZ?U(G=U5&CIL..I_K_]O@+>8K("I$#$D9"0/qWq]\3:YRr++sg"q3;gXKhObnP9IKi$OC37*dI01V!f7"J,bC`q-Mp5If)\`ghT
%eqX]eXog@Ig`8kp%4'Zoppk@ENt$D=PgI^/6/$Rb]J6!A),I8_'^h.5Z`.LGq&joAWj6cMKmcp1-M*pd)=3PR)BqW<:l$G%Q)-mb
%NnHsV`%1IrY\b0Z%Qd<)%QoZcP&]#1jd:B0hH>l2q3X6s6ZZ?_==g1W_#TC!@.aN7pD%=paIED6<F5e3(,TYq!WEGnHt9(kfNHCh
%9<ddgQ9I%.mOL'Ae!>U,#,(AE&N+BkV/TJW3"QP0q?nSfU!H?,_86Co@FS<AaN=%`32!Y\S\t@NOQAc+OX(3%iZM1L\#BHP%+H%&
%pfe3gG*W4?Te>q3QJ9Rqk/-'e$mgi=9X/TNUY>qGBQ/T1q/uY;&a<m7KtKXs`="$k<FM&npQG4upuudb3tn6SU7t;HU6L!Kftb04
%DV"H(#otGZkMoOsb%V%O1UMB&9s@tF6p+)][l,QQrQg3-%i?()chJ=0IcB'IVF9hP4qZd"`t)bmVKcs>O=A8=j8$fA&L;f9r?rL3
%DS8MrEp=ji:*Phnd-GL.@%Y[Gi!t=D%1)QQ%'%$@2BWu@W+1u-*R#X$=D<cT%O?;&OSAMbLBD+RV'9%#A-ZW#0XaVg<[\:O8sI#W
%2FTqkThbETM%IdB,6i9ufE'AN&F0n;ViM\sk9?fr;@bDdLh%(=<,?VsFXc@lP,#4qiI3i_]j!:6BGNO>Huj-7Y2dNjYE@iF*Z[SX
%-#+L:iWC%4[5YO+qV\AiXl!lmpY,i6:.[l0#Jmd+ObMoil7T((;sA4'd,2ml?kE6qfi4URJ)tKKblP<NCgB%,?A5a=qJI!e?"S9H
%a--&WIdpH7DRu=V(cT:ba`<=ImaB(5l>*784CSl=;cBV8U1aCQ!TpLV5hl>Vj;\OR&9I?KOt-qC9B[c0aA%E*(`W/UNTXiH^gg@a
%g^+b](j[<I!&\<CZ>BS34WeJ1/H0`V:Bl%.TRkjS?]/Q+3U]TD@R[Imo.6fA+@o!l+Q,KnPX]G$gA$cua73e^r]c.Z$rE$bf+KD<
%1=IIA;TX&H?35C9\sPN4!A/0,3Kf/."=D7l+ru=Sdi-M/%q"$W6#HthdkKef&GTiU_+@Dg63hc1NC^OddOXKaS24\'l_XXhCb4=M
%'FFp'7$<g/SI2/&1/k`WD'n7u5`Ya*@$UA14oO&dj`CPT=,Q@V&.oZ^5T<7Enc_EYqmP<Ei325_@r:"g_btjm^0,uM-F*b^aIF#;
%N__YpU?3=RF./*^S+s'(*]kA9CaNN`&r9%4hFpR]U14bu!/`dp@53Sqd*Yu+-jQco0qiK+FCrqO<qN/N>$\<pYT#k=f$TpBb.cMV
%Q-lC[_tP+p@bK!@RNqB4<Z?![(sC=\MhSF+&8YJ'Wcc8]3F8D31!M^00a>:QF>BM-$aq=TE=EE`@)LY-XQ]$oqE[I%AKP;+]F^EV
%"q*K8g!Qt)c#XqM+opdCQFk^61-<V'V/7_eRCraR1G.g@MlEP'L4R?(4[mu$&NK`%=iEk@3cLj7'dsC.)Ef'0ctI%smc^`N@aGB9
%*"F6NY9Vk"b8?JjTk.1XWc<Y$fQ.N=231i!1>iAE5*,W?"89C."#iF,,TsV[LlQQ:/@[&MN402_$(-9`:H_L.WT$Tb4oasD6-&<G
%T'`>*"rrr%hf]:>=b$UBM5^jkE5n64X?]oU7m:TT/p*?<0l.=<EfM2.+GMV35XQA9aOS'H*_EP#)81E#<?:i?1NE^<!Jpei*(gq=
%#N%DbP%S/t,OGWe*Jp"S%GEe][\--T]]aL@kS`u4"MfY&Do^6,&#T!gh00=D2?t84bu`M42mZ3_(fk(BJjJFS25\s,D9i3%=SlsG
%o8^-#rQXNA@P8BBEdO1u0Q3=V>4PYa[,Iu<0*c35g@2TTo*h0J!918RIbI8a:0S7[C$U,rBu?]qE[kF/%EAfETDD]s\3XC<Auu;]
%Z\F7f#*JCmK^,_Y"*^iTlMeb"V%a\l*RCIFOY#En[SZ<]5i?%1o=4s\1/"n+6X'i=(;pdtecC,<f7=lTKEGiC]9.p#&XZ\CP2LNA
%7[sk,L36JN,!P(JZHEAYQC+ABY+Tfs%b=K<1^2)H%#bLFMs2d#@pqO)@s;TFi+5d:BY,6&b!_!c.)5/Bb*i?#!K8$4`tt#f$TH>+
%-Bm/k`EE>V(kF'4dn8\o"0$GeSs5NX>32+]er)Wm36Jt&\LKlm8DsQ+ZQ2kd[S(Mc[VZ$[jldhe>u+nDhc(N\_(&8*ONgHKHK)24
%,J'%qW>9>G`XX20[pN/+*FL?B&'uSWPp$8eO-4^2lF%ASf2T,TZ",YH^3`E;&^L50oT'4l8fIAV&ZC='_>J]eAG&J@!e@"9Fd!#;
%bj!t[0Fk.JE@H2V0AE'[+Q%m)mhdUUPTg5OR'JFTVut)$>aj[SblCFgX$^)](#aK"*J'+34]qC\FG^*ZrT:osjP29-14ZnP[qKRP
%gdei%!@X@]\ucJ#^^5:A[]JIG!n%1_NIoX@_e;9MQXsmS":W:B'eoo%f7T>B63g4mQFn0S#aF-<@&;(,#MBNk4g#R4`>Yk6@l+nS
%g:-]jGjX-R&+!C-SnU#A$u?4\0BP)HYTDFO],n&4&Pj%YKk1Z^J1'AHG)HXD752<](3W[rQoIhUo<jV9p\R3eK7;FP'[[#<-0Vh/
%b4[u#,oM)5G,(kcY@/e#+a.HpAlt9ajC1l]6<=]a"LJcriK<c4@NV2C1FpQc7iOf6`(BkZMUQH`B;;&NCqi88mooGG=6P7%+Bq4<
%fhtEK$WlA8bFBl*[cJVP[ZS9js!\gd0kij_"!\Rb#B$AYL"&r7fP*!Q[$"I;&;R`iZej].&lg0UB,O%_Pm9Al!*$nA&q1&A@e#Ga
%*XNq6AKWO8?cT%47boJmo2/tCIdSb;6(IP#O!l6IE=E]a@]]j1+JQ(eaFkgI:._%Sn,hf/)P^jZPVP<L)?iVhSQ`S".#R2n$0XHD
%=tBlY;'6FfSS@kh^lcF&r)Cj0i:O9L#;1Ci[^[m4T')`\e>^]g3"<Tna^%=@&2bc*%pkDX"Z?G.GQQ.2$j83rJCm.#coAn8XJqEA
%ba7CB/36pQLp!m"%D["Qe7A>"X23jMY,.9s2Dc)%]ttFb`Qu2IP#EC$8?$k>'1QC8_5k-Vc8dok!6:W!W(4TVhJ871b!lID!"R5W
%/LO/n+$@UXU1a`Fg&S$^AheShq+H#T+t>_D/<#s@Ku]<BE3.[?n9orm.t$2=;m&DG3em5N=L*_"M(T:'b'IYP1tN4<PAT21#-M*m
%4U/u*@t\0-C^'lBVk5.2Tfha@OngAcBE2Wl"e5!Hodbu_-Y#;oHN7&2":U$F/e$7L6UGD2eH2Q-9:Z('eLhIh(n,uj4;c6NE2<i1
%<6)ApYT:h)4[!200C=#c,\s"#*(<\JfNM;X0clqu!-;E)`\L!t;*YoB05ZL`.9]=45GsKk"P&GsO<R#I=IdoSP]XY/8A,:B[V-8W
%\Z'%W#`UlaI&%aY"/`Si+d[!2(s2*P_$Jn:HFkT$W94_:Cc"dI%W_n<:)e!hedRVW)F6%<&=>(sQB[3L+lMEsaX%B9!e=O4U#uu3
%MOGnj3<V`A)U=3g*!1b8?'/AT_BC<TIa1*3_"3(/a+6Unkq1;o3Y$^4j42Dn*!1Xg8jYN@Sj]m0N>r!uoGT4mXZijm1==#)*[*0r
%"=EuCokK-ck+<B?`Z[%0Z).q/%KTrt`M+?(k>W)>M7c^\B\C0E0P,oYIUEa)_9N'ias$ffp_\5$,%.e=&F<LeO&sIJn@1$E;!tXT
%ALc9YZNr[F`.M&*!WI/a68>bON%$/"K7H`HZ@9Y5Arn<,IqoGoniEe,+q+OurbucQ`ZP]V??*.tK.q6Ec1mDefU9j)`us;j(#/b8
%#%>>j?K0$K9O_2V(k`4<89tJK*4)B25sPWHV[76nk*IX*nOj&eUl%=PNBtc?m:Bc=W/k/tA.a@<6.Uor"?rI<a<GRZk-/A.7RX_W
%7:9Pifo7Q"7)J'iM_Le[8hc1-#aeYp]d55H63*ifYm>.?,\>:GXC5r4=bM?:R^?:F(/[TFq<C!VJVYV/2ha\NdMBc1d9$NTJ+A1[
%^ao^PZ3Wj]/2_%(7:8)d%XqdtR*!TE%7DiUKiadpb;pZ&/r<hbWm^],\g7,@9ZqtmQlaJBghc_5_tBi9KU)1*5RB%qh)U)WFQN)$
%#Jo'7E\n,PGZlf!.>TAG$h-M<4X6=U\_6EJjCodC2;?Yp4N/Er?[DdsSLd:+@*GbR`1.]0GB:M#9A*E,pH4?i_Q`q>8L?E<1BU)+
%&9ha<;Z,$MT03bC097d%G71Y(,P([\."`?'@SdJ\1Q<L'[;DPiospNW2qtZ-BnoP"/tSI4VCfPiJOT%u=Yl:hblmCDmSX.Md$iHd
%fsOOhJF%ULJN*_q?iduGJ?@D*m9ZZHXh/Qb9Oql5K\!GWCY.Z_?J]Ko(T22kU:Ddrm(p8&GjHk4<ZZe9J>"KSZESYa[;AfG6.]lS
%Ft:<.^0?.+Vu)f0p@e[Tp.>8r?/'fD[+EjX]\/l27S2XiM;"_8#B%^qRWb[rBm_""TJZhUqH4eB"uu_8GM.NFb-/X*/$P[gpTB8K
%h6?a8dX=F5[\!WgFYtgj[\mo/SGCh>=7,noJZF+&cMPR@[_`=Y.$cr7>g!/Pp9Bajg%u#K<r:_s%TUuMP.\]JRfPL]&2V"b@ZGsj
%=k&b4h?<-P:Ps&/a!=MD7NKW[;c^la`T?/'OR+`AEKOWf!54^9Wr[$(dLMWkJ;]=;BQ+;*MMk+00N.1F[mHs^#ZtrGYfB0&X`QfB
%Sm1u5.&K<!(i$FF^mqg^Ahg$Rj%5tHBGc[oP+oGG7?Gr/?FJ*7AK<'_34h$Z'-'RK!X>sP!W\kWalKiR="pK_&S2H'@`EO^gjEC3
%bajJRXkd0j8tCFt)kI.g@d2TY8_6$O9ifgGBb'8#i`p:rIT;Ps'))M65uktDmun7nE(+smjTB,`eR:f7$,cWP-j($"TIb@N"3e4V
%XZWd&LIa5j%IYk*HstI3GEALaD$6`=q?@d?Ar0$6;@!s,X%%P@Qt'G&4m@%;5m)atM\PPp]7UqaA8qeV1B:u!.>;Hm(/Q63M-NXn
%VAA4n/hYtQD'sQ;\EnBUTG(l]E*.gCgEH?(!=i)>JR=]O48Pml=20WcdeG^QM4V/?-]ZTt8`CI6LslA6iLJ+c"*^+X^!7Ot#=YLM
%r#7JFIV+2\3&@?*6c890_\Iir&b/7"(XT*>gGH=!.Y(VB0#8ZeM2>_m9e\9YdJS4T(I^>L`XS2bQihF6a7/;gc`A@*FUO"ZTFBg$
%U'8O%`SiWTU^dCTCg+3:eQ1;p3ch9"'Ml):-9,=Nk&@\a4omcV'Meef`AT0d^kjH)#jCC2<W`I'--mK*P$KJDH5U:."^htpRE"+$
%^sr#]^;!g6X(s%M6V21Kj>!,-cr-*`9T=R^f'Y,r`$(V<49IDA`tih&MYG:S[qqQ1H7FqNKgO3I8L9HUKFDmD;QPn/$-8MB@'n>D
%"V=EN'rr>\(p^@LEF5/*Qk2)HEEIp4FW8t3;?d%&Z;-jS.547M""I+^`tTCB$%JZH0IP0?c*,lP_[%`sod2:\)b!"MJJ0:r%TFKI
%ls;<h4<<Q1TZ<8<L_nI)'bG5,dXcoh=e?"V<DjFmP9ab">U5&3U<I].He6\e(1pf#54%&*0l<8AVsD1aI?kE2G!J97.D&X+H.Mfp
%\-m4c7]cs.\iD"cN[5f\8'@'_)1]$tK#7kMm2Aat8\i+cFLPTZPp^?4SJUuMGAY0oQZuW$qq-`Q7-Nd&D0"@L'-%\=9s5oaefG+^
%`"6V1#[J7mi.;E-?nr8h?=p*D*!#:aN`s^(-\.OQd=u6om,#N]ng/&:MTQsl*sOA^C$$,C#JakrN+)BN#JiO<D\anR;2Bf,J["?p
%i#mmsJ?<:8-r?;"YDmo3lm[MHc/Oun^c[dt[T!eY=L\T_B5/gJ"ZhTP;uQ(!eAogGcOZ]P,ZqI;TE.'=8/]ujFsTPT8h,[43mlDI
%*IGlr*5p/`K2)>W]C3Y8>+]OV0Inrq(E3[tVNF,VGVg&7^tQh`OW]aJ?p!+;V,();bji%C4t#)&bbh)MCg%ao[\[C7CoQ"QQDJ!n
%DK#I83Bk,K`t-TXN?/+l0NosUPpe+TjHp9'YgEIZ0uIV&&29\SGh#qH!9f(!6'R]<rDkBaW1a:KK3T[rdt5C4l^-01n:d4a//?S)
%i6bMT6f;4OC9$KUFb6;0C:k2[7oMk6<m;.71K6TA#8Rs87T0JE8JGkhVM^ee#P&/1JfFlZVM_'!R49mF!R">RWk`HGo!+ab+t_N#
%igAB?MaI(LLm,?U<A9eIQ<Kf6lHUtTTTt9Q^j'J['cSY94--KiDb2kh"u]tFJ473:N"m,nGg"<SkIHe0rccA>Y&1L<QmVYei(U-+
%S$=.nI]8"fe>[@8\oS!TEZ\e0XH5,A_o550@n!%iVQ\WSOa:Ck<qo*f5`TO=?scK7.&cD:)[5``hU5M7WS0nXE@EZ`PSLE,KspXk
%]JNYk<U7_.TaiiE(TYa-6*jT+Sf4m3T`q0p2\>$5Q9[jLB!!I$Emp_FoGT/IcmuA%aJ"JO2%5i#[.#$*k`qV"BVdP518p?,R0hE5
%D7Y&f9_;Qu*ncD%#It>6Qm!H8Q/ATQj=Hm!NX,Um6C&f:=NuoO*NlB:*$Yas&XOgFArp-8NMWS6Rj:!H!_"3.eBgS;,)<b@:-i2c
%Rt<,#=:c_KYdeKu-FJ_.e>ZSc(t:j.Xi!dsD$LOb!Hc@ioRJeQp+&b,';Gu.W'`@2B_E67(Q[itU>r;CV@)usn'_>Oqt+/'CadMX
%H;.-i7q$WR984ng5d?NgatDCOQ.c\4`-@!e.L/u_Z=c^Z=87)&5K?Uc'<Q41<i2N1cqtF"[F6B-#`p=i@.'c<f!9hLl0hZ\JN9\8
%!@9#2;lgIYJ@E&kWYI.3#05pQ;%^-Z1id721B@t1E"KUI(8LPf8/JF=KfQ+<k\%fNMHPhdG&;Z.AHrDD/!^[R(Crb5,(tn?^ecI7
%aU!i*o*#F6W&;f0"3LW=&7+0OaDj;Zh2ah(62P7tJr?.bCL>h5KROCc]MQ=-^q:1rA887-cIV@hC>GuB%Ur2P93aM]4!Zqi@!u?>
%E8kkNSqWQ^3lrf1.0-URjidFHCu;\pjeYqN[8%)5RV#r@8W?2;qL#[H1fHug7s(\`WPguQW?c;L8iFIGNb=cA7p&uYgU+DbhL<nS
%/_5)QIi/)0es>AuZZ6W$"+6EVP.mER,c+4f:#%YZKPc@d#2#+mH-9U%!ToM,+%i&2o-p.eT<N2(f`4qm>;i,EkJ6K6bXR'9CuiS3
%0Ue!\;7"Y+I*crgS*WUHb'.H=!eJVWQ-Dn:-eOrL(lZ&_+(I"iD*?]G2Sm'5kQ1Pi51?$uREKuPc`fE1UXYRp?*I@_hVMQ(\oW:j
%CY-W>^>9/9m0\YLO$mUHS]b/Bf"7UjfXn4P)aWrKcJj]IrSZ'SJ<>Sok;a*M20LG44"ppJ'Y'3(jd(@B(g,t]n"ntq*^CD-p5oG$
%",Yl0YW(n(Xk!,Mde%S@#&c27U'9/%\>77.P)*+;Af&?31q.B>@3LCH4"s'4E;E'Q@lI%?7l2E[P@,joq=H9Z7%2Cgi/#r<m"7tW
%rWkDm(Qb@.1k`#r"VAOU9QM*G+Yg&TbX:`U>n%oJGXVl!XHp&95;n8a'Lce#NAG>[*R&fa6@uR]+$=(&QP/U)"%<siK9E>"E\=fl
%q5PMC&42p[QcM%mF8oQBI's#)I=H(D"SDT'TIdiCIK!%Ep2OD>2;p_GbUV<2_oIp"m/'&S<X_rK0P;ed,i/.pCf^1<fqo>GQJDo3
%I@&^!JL/59L=HI^H&X'4Jk0/DYQYbQDs&MoFu%\n+VB')$]+t1+iQX?E8+$%h5;:oX!"nIPt)g7CJK2j!&o2(f1<?CUZTtKdfJr1
%0m\_gZmcYNluRNR1ut5V%CQ#a=F^M&1n0-UL"g@mpMkb_n%KTo0Q#Z=+;3l\q=I&-"J7:Xoj.(tf+_Od')4.<TJSSoGaNB-5c$1[
%R->3[fl>jZPRCF\:n19VjY2+DAijIZBIV/E+IsO3M!U_*SoZFl.N,ap11!J_.4LDP*KA,378+hh(JphN]B`TcU!39VC[$Bj)erbl
%=dY;-m!Of';=Z&t3hX-WWZ3\G;Nt5BXpDp3_?20_9N*i&g-SE3fadqn#<$0`M69N2UQQ3^Ou]ag6.rRic](O@4]nNrb/lMVf"&;>
%J!VI\JQ6U)P[GqSRMa:52-]N2+>#lK$i)3060MHV#^?[qA3n:X2TpA2.nRpJb',=A`pTKr-]'a#-a]a'PDTXTR0r]u@PB*SF09G<
%.$:9:K_%6O'I)(#iB?K'QFj27;O-Wr?lYA0q%eH!XcaYWTt7=4@/<"25,Oc>^NuI%Jlia6CCFu<R(n]'<N@b%"$=21"Et\.]rEuF
%f`n"C?5^$X(/.`ZBmKJV-($t?m)^bVUc7$B<.uJpF4eF\)l+0183IuC4p4lR#G"!1DM(qU&t*C[H4:p+T&kOC%<*[%D1(AP;.tT=
%hCl[8km>Y:PNK@]*FtaZR^Sn?e&I:8'3JIs.+H$OVbIuu^iqF>q(JmM3S82Uc3]TBV3K"ca;L)ThR8fn/a/:$s76?];m7_,$P.HA
%:apdtrQ53g^'qO/;E<!P-`&\%`A-L-FJ4E2G6N[m$XV1`fhdT5:=a_cqIKG%5ea#C[U]ho[6c7I'UOWEZ_trW8TGD/3;8r<E#PX*
%_c4WuDP^Lp<EW3N[IY=K5/CB31DD15;[SVs.Z+4iSbVb%;)./#i$pr3(`1)/6tM+["3rI6@#WJQ+Ju+;OTdTm'fn6br67MHm47\a
%>F3Ni<p/l@<.aWO?#J*#2t2`(kYTf_%_N#2M3Xi7VD#R7)SojWo]&-&,S*ME]((%N"u6Tkg`L=5fYjCL\@.6\#;CB9gGa>rjrQRf
%h_t5keh5gr^Os&-J^eK5h[^+"fG:O\H*5,9:<&KiWe;`j&sRb3iV`brU?afkA;tHiJmYX+-8'soO<J9]CQ7.rrSqF^+u5AiE4\>P
%%Un<IOV.L(HDA?j#0oe:Dq%aDYXL$J,fN3Kei/5""u(cAc74cab!'h_m&<+R83qgu;Jh$+=4WAr3To!@G^Le_B5kg0!V`d6ZbHsh
%=$hc\T"rlsoK4/YLg-U.Jt\+O-*4#=r)Qgm8#(HG!RO!P(NOt-3^L-9@+Wa_b)\\-8,4IBO0<KsmPeK;8r15mADe_'_l#@G/m5R)
%iAU2!h.21"0=jV[6s57ZCpY8"K^i5,%0B!n4p]0p=B_^@b\4R6\%iO_VDT#pJ:*;m)iXY]r6X8aCk?BUT^MJc`;-7/ol1=.$<oC#
%#RY/KnF,::H3]R.r\/SrBoP7`Y5_2=gnPSH]p'ZqOKVAPWrTS_;iaAmq$F#,P@P;c[K26%!>#a8mA0n,q:MKf3rqlT.KGhaEcXBq
%4_LU*?WL0"@/]g.%Sk;Jb#rHIoh;?Y\g9k%7[6U9Kq;fnaKQNqV]IL_N0W]@aNu&fgWY"#CMC$\`d@g>$-#Wp0Y!.&4_!E3o,t[P
%U$e(.0)BE<Pc>LQ"?Ca9<S$qDXRY\3P5DH0D`?FAn=cu*#mr-"0=!k_^a@J9@Wtim,n'dHQ"-H+;E!CaNq@WYcFVp$=&+T<,'HZP
%D@@E<mMY@C`Gca<Nm#54k@ZfNTI"D2IHA4HKc6_o&ch-SFNW-ZecXieN`hL^O]ZSK?rno6EFRa#1nt$tW>Sphd9J*e*f>%OWT:t.
%?[cDhOsSJ*rI*fr2^(_d(d&p7Z2Xi"RT!%KV=\-uFF:gP$I3Sq\p+i.$,A+>_\2(C*WZc\P$Mha!6bQo"c.dXS&@k_)Zc.`&>XW4
%>S!&`)I]*.A(BsQYp*j!,i#Tt$C4Ge6mGeGB>[d>,0;BJTitiYL.qMs(*##gf'0+RYjXW(/s-=),cJHXf'TpO-6"=pV%]c0KNU2C
%J3>Olk*727V[s*+-+?&>,L:cMV5HYjl7oH4"DpG7.QhAaKd\X:&'d8Ze%@[nRGu_]H:fZ0=0SK?%9d?]J2+C&^pWc2;NMD!D+EJ?
%oH]FuaajH-=i+S9ABs<C]%*_>JYoW45&1SAdC@r9WMGt">'cl.!2cQ-#^3N!j:ktp\k,i1$5Gmm-4)%V>#/i)!KEmG#nm_<(>:f>
%8X5)8\XAD&.3K`<IXm58nKK+P$Z0H9%)/S%V!Ujg&_^+srpo^mdN))U%q&^"!&BiY%I4LT$]3p,]'P^Mj:m3i[hlp#ecg[@*Qh6j
%j85Fqmm5/M8cT3qEo=lUE&,=g1_>K("#,R&OWbOZSi`=Ge.F<58`R8N>aT.pC8:G-BP?USNH3r4VRbC>.ut:Z$jha?dk_6cL6]l:
%",V)r!AH?cmas2=70/%(GRB$05ldbf*FpP(\CNW<Kki.-UDi,B$VjqrA:.^DCVZtrj>WL_k1fXk*[_h2.V$uY'e_O90.!TuJ0G^/
%--p[HAkY2!-:)'@p_LA/Ak=G,LG_XJJ8-l,GF[umNlQ[*!<gV\/>*NVi/"(IQAoV0C3B5\M@9pY.du&*,ped#d5t37Clf?o=:7J?
%%PT=X0f3[?[LQHB>_W\pdELrgNI2kP5V<?,'baj!(d_<7"0k]3_KE/J]Za!_\]j&sA\e[hA96[X;pep0Gb;#:+XW<'7CQ^jWE8:s
%(%68h:$rb]Ls@BI71aUli09c86;!^"dW3Z'h/<Rh[FgK1g4=<3V_G',J;J%`-&RO(TO^c0rZW@R$L(O)2G-t&)mo0&BZ7<:K\`?Q
%/fj!u<M^%tBM15l6@.2`'WE[@Pa@tsI)_VG/%"eNVeN[6i!H"BUCKZmJ_[fenZ+>j7!b-0C62r\ap:V("Cns!e2#9HOVTa\;cLdG
%Pu#*;[r:dLSce^L+9VobjM\5O<B9"JN$;MXVkaN!B)2PZ?7XmlAE:CkNQu8DE\MC..?O$M#m)l8#jd8RQ3hJmW`5jY35["&be\)0
%BpK`$`^sQ1-"3NkdLdu$cF^mfc)ZR:om,_RZX_"J_/s5/@)6g_S-[6bR9bZ9=jUt.qG+O=+7M]9GlgB'B:uP6/CGm$2G4?g@9-]t
%<@3r,%cF4H[0e7hpph^@0f!jmC;6!Y*'D_I$;(('=^q/($Td:g)`Yl<['gd?'EXN&CZn&q'NV,_0X`-';QR#lTAai'(^7h#O:q_k
%S%[fu+oN5gO)">TPi&`I$l%\L)'[XVPfu))Qbr0A+sJ9>Od!PsB9Xsp0?MN[5_rGmks,m:<3i(,J]XTRVR8B;/*AsG`7+c@0G(:U
%keOKoF]Aj<-.W1D$'n^`5i`H>0F+d,61u?6CpHsgOMa"*+d-Y_6W=qh4>Yu,#L)B6<UaHa2+rrW)`]UQ&qV<PJ@3e#"&=B)M+_L?
%K4)$A/1ihFljY4>!ZaUj!$]]qNe[jfUYs4E8UcLbR!DS7F;3"h^qe"\X<n"%bjDa'"1'2e@m5)C_2r>+A9_ROOSi=%EfZj%RPJ8D
%"Ca&<U=5:$!;'_1W'*_[8?<NWHBeu!QXj#m^BV6TN"moo"=,u/3X*Qm0_4#KIa/-,U')P<26'YAV^rr<V[n+tLjDf1[KD_am[31-
%KPhqnhQpb1/@^9dCG3)<`$YQ+fdQsC\8%u!L31dFK4AUcAL4HA$C!)unS(T_L.Dp'19ZQ]'G=!=Z5oO$&ETF6B,n?j?Y!T,pM1d7
%R>lAoQ\rUck0K.u8KX8J#>`=fiVcS+6B6e55%Y.4OV.p6:_!W[:eb>SfLo*tAC)P!Z546W6-mJ[f)%$:3!:X&j':1:(P2Vqa@XZS
%q]sp@c?c@>.t[m-B,*BKD4m8P8s+WF4MW)GaD?I`$^nINmTg$/g%$2OZ1K!WRK*HMb.tPY3>LS]10-#JHi_m5.2o]>`Moq>PCWR_
%>fI+#TQ#dJ7!\qgq!9h+Tqc!p^a'6;f+aYB/f)EH,+Uoum92O^9)sM8AWg<DW.-n8nVBRPWuXUQaCr\#_CotN8A53^DaK<a[W+AY
%(o\NX2=!d9<mo\X:91[Q2kB@1:4t,kq8`:2.Wt"<Ko.)uG-S"g3n;/8JaM\^Oi<*A?l$Qp'(dn;J5+WXT2_`m5=+ie[QK'M,]fBU
%=>[jc&kL*jB4Tb!50sh:^j(>GWh&Ye@i%HiZJ],0V%19E1%QGTm=>Irag>WnfYWcaVO@M6%T1.sDk/0fiLW-(,2#LaARJ7rD3aFn
%d5O-EMo2^?5s&c1JloTN?kLiGZr<s:#!j-5S2uj)9,p3[H?@he&]iWJ:k;ZR6=<M^H!XSkVmN7V0p3IlL_o4qaUf>\7J<#%O`P0C
%7+W^W$^PtZj$N$#5^\LpCU=2f@m[@+0kgm4M\u]!,JBhA4[qVe`H6(pZ'>?U`i5XI4Foi3@Z6aSb)2;9jf<)E(hR@FOK6@3,%TA"
%MP<MI#>DIA2=E9MklT:ueI\1g=H1EkMHEce$iqKLUsVbsj;E=lBo$n(49>r*-0mSt/4*>sJgsC+;WrX"&4k<SR7)YYmttBg%f@sD
%[987dTAbH)0hI#WohKOH@3-h_6?K:Wk4&pko0--d(=oKdhfpJ+[`669coY[qBHNJBEf<E'X'k^5?3VALqh'"K<7g[fWR&EEJQOf5
%!74:M$iK'Kq^f6lO;Q[PkWq+k(#Ung8aGqu+:H;]Vus/t"7n"!dH_.aEt[KU+JCHkMpG"WTLn"D3L=%7U_,TmJBHA\F%Q\^cl\VU
%_TT#SMlqT]k;B+cYlJYV]gV5-@Eg:nOq<aPCD8$H_EM?3AkDopS&7lN,JtuQ9f=*g"0Mo"@AJP"LZP#'(tKhNYU%:!>&*<]AdPYK
%kJ_3b,u>5t'A.lSW$SK"e(dr08lh(lLbT!^.0MXr/]lSGpdrhf'3YX'A(M\H&AMXmj-N37:0-a[n0KE,Q'e4mdh;b`*lfc'EM#_C
%L;L!YgF"uFjr*-2n5^YM'BrM#N"\6crZ\P1J<>HX2p[i<bcb'JMBPg'/Bi)crOO+2UU1#(R?5n5Ptr@GOs[7NbbF:FP$QoU"ldoV
%):iVfP?f,3#N?)0A/LO@]Ffau*O$1bei&G9!'J4l26FD[#BIQ8S2EOk!ETrH'O`MrBboECU1$E68jF1]X0GDA(LgdoQMCkN3^R5U
%g/-CMF`k/4bHm1^\&CojIOWnuU&mgoOoqdqHT8BDKs0T1?9>prg]7U80S[kMqe\u\e`?a[p>0o5Y3WS9lkdH!gkZGaK,k$'k<TUX
%+A:/WaY&DY;HDOh3uir@M(G\3Ho4`pSu."GSjP0^-\mt6T6kGV+:4,PNNa^k=o7@7o8pM'V$Q%>%RRfZ6<CC[psfH7-]Zq(^&WCB
%`sW#62_JkN50sQM-jni28i+.r?`U+O:Kt'TL?tRkODQDoPEHU9QRjdlR3!(1FJK8`JaM"@:l7CoU6%Em&/YD\#+,J(^@J*g51Y.t
%"^L5-aj[l6[Y>\K,E[/$%7Hp)ak2k0(1\"9EtdNG5cMM>ZF(A8\`JY!IUiij5,Vgd]\f`U1"dk%O<#+r#:sPAh*2^\VT[qL&?@il
%X5PY0`1L#UgG?oW#,J\R'Q"9on/a6KjkZD*(`H)Lm(sPB&O%NpWJO&%Xo]%+'Hrn``L\9g&,(?mWbGU-;bkNP$\K<C9oVmq;Pq*]
%W.;@4o.Y;a*?%sc8dZ/daQh(M6B@2dQ5#s[%tpb'j(2,1&;$$jO[3/oV%Nd#i/obP!H$Z(ImmRd5m[;JfYt^KZGXb]P^kK4MB'OJ
%k\r%*:2bsJIA#I%@@:Pk:5-PmMmf&R@o8(QG;RTAqMnFY00Pk*kT$bndH>BSE9eV[3InZN=\eE./J0/</T_)[R8#-$'6Yg23Cg*b
%gFY!*1-RXdfhirr+N.K<R3G'c[1bJ1e#_-$b/Hcg+@Uc^K*_"-%<AaWHOEML*Z1RtD#S:cdcWNjc<`gm"d?Vt4][sZ24-cS[E+Z9
%**Ehp\.RC[_0q3d+9d)"\p598'6'*T"C9dK6C4beQ0X--Rq*`)JUQLj>?=m4[e,Ms'oSG_`*fA2AqsTDfHc(e'GdAm0Ea0W(4$]?
%8=`"a2sA6+6eOMaLPfK]+OJsM+;71aI`W<j&T1S&$kF<PIMZE3.DlU-QO@b@'PEsWY[3](RKlcE""k0TbH_-q]Fi*qYcOM+J6!3a
%9lbnb>%!E'C*"^hjV"E@]c?E5(ri!a20pn!$+bao@q6^ofOu_%[uD3j/3/SnQ9W;I9i2I7Cku\E-`nG/;r$\[Yf$k7J<V`&.]SP1
%-iU1pS2M?7V70t>3LHS]:!SZnXJT<Ch=tMZ#=JWaon9X^/lt8B#W#dA,dturBZ^lHb;)B#"QN37.patn&[sVAIj&-]Nbhap'J`34
%CXU*K7:d.Fg0j2??/C7g/U\m>#Jgeg+%(TG.U>!c,AG\UGDi[`e6pY#R"LPdQJlY@H@i&TgD)%&Xn!t""HH>p0ML)t8KnN[K50m[
%iuk50WG&roC`'i34AOElbC80+.,C\<b0YSM`D46\@1DA@X29g]F^jBd!o0rEECdr&Q&6kplt/@UjFT^1)SVG'!P`\Dg^WFN`"XkW
%%b,P##mAS-DD8'-LaYIffh!Os5rFWF2CB/]Uqu#K3iAtX:KQ7b`MB'1>u$o$J4k0>nTm"WP?9F3:4/2E.`Mk>feH#>lcGHV4>E%/
%89Ks1Y*$s+bd1On6%7T!OLO68;T='LVt8CqZ"8VPj;u^.qB4q5arQ*Ee9>DD/;=Q^*P4F^O&\<B^]D#-6S72"EOO.U30T`b!-:7s
%oL'R.P<t7tRB[MN;!2qu_!>`<:e7VBA<G7,AWKgB/>#c\REh;;-*^M^Ft&06*CH>K>U9IT7GFrRVWmJ*#@lD\2jp8U_*Y!>,N6Z*
%'K4..OjuAK!)aKs2-dG#K56.HOq*ujgm=QuFPqDn[bBC987e9ldTQN(Z83u=.1`GD7_:)&V'd&I9<a?;3)'rlRrT,HLs-BXL?/O_
%$8pE1JZ/dZR\.fMpMgqc!/e:flm2_N!b!rlCV`Nlm&$hMAJ-J-R"W!uJr!,9q"ZZb+B6hZ?+S>k67ptF3Yo&3V`X<f*L8)pDS*c0
%UBK%[dIH_(GhIb.1>O;uJn'B3/l(j01(/5#0$_bH.Yf,\W/6\"=l=]V()T;_l.Q=2EodC8N,JVAQG&T=V?-Qq4Q+0]YL9PdE2]h^
%=h2o,gT#eWN:ie-l`(ilc1QrQ+,KfpiNZ%G<XfuKnRfs&^D4At:ZRHsLUd2FN0bg-fWd\6`_2&[aAt2E;!3)r@o18KlC3Uo<UuCI
%S]Bn1iW.^0jZEi]D[FFuP;F:\0mBH5oZW5tKT%h9r&6El8"9V.g_V[*)CSF86#?7NWeQ+;O?BbiOGtc!PpFsi%GQM1X"XR=aEV//
%lD:Kf!VO0g*C)=-@?G:qJ-\ZS^eRJ@^B4BV[_G/FL_f/hpT]UFo`:/`eJWd7Q(@]lbMjeeb\rBeXe'pOJ?^SXqQO)N9VU\m/Co+_
%dtm7:K^@&(hH5n)N='uqR=C]UT+qrsXh"^=)Q)pH@;TE)[)Y@U5'd;?'$Mg_>2Nr&?9tYO3$(U"$]0Q:djR;rJWY_]!:$)e)pTN0
%?EcCJnXPf4Uj5BC"+*]f2.f(2_:!]Y%6r26<3oi*WL;dV3TRQCUKb*N:9l0;70Bn]\,hJ[A3ZDg4m5gVL8%3YO8d]nS@g\m>6W7F
%ZX!,;I9l412E><h';o7MbKcg7e]UlniA8-KZpcsUK^&B@PUh3deifI+C.I$u*'jV[;.Y=R2VaaoW[p\65.O>NA'XYBDPC!-/<=_<
%LjB6-$EFoD=@uR3Y,uOc*_)b1KPgI3YauAEH\c6p`umXHLq=(8X_N]d)ClCJjYQ.$<CCasGW"k0%jWi<6pRFZZj^o2"+7p^oUq]j
%c/Hh51fOPeH(4q)?mIuE\;k5ET_dB8/Z"en""Zb:c87oTh9e?DX\>JNOiLOe#>kF%TL3m_VO>gnToZYi?ll5,kqYgG+12Bd:+(Y!
%_J2kUbAn,?e07lUOu!q'QZSNsf8a.RCG]iW3$;FYdu_n\$ku7;_p+V&^QB*H7(KRIPZ>K]"N56#:<+ObG==g+oM\o:'?:[=PTD)$
%*+eR1+Ga$QL[JIS2<KPLM6`RRQbtXBP,UFK$\@N@)j<PkWgIp.&GCF,HsmrGJF*P1)A4Bu'S^GnkEpq3W88-R9[P-rKQ_lB0b6)r
%oQ8IQmKKLbi!SRFf>X]qN/F;#/-sP]nDJ#!j=UUK?#](<YI7(B]U;%q(>(UlqhOhgG,6%KNV<n;V5i7m\+N/u<s#gbBa]!i(bYJ;
%dEA^`R(TcDJVlE&]JsjJC5Q$4$/cf;#+-Ps=dN0I_p.=R@NnDR;r(E2lKbPC9*UW5XZ5PBe:8HGA2cP`q"BK<A?/*#17L'1R2YNH
%<BRX8`+Q>Wm4ptXjUglHQAuLA4s"dF)<-3"J7MGBXs=/J<',pBY@\TdAY_T,UEPJ9Hct()P-$dN1@-nKO\9oiH2LpRNpm)(JYCQj
%927XP,336+8esW*oSae&[V\V:eIW3pqa985LV2BJ0G=C)L)eh*@_ckRSY3NrMBH4nW87d9!5eeP.:/K^HQFWGe;MUJi#rf)PB8$u
%%V&6k2^3[m35H'Dd-Ua3BCH?Vp-Qhqe._<?TtT]A&bMNT&O4[V`hHd^&#Zq6#4RC8g1_$$_Sq#*jEO(alIe\_Z$?JYf3ZsMdF=c'
%&"m`^Ta%2HA'l!;>0.stRmt=0#k-M_i'$Z.gZ<qUIu`aE3o%tsg,A<B\nQci>k<.5Cr0Y(WFA;`3jsOs@M)uUCd%jOfIC^Y"%5Jb
%(_=46g&Sm'hTUgN(=KIQmU5esE@N!%S';%=1NfIuJIKE/<Zl'8:\uoBj=]u$p(7C)/%jZiYe.\5<@IQAZ?8WQ-mYrL'l"!aHiMWG
%eEl!\T@.tm-B&mgm2**/)Wa8>Ve(a!gGWKI:%ONFpGbuB'BDG4a*h>U-ltC#i?HAj5sPc'cL2CH#9^unW98+9&I,9>+@qD%EW0g`
%$l$=tG>K,1P/C`!@'ON_F`b-%dg8<t49G&_O"OG&bn=)-o(nXRs"r(!#ZqH/E4]YAPJr@)q_gV"+4`OI2b_IobQM7mb1kD^_\[9Z
%dN@Zq]2UNIGEjcLfLfXp@b6;@$S%M(Oh4U$X9IBO<E:[#<hmVloMP[8Qcc>)p5iTS_dUXFS6qY<Bp]jGI5"HO^1lOKf0L)5_a1u2
%j,*qM(OImaEM20("+_-eY+k;c*?\l.N7^IaL"9'>c)/"bkbs-XQtci<9b!t03]eI'i3ABuU]KE+@t?RHG/j,A1u4UBr.'r?];t4$
%hn,#]S]%`AGBle%6Yqd^_'69e1+b0]3E1ZKn?)3niXF-Ja$$H,?idSA;MB^DA"_"1,H/YN2]Hbr13N`2.uXc:rS\Hu@LB+C&8*+@
%0YZ@NZO^)%+5pI+LC,F6P55V9%7@^*XbLnGUfQmB]2Pg5(8O;b*D'32g['[lO[1Ef[s)n:<!+:)6Z;.&NZ";/H!joEMn7f7/&0^o
%U`8`]YT"nAFrNp\?lS;6X/A/.SZ`umCc`$OM:#Su4<-Bf_c<^;KPV\fYCmt7$Y!QV@giX=1M3OP2>Dg,;t.7UnMFRP=T'c2ec_Kp
%)Nr1p26nWjDg4\[p/QWe!SY-'aZ"$[ZtQ@0QQUH"!3_J'`%hprb/nN"E".uM#!7HF;fd;j$'NQ>Z0m6Y#9"O!;`08B*MdmE%NtKJ
%/N4ecI-gsKEVQnf6d>uN7m%[B#cqm-HN7KY68_9X\e^LsTJ5o+@b4L7`ZOc\TSfk[;&9_dOO@jCigpbr8)WD%ZAb!f4.uGie+f#f
%n`1&:SlTBenbe%hedI-<ADq`_.NoG4RXpH\P7ts)PKjN28$e<j6okBbDe=>'9`e:NP:Jm!_SQL:N3jMo)0n()Lcf]Em1';n@pZJj
%?%eY9M^H&f[$M,QJk=eAN)RccB7(]gmtro3nq2[CkmNamTnDZ>YA7e"&m6grnIn.r[tkV2jMYDBG%u<F;\P/RBr_BfNG=Tg53[uu
%NT_^-p[QhMoZ!!P#2qg[Ame)b:0:B<?@jn##hlndNetGfK:[gflNm,*2m.,8":N'9P6l8%d2VEhTcCs5kn8ObN#;:&edXi7Nq@+A
%a5TX'Ob)<()ru$<X_F!`j@jZMMZ^@CjdM"Xar,,Q5k/ZZR/Z@FY`e5p635]g_C!?9N@t93(lc&0Y@=/hTt.M3*8=B],AMR$YKi'_
%ELj!"6RN-P"p2ma-)h"q8HtAHR#"B.F:@7s")kktNM5-/^t<B.+;+)L0Ke\)b]]`%9t#3cl0k/FVDTg5+>X:F^lj]GA]u%snB14a
%>24Wcp@pZ=5QqI>&Y[q3&J:#[diPOK5u(@slHJJH!!V$n>hO/t;-EEHEnkI8[/i8*B\Vl];#gc&PQ5ai!V)m<hbljk*+b7@(pnd<
%%t`tsdl5bs7LQ^aYT7V:&Be-KNOmI]Q>`&\eKWS&)$saLN+t`EeQUn-/k>bbBC'BN<BqI=V(tW.$FLIP&Gh0^"goIMn`I?U'Jgfb
%#=>&=*Pqt#0u!-B!>]M`+/OG0!<lac#:.hl=U3s10iWjNX;OK5CCgigfntIO<Kgob8;<t$-V+>k^%%C2@7%UQK*K^+`8,U'7h(nW
%oG/O[@,:n&c8aFT/7ORLmc"cO$oem4SG"E`Lg37L2[PbtbR9W$ND0n5assKPKZXSZ%FBB.Crb+#<YO9[RZSG2jOKuq)<>4Z-O4P9
%#gg/ZWH0ibYY^Q&MI1mQ^_!md^um_I"sm,UMDu.tX_TebpT<2uSmSmB"@>)c#r:1"d'Dg+m*fg'br"pu+YZu3"cc:c\7J/?6I=Kr
%k$&HJ[f`Ir18j<`@U]8.i4P:DZ!'AjnRpUZfq)Pe7s0FCRdu]A,![d&;pu//Y3[+X-sc&qAl#M^/>Uu=;N9IB&SP/1e(YeVSmDue
%\M>a79X5Su]@\l=W#5t(A_0O(>W,<)BFaS=$<8^OcK4Il@0>DP5s:+EYV1DuELTc9N076i(54E"Dk"SW"TdBapiFk(<WR>o0IUV<
%!`!D-93Y4uL3SA__dD4OC2;RZ0Y'\H/)-u^Jt1[<FCq@R(.b01L5hIdif4O")4+QUL9-m[6r.5$!5p&pBgr=Q1Cqch%cVhrGl1Si
%n0YL6M6L[M?ZKp-r#B%--=/JV!2`Urd6nhrCsVE?KYdR&9M#Tq5aF:LqP:t<pa"La+0In1^hkmm(%)j5bQCC_-00#cX$HqjQ0j2H
%%RDb0HchkQRrOh![RhlQRK9lKCI<`(bP2;KJ(+J1`1`D\Ic]j*,O7qI.e\qf/NA<?LFgIa@C<3;->,5%C))o@9,.QT7Fp6[,(^t4
%qM9"Aee7Y]5qFi8N3a8-!O4'8hm!;2frT[\WXtlDQ&l`hKC,mS_#-\ECE4noQ+Z[p"U1lXe\g7&O;2(o;lfDs3iGb./q7>G8'[sE
%hE'1+@7"!$Kg8cVH/ha)G>?Htg+OmmPZX_*:f\5];7<9SGs$/R5sL76k>2=9^1:t7[%%41C)]q'/Eq8:<U;K('M^:Y7GJ;q'[41u
%d=!S1kaXg"pgr0DAuJn:=NE&]=#:4%/rn*HnK<D7i2PpG0:j'1gJ8MoS'MUsDM/YIAED@=-\mgR6dR^G*+Kl'_mC77+%1GUe3$0/
%VQO/=Ri7r7a^P?$V.'UppEFc'hglSt\2F+^;FQB*2@u`#jY!Ds%3A.emQVS;6P;S8UVkX1dq=Pk+ip*,%Qb%tL96;A5RQACN&qZG
%VRRus4WG%TF0P!R^1>.4Ja\3uR;gC\2H5R4]i8tWTW/3#!sJuk]P)jR8]An3bdhAk.E6);$X8*u.28Z3QG)aZ>(7h+RqHg]HE:4"
%,kc&3F>>?pF$)Qe0gZB0;%I"Cko9n5UefWj+.+H8R9\FOF/`V5(eKTPE1)"p35BHXH2Xe0*L%!KI+0b).gXL#KNM2GomEPB7`]Pq
%H,DrW%l3$[CTID,nV"<;;ZON5&j(bI<TTsuhL`tB!GTVlVr?i7DIl><^ft-*->sGnWk8qh2Wno\NiZi?X40lP_.ohbmV+p#*D=80
%#8sI^EgU=U_XLG8",Zh#P`qY%k2:AjNen"@-=Vs[+L/63;@ldF9??,*2bcQl]%tFP-bd9I<#5T2:BH-?2(G3"2_CI0PYC-.:-n5]
%r_6=S9T"%V+=&/cQia*?=A12R^%^grO-2;".'dN.h.6tt4dZ>9AuuVX(MjR@>)G7n0Ju'95s`AgXlU-4ZhLk;X%'L)&WZ+c<:O9S
%%b)W(X;^=FW<bcbj*@qi\N)_K3Rf9I7oU<HrEqHZ8M'Rc&7D\6!uXGf)K\2eTWR)0d:3ED*`La]_lArsRP"'5YYfp@D":8:Pb:$^
%,$<g'D#aa7WSsG%RqRm],S)HS<XIVe_&1P9Hsn'K+tpJZSd72Y1V-R')>qF)_o=5MW!9R0ZGs7Z>Eh(qs0`,%FpZ^3h-rhGp<)kG
%*$`_>Q/2fgMo01aG[RQF"Hjp)S8Rs?4d^]lgSKLBS+L@N2"fP<FAU_.Ad;6$bo.'b?R,M"6XH';`9Ut=I>uHb1cgf;S3N$li"-RD
%0d.b8W]J(j^QGN;cC79pbbepPW8/"@huTO&KV<U7p9XO'/I(qYMjYSC[YMhl`%6aeCA:*Z;"7#disj<0oW?T7Yn)TAZZNdqD$B01
%FufkL`F1KC*$<].n;J`$Z";OCDf3R!rE#C)3?`I7`Q'J`C3jm(rXY&O?&Eu82YPbJD4A=k:/`b6S)PUQhlLl/XKf#,a+qAhM^>c=
%#b0Be'MFH\+&1N2i`0+T_k$I[g@Ll%7QuoY4FHJ5j,WBpdf.*#ioT\X1puWOih1C9'`;>4O-VESI<<A=50=I.UIY^)l+d8.r\ao`
%\bP_Fj^L5f%Z4Ojnj8-Y"PP_U:QZ1p5rb(=j%#*()^sbH*4c$#5-qeRr3W3oU/$I)M5K5MS0D&JHoVO/A70rpl-;WG=l+^P&g+<q
%lXl7=k[e4)R+apY[r7.VEBOV;Ah@?XAhgu(]N.@03/,(J-.0k-85>HX"blGr%g^dZC)5'B=M.PJa[(07*L7=<S>jRjEV@@b`%6jI
%6^ZHa;"Wo=>*oqQqP$YPX4$TiXMd"@.kso#1@B'4AhlY:.j:UT`H\>F&7a/L'XNANFGNdB;Oe>Q3FU4gl&96r-V#>qSo&u+lC\t,
%V`(_M]W)dS")iL!&i8W&`6"G8_r@Q;US9#$aTH#+\*I):@Bo2:leQ:g_mAPDZUG(;7kkqc`P5Z9CI_?o,C3>_ktuY=[L!j?5tKIX
%AD70H!V`mUM*iU^fqQ8gg(eFVkfRgT_S$B[iq3LA44i]Ijtni7/S5XV)CMdh:!hdXZFu0!Q("DIXXW.n1aAqLM8huj<m5uh9Rd:/
%nl.0o[+-gXD>Us5ma24bcF^]FrS2,hj1\4Rq"eg=HaV\CN8;0WG:3,@G'@l:H^K$OCqG$8]6h$C]o9cX[_%lOn<32,o6tQ9<AQc#
%GBo%4l8*VXDB!YeGP?"0poG_&Q]'Hf#jbl.Mj\a4'f*t@A[Zcn],qTe5=IrdOHSaVGbnkS+V%0.MZn1Vl0b.oS%^^g(<0suq^`6-
%G'?1>maZLT\b%^$Bt`b@GFuiJ[88bjME0/A4cS8\g$YHPmd=q9DtEDRD0L34]3!bCj4N1)FjSDjG'=V'lK+5smYAc(hXm!jh1rt6
%Z=%M/`HM!n@S2MZ[n7-gD9'H^e+UajG7V,2\TrBX0bNe_GE92Ef<Mq8gYL&c]4]mSo@Vm"mI&(S#R^>9/)f=h!V(JgTUflPh7`4D
%Z^>2aFa#KKGL*_0kHVWHgYL>k]1:W3j4N2*[#s,2^?J2Eh7r&5V<gA(Rlgnh_+WW@*d6F_28kNM+/`@UZ@a-]XtQANc23pQjU;g2
%ihTXgG"9GR$HQ27T&%>'UlL\F[[->1JLrc_VO=uGAT6ALPpWa[i`Fhm8n<'<q:OpEa_=![hmc<<;nC?/42;7m-j3RO<eS=4?mT5;
%f6sZY]G(NK+=+&`\Ms^_`+]ePF,<TMac-R'VqC2rTd2tX.,^rHiYIMA\?rQDe6WZUR[6=[`c4s?1=d($(_bbh(g6+&CljL?N*1mg
%N`$FNE2G"SoNK`eEtk\+DZ(RnM8:rWB.HMLcJRp,E@e=;?K78%mpHNR\nLC'jQ"FrI11nn%oUP.!%==I3oq"dmVYKmQR4"=*l&o<
%SFh@I,c!$\+P#Q!!NerSG""WM!:XjEi89S&LnbcmCPZS.Mc1Z*9JMHoLW(hR@\u<Ea4<tYE)..Ag"]jY%c#[#`"(G\-?PCp7"2M.
%Y^m+2`/O".1%L-BA;FZfiau6.6/G55lUjtWlsWe#e67F6FP?kf!>K8mPDBgq5Tm/HR99HaLOuBh,-`:%K*JKa$LgW<MU!r(g5k#%
%Oi'"YN3!.J_q%BrO@Wk[Z&tGV+jQ=aO;QFXjhSBM()s>u(4s*'(We?bKL`$B\S)5E-j^jMSDA-0e*N/AJ=JdMU-o8i+H`Xf;*ha*
%M@_e+:r0Wq-B'e-<TXTRApZI,9P+5EUc>e.d$ge.dkPn@5nTgO=(\L($Yn'u8(Ne@9=dkI#;?A^T%P,e(bH8tS671$eI"!3r4[dB
%RVLBdH1Dh5#oGXJZnI^CKU^-30J"c@\U*'^!3%f/cB/-XM<?Kk/-%%5M]\$k9_-:\!'Cf7_*S[,^!q#'UWe6',T'KAa!qnR#2WUB
%EL*baElRMT/%NKIIc8'J&I2n-<J[@TO^+EicMFN&\hPp,+;uS08E[9o+U=*kOKX.1:irBWK3YUe+tFL1M`pm=/,]qlLaSdd`(:hi
%Rh?HU=bUjkVHj#"eV@U^.j8N%=+j8pV1ouMS(<dqKGH;H)VbAi?'W\mg\=t*U^/X5[q/&k#s%k.oS0)mDS3Zh&=K]0ZOVmp8Xaqm
%ZBOfV`=a0+#%_4diO#WomUortDIWu%+W8>&*^)j8jJouHfHs?5l]\Jc5*e(B/*Fuc"U+G965P#3^3-MlR:]:_g^YcMWts38bQFua
%528$#U9//u9aDsSMj6PZKKdCi$PHmF^T[C.4gFPTdRD$H*hbti*D)Q3/h=2'S:.i>_i0t7'2k<+&DrZ%kchHeP3E'#414C[?MaIu
%&l;/70,cLU4oZ.G?q>XfAU?]_8[lNB21A?ik,-F4+\b[5"`+L8`g`kU8M(b%VD+f4a5Ar6U/$D8<ZN<;>Ue54_csMn/2J'5<"oYm
%!1)aAaf&+UbY0eISl`4.(iA=PA$Ht%=!`<[V+T@\65e)AQe%E'[("0s8N%"\OYUeq]+OVBOt^A./D_<ahb%oO[itK5eNFB[D&]G+
%pOmq'3hSac'W[:+]fRU:3SLiJJC:2627e/98se`_(5FYag8RbW<Tjc^p+Z!r+a7541PM/E(f9tc73gKbr`m>5f-M`Y`4g>trhEms
%9c,ZL&\X*5O)/Z$%O\kH9u.acm+ip;c0;!O0uMjJX(/3T+uHmQ\HXUlSl$FNV3,VA4[WEGatUE(29?L;"j?KtA!Y`\*eq33Rm%[[
%,=l"p4:"9-;&B3p'<;bXk]t.9P0cr2-2cL6#HIsegdr2;=5`@2SFF_5`o[nlpLb*o(2k.BQ6euSo0M.scp2&EJ07X"f2:d:Ti`[5
%3!.PEESk!b8JAT'iWGCrr1T76S@S52mO65'gW[f0T?7Z$heU#XSFq\&,TJ%3$/rF(&N<P3MB)dU-]%Lr*8=eYqgIJ%!4Lme:X3Je
%<_blM<!..APH`1E,KnbdWX<^ea?gXp<F?ZMPXR9AdK!8_(/mJ`oP"r5'iX?n&[dfCKKNVLA<mhM;[QO[#=[E1l7dD+VGqhgb:HT<
%*:;9,=^hhlrq.'#K_mnoimcKW::h`j)-WQ!a/l^P&h-gG>]5<n_eA-1#*orQ)R?M'$i5aLX(Ykmb,jM8p#8pTEj=t3[Q*X#cB84s
%[9ti9ku0%R,ns'p@NHfbPYkQ,F8UKM=Ho)t)lpuS2d,>jV_@Jll%iXgT7IjM8=7kj'Y373Sj"K;Xn!qLB^f=A:(<<=RbTHHd+A>V
%LC7aV,YoTeE$u"g;bJl;&.:uZD,@8`M\R>V^='#mp"DQQUPADFk@gIk9-?n8`;&'(i)\\kiFoSmh3FM8EO:_I"Bd9f!_1-uGo/uF
%Q6MBiGb<>sBNiep20JEPY[k-!;^]L4F6QZ_B^`aEcp`'/?43uY&oPHlgZo-TkaKS,LfNYRg^*ES962;'Dssf=%*bT`2YF"bHmDD<
%7sP&d!f8pA.3N6I!aC<><2/E[3F*?<c<GbU<#dDo99/m^;\nK_Pa0JO#f+d,os$#u&u.ZA?MW75#6n#HS"TiZ7DeC6!bC,-R@ul-
%MIZJU54:?uFnI&!(0@>e<?[P5=JK[48hmi2dNq`VMQ9ZWM,9qXpmb"niO5-l3"e)BV6NDE/G\,T#$kbZkpY\qNd_+M9Joio5$0pd
%KC#$dI^F!7Z,CR=d&FF[Lfsac`Jui0:/9JK2g)$/eQ*oUJ:4GG08F:!8ooCXnR:6Xrt(<!79HcMii\Zi$MJsmFMm(ue6%\tQP+G<
%XCg_P/H)K)7Es9IZ/u.HS7FduKKTsG+G2)!5s.L3>/dHJ*;eLE@R'4C<LL&TQiX@"!'0E7Gcu3$WmcC$.R@`8Z^6-+^j<qV2K9fp
%$&*9M`#2L\/8Rs)<,8/H:*6G:Nq?bb"^TT@+rb\ZJ3[hu?j,F%gOksN.M=lVVaGV]YkJ3"#FN^`;B/>m`+hKDa;5Rm';JkJdD&SQ
%_?:sse?BEY@NVR:8?3Y4Vk-1@2_Ncl;^DTBN,b*b&%&V$DBkP^jD9T`ZbkpMC)PNYK2Y-#QsG[OBKI7h;g@o6C_3?EQ#*Ep$>`BK
%Ad+cLh4E'FN4I\h*UU&UL+G)ZKY\:gGeR.eCQe2s#_sr=F#@P2Arg='3=ZgW/<GKJ1:&fS0+1&H8L:F=TJeOV1uq5?Z.`cG)aR9P
%-:+\9=5DeoE*:+!VRc\.1\5cI\gQMZA"i#",I,9M6UK#)eh#<0gJ6O!ObTe.IQr`LhR_rr;u-O",$Xc]ZWR&2H2s7>^Ze:^Tr]1Y
%l9`abKWe"%asiE_LlYN9#3rcV\md[R2"=5%OVa_2B=ljlhMb4T,r;a4@YCgSpbl*MR1f7/TE1-"G0+LWcn9Q/[llE_lS7u%Sq&7(
%d=iOAqA\-Zpe/(tFm2hHFG$ftLL!R4ZH`2(7BEc9c1&0d>7*'1NtoIL7MmPOcj9N9'3;qc7]ZY:i'G-ZJiH];X_l7#BK>S23(7/0
%O4IEUfL;GY.c%CbXG!$.S=C/l9d[,#4?-g`X.!g,]VC?l=Ohp(jH$ZWi/Lb,Z&4aq_5<I'H0-AFSdMS(9LT0!aCFAnQ">8!h4QRQ
%6Z\P^9KVEFO):5h#,CU/.SU">Rc+gdpd?3bV,!kJ%kH<aAR`'hk&$t#T.pH@Y'n665`\c'UA"\j+e`LFEfukbK](X.Er.uQkQQ;_
%;=eHZ<%$ld&V@j99h-r^h!4%bhSFsVSlYtMCE>`uOG4pD`4C!unl8T7dA^NHRQ`Rd3jkpTeW\TWa\7N0ZCq%gj7oUI!D[l_V-*V#
%dLKf^HM"7\2V$?2&O!q<0(&"onh`$*#B;:haV)^gTtq4j4:2M394_Z)(o8;c)\%W&_6JK?pII9R.6E][-sIRu-Du,V):,G\m21&7
%'Ih!O#3uYa.OM!te^Xa9+NMC.$5Z`%k[9-Ue4cJT<&=2ZdphZM!K'E-91#m+5VKPk8K)L^<h[0I[:Um]:4LS$[8[!0GM=mu8106D
%7B!:&,SZ%IH3%;-b2QGq>/`>.-aXdGAFDbkP-?E7^Mr$i(.QfrMjG"Z;#rS1YBk_Pfm\uD[?D"heh&egH9.=JqKMlq>8R13W"Z@d
%35Df.!f(S\L*d[__bFu?6`bH(RdEL@!V$0T-0:u'ju"J#<=[`b?@]g@l9W'?5)mK5@a35.ilBX'@@/[pp(P-?Ag'=A]gn2!6tFaN
%0:U`sZOpQ+<lN+Yn5R/`Mn17Q'-Snc,Ic:9!ToEp[L;,X&010:K[V/NZ6l^Di^sh,ZH7F73\!JXJ0ihYFo&'e^cABV&#qnjQ%EQO
%V=]A.2/5mZ:,Pj7ZLH@mY+49H;E:3PHJBg";Eoi,C\i2Y*dR8?..W[WME.f\W3='KoV]!@Ti@8?QIQ\h/)aeN%dH6O9kTqS]e".g
%:L6bDL!o5:J<3UN(s0u`2GjYnCa<g-[+V8Ed-g'"JabXE\V&leQ/%3C`_e.U)J)+_3NBMN0>3/['RbqcQ,O`@KF%[ohs5go[_r1a
%`*WqWV.Lko%%9NM<`:Gi,dlub@3`+#_Ase'<[*6ZWDYm'LL$C&H9Vht#_N36P(K?TJDUJk=caT4egmZ&&L%aa._ol;.LChR,%1cS
%=uST#As3o"1L9p<X0?3\YK(++jUt*k]S[DhMR92tNZiEJ70#\G//ESYION$0c$3N85a_(Q8a\/G7Q>rYr_DC'd4DN0-nE#[lsLJR
%g96*LR(#5RrQ7^XpPQVQ`U3aLWMpb9/0Z_1QHXF$R^4^<1?fU,[u->8)/GURKn:H0gW#_j%[tTQ\K2HD]%ZHd+k,Z/*o_20JJ3rc
%-93aF]SjnnP(cA]>f#"3@S1Kd%'^Z@88RPb1-ihnN0b0s9[[<h("sKqSK:5T+Z:"PBn/^^$3cgOMS\)Wj#%$=Y7k43Q5E0OKOllu
%'Cs-YojYaN:t6dA6A#NG`<ep]'HNB9Ge(?/@Ps2LbP0$X2HCU"GQ(hhl#F&8@'NhiAsIC:'m1`][?ctPXbV617e^!odM*r4Ze;>b
%fd:5b>@S56e8"QZMp>as$#q<dpoFIukWkpSVP'YaQ77>=$>F6*'J,RXXhdDL-SIsWJlp0%$_eKCX:OCn"0j?>n/B0q9#<LN`:nVJ
%.WrCl?@?@Rc'mLT`QHpkf(@`"R2?u!0#:9*:[P4:M73?3#=/&mishNU\<:HBQNPeFh.afhTasD!Z]JD,S@G*3>'=iR[#n2<.lf]Z
%WW##&Y\dQ!N1g/%elaP0Fjo\5F\]+Z'VEHXZ!.?((KACCFjkl#*MdFXs6(&"/]Z;,3bnGhS&R@fKet9WO7pPoi:ug)/d?<*p.?K-
%k\=YHNG>R*,H\<r]1?$Y3GX@^I[V6Jm3-hGbe-2W5=q=!HSlI<6?0,C^%?KVg=,1b9JnU8i6g@=pLr=K@kQ)sO6)HuH=LD!MCUic
%GL%IuP<K.!<jLE=/gkeQOdISeO#LP#6SdWSK;u-a80bBY7,g*:_j7BM7HfDXPdDod1C$Pu^LFICT%$PM?>pN[/nl+q\@g=cQ8BZD
%8S]"?riq?%(:NI@L8l6CWPd7an/([#RK@EpnoEh1HClVU@*u8#XFVdtFZn:D,H"^#UY6p1KfL&on^:Lk=jiNkOSC>j[$Mh8ifg"S
%?kOfJTTOg1o.Peg1JUp_Ed)F(%V)&]cU924-)$1d-B'YL.m9GZ5tJ(dkT)-4+To[(1i"Xa>.KY"dKLf?F&@23k..^acIfhD_Dg_>
%DB*ql+%W8H(lrdBIP*5k/-8CA+Y:K]IAu'9$V"Rt=05dsb9I@^N1*CJ.YjW(\:V[j=X9*#e^&lZ`_"6H1@4t\S/p]#K>9%J9;7!l
%3Nair9rljY1>[?B12erX3\`sWXb:E6Q2*<>Gd8+%"#E%..T5Pn(gsL8W(q^1`1[\d0Ua92j/j+JE3\o=<WXff/IM8e*IaD71)\[L
%0L&,d'epG75$tIW;W2M?@!c!FZg2@b%m!9hg(5?E`=]Z![n=)(KAk<N_Cgi?][7[fPt%-@fEQW3iFOE\4VgJ*YZ>C^8h&UgX:M.3
%.S3p3,"-0:if4/uQ,Kh6-dkFT$A=t6h0/lk[%'L0p,oVe:tAOJF\O"@gpZp$e+!pIWNcDq6cNb@%#(A/?@N0)ldJ8)\,Q6*@sjEN
%?n9gVqbW\qQ6nJ2>cLoTo=5Gt<iT>Mq7okc/7hikFqS"CpHfpnVHY7C,q1]eF%Ui,e1t9`DhN@BrD8$MaUI]=")lX9=:M"m?*qX"
%"ERZ'D%Ns>C5#Z%=LG(D16-#m1e#1^QaHCm'Z-`4XdVCsr-IjTD`\_VW)YG.SA69-7RLWJpR28_Og$'AE(*cZHE\>2L?mEj(p1cI
%A&<]^f\!UmPfIqm74=H,:5GD!?DWOnm5THl``>m1fSQ'o'U+'\%[-!SoB;2hU^Rf_D[>)#]\IZF9[!th<XrmoA'9G4]NV189)RKl
%F,-o72/66H-nc>BKI!hZL)hHC3'Dr/ll9tP#`6CdS]2`$OU'2U8:ZA^bGYpIJ;W-=>#Dh*[uhc,C*(WJ"[tR2=qV03=[Zh#NPgsc
%6/P-AaC&c"86kA/'lU-<C1m&`"2)$>OYg^lG$IKDpT-+CIX[eJK>DfScuZi7>B\u*8P'GK42cQipTAqOY?DIs5!TbQ]l%CS7U,Sd
%N!3J9-U`e&P/5=Cib8*K>!eZ\=oC9'KUk%8(fqJB[LD78kpAgBY2L^1+YqWLfHF@aTbPk</2e<GiRhZg-6$6HHg<haI>/NG-Cisl
%JG#Lj=rnE/0-a]DQnja_=Ub#4Q0X`)Bfa8S3YVQR9-s81QK8-a$?U@2P0!u8.o?<u%WE)%hK""H./nEj2N:2mN?j82gngB#QOkYK
%cq?X(Y'\,&H@okX](\st=[tM9Aj7bjqE<u:)RfD'FgNMPa7-.hcM$QfOp@#LC[Z$E:neYp'e<Yig[m'\JlfAAk1Yi/hnfJZC8J^%
%s4"IoV=>,E[]Or-4l0uXI*K./$>Toq$L!5TB="0cRunSFb12;CnERgrPKiumjDc;/(cdb`'!&5Zkcn6OlUoCP%$9'`+sdNt\;<_?
%V7L6+$Ot%=70AFVoc8/=Z5JK<aalj89b0h7^_;>%:OGFu(aEJ^n9FUi-U>u>)F>hcM9T,DNXcdnWrmCglRQ=q%LL6Jm,5sR.Q/_0
%V0`Xj.GpnD7?h@lN:\aS8US/u:3$o8fKf=meki%E#E6#=gWtk*-q8be/:Y'R.$YN;KiG;4n!-m]7BG#n0U#V"U?*Rj5XMHT#>bLP
%ck*an=e/o'g?Un+fG?ZU(auVA,@1N<9L93R<UV4`#?6%,e8,.!4Y)VMI1c`K<=;#%d69Du'"f6IM)2L?.AWpE,*X,*^3$0q@cYs6
%/&K`='Wo\_69'1HT9cCg*lgMm$R;2\0`QSX]GLIK]W"-GA9GF#VtFG%prbL02bGt]1eo3Tou5a1WFBjnYe_]CWIfd0Q5-TbeQau[
%Q&Rbs9^1\lK?5KUD@T:qg%:++66N#[1HXOqhlXl_Ch'KZT[04+6!]25.u&^%bmMNS\->LG;Jhb&eY%#OE*"n6AN@'a=N/qWU>ZT&
%[58c%Nr^`>=0YVg)ZdW;VT*<YVp>P$A>j>L/85Hoh[UqFflRNsD\hViS1;[M6Xh<al&m*d#uRUn/r="6+n8!1ArfoB,_MJ:KlU8U
%;73JrUpC/Mc_ppC>Uf:f5#u[NH\$m8Lq%075%U;odDYO(PR6DAV&Qp9fg'ML[+YuQKB`^m7Rj`OZ],-Id_lEc&.qb&<`!Gn0=A!C
%*dd_f,3^pl$2oHPC:\1-UpW3B=OX0!#uB0SoW2*<%9,/Bm69>]<t4(?4ke*fA>u7t&dLJr?>k#9#\m1t.IaHUar]p2]e8*OB]^M`
%i0Bh-#G5n&9.b@G=4G?rhaskL:1AQH;;KdWqlk=:I<Zb"M8on)B&?oneDQFX^*_OU7=B6V@[Q/C4@oaO.:J(cppH++Si^]`3eCZq
%WN#D\KKosb0t^4H_)'1GPr/BNXm`-2:_kOV+?.")DSA?Xf&?UA)Oilon#-G&d/l!_WsM<2(dZ*?@Q'Ro"GP\^H:?T^m&>+f84^&!
%51&C6QcnA;5@0<P_\ip78RdZic,4PP5R>9Sa,%n"&:g<./+Q=$l>n^uXJ5FY\`u,"n^bc+A!^BJ7W%ZMaU5Ch`"6"Vm]Pm6mIY1+
%prKb6+i_E6:HYYtqo?DX4=dl#!G8ZG3Gcn"PYXT_'M5t(G!_E."M-*peX*QIP=I[X@X-'r=Ze6uL;E4,(cBCmCg36#l@E/R9gLDU
%<.iEjbu#)\@(T;+0e0'b;O(1QK\jS5R)(jMkTHBNpsCTTKLr9DV)l;E9ruJHXQ1S.$?%4POuPUgQU>Do#V@gI/C\cph]m-%@e,OZ
%/3Gh"AVk)O^f\+J&;'^g3R1Z;RcLBbTa4n!:.*f<=t/^(o2A4Xi%0_'2Kg1:aKKL\Qj@+I.`Ter*-c(pA<G\%G,2I=cI-g>.j6]B
%Z@^^VXNGSV6s7#ha"/F.DUARt"<rH92*ah9PK+7#Fug1hZ0R-N%'i4]FOr(L_cjZoO"J@jRN1mG&["Tckp4cc8Q@mR:b]gomjlnA
%Os&+kr^r6sDCEUrC+,/\7M^2&eg4t\pQ:M]/M)_M8`5:YnTq^G71YJVXVV`":a-[,HqBNgCiX9.ghP\qRe.Z<E>>A(*KVGSRQ[%V
%(&=$u'cF,#%77))#jBEF5#4fCK/u-FfYQ!T]MlU$E"FN'#Tok'.2J]tGm>ql3].^<+!jFmf2NN)LG[fY;qK@u(jV^N^)ag";4>M9
%g5ZB31^3!@gRDJ7BpVP1];0!(K6XMM/oTG8Xq)(K!U.Z1qLRm6<"'g.?(Y38F@\B_7E$sAdk.q_Iq@F6<9R%i0hJq"=(Tg,XCC;R
%T-"h!]b*"&frs6I`J?'&MG1d]`n:FUG7jrq^S_)(R!RLe"gL=kF)G".l-;Hd9\6B'=gHCprRDKQL5'/2%\mO7Tii1OYmsUUGC9Q6
%**FO'9h%!>`=iWl(\"4Fp-'i8eP?eU,]&:&*i&j?d7@!QJAn1G'/8,cX@&?q,-/C!5Tt-BYW+PVH,/67N>X&j1[!*:Ous!ng9TTC
%?o\bgL_2A5ZTU`/[Tg]0B'.fN9$<0`eL^Dbm[`r;)f=/oC`stPSDW'Rf<L-\C.O1(0.*q,mm2?&@ZVNd,6B-!Pf_fj#EIXXPF=m=
%*9lq.?Id8n8AA4e.:S@()o:f4K:mNj>un23(FRE<+l"3@O,]$:C=d=A3"`=WFi`[\I+>O]7!!n,G]jT@Qm^V+>SDn=URDE=3l?t:
%@jDN><_Jp$cQlQZ?fk,1U=a=O\\Le8Mk*DO&\YXdO69!ZbebP>^A4`4o\e2f&H\:j39$atpU[nX_b10E>018C8PW7K_7c!p:fO.C
%k!m^hLk^IHUtb4aWl6g`B"*ZC[\5<6A47=LL1tJK49csDYV/qBg<`s'\>9HW%9e=c;)-JOXkT7$N@"ZNO1:th=\TR,:V8:.PbIV`
%W#)(7,1MDH9#u_jdp)Z"[eUe,j,RHAO4BE&6KK0QZ>4CEb<EIRI=VH'WBb:FWZR*A_PnCnbW%TD<a%d1\Z.7-%oZ;`LrU^'="6I9
%7#b$@_jGYKQAstZdq7&VA6ech%-\C6BOX-+]1f\^'aP,<Fs+ZAo^.+($ph=/WCMUM/g6W"@2;T,hBpOVL@n#.<E&ag-3f*T]/ea:
%?"7!('8$o<>cLn)h%T`U_-87o#pGgu'3hE;"I<&HH9*rOeh0J`WW$3*#R0YJN1!pl`[53L:XrcG8\gR2h5k51RL$F(&I]'h0@J!4
%EI&.9Pj"7\!+;R<r6E6PD9p_1@Jd%'0q)Mhe_\Ws!/F]2Np)lLJb0fB"SH7.aM9YYCa--1AL8bq0$m6,EmWFSn_"hlETQ-Wb*@O@
%+(EjWKT]Dqp4HgTEdV!`ejU=tWnR\SFh&7M#2hRZf1Ior6B@s)hW&ATRVRJs<ofs)V1de!aa'C:TZPEoq"6K.r4Z3m+G!6#E$=nC
%)Fnrc5g;j$Pa5VGW?+F^E([B;KZ_k$pVU+q=uE;LI&d6$-Ta`DokqRJ9^EV)M+,%S>##je*.ut=]&)@8V:$L_mUC9"eS-HrY5+I0
%j&.Xga6>rCkg@N@]2S[B>^#gQOY^g9'C:ng-'2G.c[p?!NU*HCAp+CAFjhis>KWIYIDL1ee^nTLXHc1aKSGp^N.H'W_p4Pf*OC?K
%6u^@b-KK'rrNS)$Yt79c1@3BWBG<"saQW8lYrpct2sdXh''p70$[Z[T3%Pq)0>atH-6Z_TV9-V+8AW,b(99.D,p5]?f^V5k#Ui`Y
%;AF;)eX.L&+[HW#%TV0/A@Q-kjq'8nOp*QcDm;Zo,Y!"U!?C;m&'ec+j6b%'R"CH^#+R67S?63t#;b#Li_.llGQC@=2b"f)NP4<1
%S71*72p7qi0i(kF?ua5'8DX?P:0o^0$cs5re7ZTU'!-sFbK.V-E.>jPO8s6.@<W7aV!Q%HD^K@?AT]e6$2J'M@DOOMD<+W:kBXj0
%]c#Ks'O%F!kJa34Z>5Fo;=9g')`W[!aI6Rmi^mbUr#t*o_8j=pi8d"O<^`?83GS:=L?o3#V7/IB';'28F2=3l9<5U)U5NRPUf:M0
%%">e1DO#%`gfP<#_KKdro];Z(9/`GQ'a%`*ZB12&"5&I?_H8DX+qMEP==irnJ8b8o0?TI"_U'EYUN?5D:8Kq3Q:5KcO&ZV$B,PXO
%U284^<aN#8kV\rknBkPD,Kc[8Gun4CMfnrH[&V2644S3L;cXKF1[?WP.b!*dcg&KWfQ*&'U<8?uo8YL3"Wj,*@>#oUT6lql2M8N-
%:K3\G[H0M`0=PD/7[RqA=:^=,ibrsXVceQcf>i`lIM$?8$H+.<36=SpLE2Y=8JSH3oi)[iAWsE.W`q:u^#*!ARH%C?&WN^S)<FB\
%iL#a,/\UCbRfN=$kcG__A"`H"JnkZR;fBo':CH2S'p&S8ONJfugXPd7MukSkJBqX!8n,$JP(G>_<C->oFoh6M&p>WV`(<7ZpEjVt
%n2\=9[Bs"fBT0;14P3[I$KN,JAMn(b3[Ol\?q-f&*,5L.q1F*BCn6RlVBGZ=98Fml,gi\-_.Ue#&KWK_8-F4t"="Y$oSACCnd9!K
%U$I,Z/;"'R)K5S_>,Z@gRP^t6O-E9CLW`2o<(%)\03WO55uOCXE#>jG_F><I4g(j)84RVbYYb/m@l=R.Q1R;=WZ_):4rXW_`,'iu
%%B3-G%B`Jne3HQB=b2`Xa)"#SC0/39!j:,%ToRfZ_,1qo_\X<VggddsASodKHDFc+<;Ue(;831>qariH7Ue:MFgVKr&e;,&d(3;`
%e'5<[>[hen7]qXdeEoQ]ajfJ'c,AV9]:h0j@(0Z\d2V+SQ]*ON"V!3EmqX(_C0ln#/9F/3;q[DXVJOX?4W2tdiQ0Qr"pMl'9k#HY
%7a#7/*Kn.4aSr''1Sk'e@92T+T@h0*5UpYdn&,P9>FeUcZIm"oU;O[h46%>i6`),^F[GUC'pH]i'!gg-bnsp`d[3a'Yc_<MJuj)'
%V<$'^&uMt)<1/DIjeJ!/n:lW3e0UkGT`BBR;t$:)Y=,QF5qG^,=!F3:@aM1-6>EfHpl-Gk3[g]h)#/L_3qQBPU!bcAfS%ORSVJSg
%cf9PJMp%."l>EB=0:N&uEj[)6`-/.;"ER]V%Tr28IiXg59k:eqqG6+,L`b?IM^0Qk&q"S+N?.HlQlG?%AIks0iTnASPNV8==*c;2
%HQ*4r.@!hdE0s:tlVI9)-I/,jdkQD!!<H&ne]`E)-!099C,O2IU+)7ZFAYm=KN$;"EuD=l_eM%/&mN_Xg)0pu+fu+Bi/!W)?@3_3
%SL4RU_;/i#\Z4>@1G&</[nDn?'L/5LD6&*-)]!I/!5aYX!'JO!e[(md:Xnof88>g>XCRci9>i'd\7EFNOKbCad/bNBE*3VmJc\(6
%7h:d0R&H.kK"P5%Zd*^u."GHC9Hk*=7,T5B;!;ZA@sdn8At-`]<C"EU0K7AOKPmFjAKQMUV">UJSWO:kBL_9L%IHPe'hF\Q+PG<G
%A97CJ!,*1@E$>E#0["#J$G=@8eRX\(K\`i=U:9h1\1(mlTXMY2XFp[c3/Fq5XLoeu;2O0\Z!K/.mV0=lfKE"Pm>IauKL3.u`Kc=X
%D('S;Kl2nY'q,A+j0jl^S]Li0pfVpGRE$1W)'Y-2S;gZq!t*q%34M7TBs!q,ZF8]`d<ah$_?"=F`Jjd_<'Do)%O`7B@F:L,7,Nm>
%=W-mRIQ.\>a_9k?pTp90Qc.aPZ3i<h28UeoC>(bU9PX1i2(2k-oDY=DAdrV7AXGUnoO=`E9UfR-27=aQiN:]9NJ>OjHp-m1=<[S7
%)Y9PkN*%6R9TRp:I;6L5%C@LdB5<miB?4<-e#!JF;V`CFH8^NJ=OH@198Kus(9pr-I^TSB6c=XoIFH-]F9Dbq7:e_N@Un^r%o>)R
%.j1f5$'PObKd;_D+]`#cWkdjV.3u/1Z]L_4:`t37(2FiUO=[>nE^/bK:$0]"X\]"(nn+PH[8<K(PH[dfr\+Us$1B#QMa5jSL)OaD
%@>KM>P.K@A01>I@ZWI=4(1B,T#Bh\T&@SSs/Z96J(hf(BpfPL4X`/n>,"..0YYZ4pK8,FE-)lDqYKTF0*4!p01t=pZ:pkGb\hI-a
%:bCgN(4)ut`^9t;$`RpkNn#_kHg7duKu!t(NFT6MkQ8^U"T9024s?Bp\KfU+`0*0tar]k6_J7sUjt78s-@%RN8>r=_e)um7I'YN\
%4X$6HZ!/h]RS<"`mWM[%AltZY)REO#M):^pd-,(T$\KLGeQtrY.2D=mb<`eNCSc!DCCf&91GM+-d4mMGg0'B@A?U32",YpEC/Ugl
%XoX?ZDT)P%-^I@;f7I29iqKm=DU&bBR39]V\j+`i$K1V1aTdbKmN=ko'2o_pS!?\A7?JU-P_P(bRqZC!#4*N:6;SO=W'go\7i*G&
%D63$7kQ5;DZJLn=P-Ji4G3o%TGdWgIr=\+A/-L:.X.#oD72[k!c4fn?SSjZ=2<TXmKE@;b6_GB,KTU;t<bur%Ed-4"@mR[1YJAG#
%mDi'.qMun.D]E<gJgNRl8Z8GH,IqR17Y7'Ui'3&]o'jJ)9*u$sn:=VnC(R/[)g;OeRp\XpS6iAk9j(\tg!EN/b321OA3&i&ksl(!
%P0;M]ht2K:X[BHsU#&3k<BSntZc8rk$)=7Z?"W-rV%Yp;r..9Vrqf%C?(k%/>Qd&Mcfq<9/B2*RY*b`<FRq4]A@YUBWn=+tEabDC
%O4tog/Re.)YBjW\a,[5OYsE^klsFYLfZ'Wh@X'V@j%pI`luK4d0N6F$gq]6eQr42*2R3r2ojOgr'TA,#D^P-2!h,u)"?V-jK0BeL
%Gk?8kOpo0Ii:uj')Ht&>Rg:7m/!q9-C24gP+J]GISfd+\\#hdFRr.3eR$t(AHk@R\E)4:q/r5!$E=]BXqc9m.jIrO'iHd<4e(aP5
%6@IH>V-O5#4461;m7<@R.g==@f1_0[(?i)*0SJSs=m<?.NHTrIOLuS,-63[$LG?Ot5uk*ogN5?.$*)'j1q?'eR>`6REm/P.0UPrq
%,!)F+V0T&=k9U8U'Ykb1Z8u5Sg7KkJ7uR^+Z,',i,Re(A9Ok+D'0B<nbLL.2YmYSJ(81bH=5qd.JaFac4B*.PLdAZ`,4n@j)?!YS
%Yabh``e>!D'9n'36jX6WVkj8r';eJM,q#lj1DQ@*F+ecA*PkVHGUq>NB+d[-*a:("F5O,>7Je'<4`*f<9q'-JTM[&P>9Y]Aa`+8p
%LUS[67Zpd!g9"7Z4W$KE<)<UKK>m@IoB+)MQF\bp,Ires`=3/na&;H=#19_KO>)7kOH&[)0\A$*"ke-H&UHbN^ccLZlrH?SaqZi-
%i9KL9K>a&44uNQ+pU)BZ2mT\:WQ<]_,mm*\1WpXbZ@+9;kR3`ZV?"%de[iM'iku!hV$k3fJidRJMUB'adfPSrm:&*_p-'iihlFR:
%b42,3QmHdd`TVBl'NF*8RE@RpMSQ&S,qZ3JZ7?&Ll6qiKf!8B3?t9;m9hoU<^)MQtd"5T(2!Rq6YZrnEqlY5)fp]'m@hS&1NSrDd
%0+o2"-)*atBGANoS_5NeCV]AA53;:-@H(pK*>N0"VWm8r)?KhBC=D*E<]2RF^@FEWZ&h:<l<k<,7S$MkTskpPbXtI3>Sg@#eTol)
%&6tFH!lRW31$aR:ep"HF`/.Z^`6*/!Ae%hgYc<gsFetGj!kj4ZFXfJ[@KWBgC>aqh)OLTL$.BVRm[IXo`k3Oi/r)\%@ssI8B'tgi
%bU+Sl4:>Ui8JqB4?/tZuTibbEOsQo;_A;R/^._3JIQtcU=9Ab"#!Ciie17G.OV`#CF?R,S/4)c#XBL=&TJ/A`<b2k5lC2="?6)!N
%e3bL3iK_@3E`1=CZ'p99p1mJ62PBHk.[\6!%J3F3f93=,":uoLU9B/N*]5oXn_dc\a\aW4=XT@<PHi(_3Z<=b8JjR;q7]TdoK:`"
%S1sIF'LKY@U@=h4+2$%+NobA_$=GWW<^Sa>F#;3"#pW(5EK9n4\.L<mKS0A1"Xps12>crlEr1u?;4%=Q7a*58`/+G\[ZrT[mj#W3
%8gYO*9GtD@3SeaF=DHaNZAX94Vp2p-j*<UaVb^$"_^pbd$FGWZmPY%/l:X_Pk_m!6AtSQb/)(*+>8kGQj'7iQW<3G/Op!UgZEAM(
%`Q)2f64d4(f_'MOIEWZM.^"TZJ[9L!D)U&8e1n97QG`q:(H>Ws7Uuo#=:(bm]o[KKB(RZ<c'YJ6`8cffXq\[O8Z&4E<]Z2&ZR9Ei
%elflSeuPlS%*#Y)-rV]5'QT[T5u6\k'TLpK?V[t`.2"5U!s/gk!*[>ke8',.(:UrsHin2Lq+t>$h&6+RE6-FuY?V<#F5h.&jU@2)
%J*I^QN4GHeW?@l>hO!p$Z"<8VWuBnQS,-pn0o\Mf'[/aV3]JW0L$TI8L3RsQ2&"tko'6"Qch#g/:M5/6s5B=Qj%ba(A\:nA0E4WF
%@frD@@-B/[2Z&i3Cb[H96N'8^&/?_XFL,/qh/P/Y4J#i%$A;a=8>k4uN*ht?_V%c>Uqip\JVmQpS2Pn;a&TD#)YN5U0L+$WEPOG4
%\+/E3Tj)E5ZP\#/NP*hq[Nu$]n1M,O=IO3J^+0_YJSC-'T?Bh37!b!C5Zr"a0+'t:lGOAjLpe##0%:/9>E.S;B5WD-co63GWj#<V
%1V+F.jiG"FX&5?ERL)Q>RZNOSf$,4!;N\Dceq^MFcZ$t;fr$$VWPn2U1t<ZS!LOo8l=AG(FlHH#qquo=U:m&Q68o\?NG&rt#,Jo)
%caafKTcooR")luF_,+c@3q2^ALA%b0Xa'X=Ma\WSQT"AA/_b_pe>3<?$3U-Ui0F0cMj5?BKT[X8KR-Q>Tk<u!1KKu'W1kA=[M4tN
%)J$>nAs?gq-7Gg!1/Cm[nN]1se7'kY;ugWEFpj81@$d8bUDO+r.qK6L#Hu+ffN&.Q6:*X<pOj2ck.o-eW\!q8?@ZLR(cO$E+fT[F
%l^C-;&bT;>DHG9Y.P(],0H"AE'hA%u.W@8r]rm(,=pRh:0cuN0!&MQ.TG;5Eq4EUNZjdSg>a"KF:_84Wc4GoY++;L*CqeU\=I>rm
%#QYYVm9[993:[bA1F,k$jc+(3V,XBUO:?k!,">2A-M]ct=0D*65d(S`&Y<Q7U%acWs"B`2C!?'Se/BHD297qI/[arin2<!09hV\C
%,EU:=Z-Tg`:N5\>-l@7DBI39X+@==PZMN'AfgT\XJVaO-@+5=S*.^P(V-o0(5s>AiF0$bM^2)lr=foB?!LDL-kK*?CjGhVEkAmmZ
%%'ITeBl%]t:398#EeuefZ07J[FX8&u[i6'XqO\l&h;]#hs71ZCrorl8qK;\]?X>nqpu_SLb>1q%m`o^Q7/6<*(["jMn`,,5\iRAa
%HbQO&4EA&pQN-m+T,ufQU@89l;tu]_Q[ehOjWFJ;&cHF1G/)`/gOH`hF"7"=;R&J?s!#O+VF3h6YQ`6:I(U*(9NQ1%rspCdLaOKM
%bEkG=jN-[jGD$hEoKSm!\o-1@Q<F%(V8R!^AarQWr)/$ZeDH,-q+jtN8oL>tCuPk.5^M`7OL<306+7$M(OVAWdBBKbo<:JWjap_@
%RR7ntKMpBQdQQ^e&o8P!G8E?E&$f,Q=\IPlJ[4R^T^9QgAe9VUjf?;D\9RZ4&S4mChJ._L?G>KV>)3+%;--?GW'TW=4+8OcqT$e*
%RWPF%,Dk?BM>rRLqaV'd>d[`LarhR:]$a]pAN>g.j[)_`Q>FlC*?8$Q0C=.#:]u/9Or7f*Vc8K"JM%Yt$UeA7oQ]m/4V.d]TGUmN
%D%S>>bh:>GmEn2cNr4/*Qukq8;M)^kr1KpZ]neAG(!]FML+kMfM1RKoc43HQ8SO`11:'kF%^F+YeL_:hq-Lk7%Rs+:1'^!#2f_09
%`gq$EV`G>tnmJ0C]X3=]f?(+[3O_-C<S2-oRPP&32t"iN/:`MG:h%F[KQT^b/XHnp#_jf"B(B^WrJ/\hd\rJu]fl*4-`J04H>./1
%;^f+E@8f5_#$qBq48JW851g#blTbNJ:,[F[,QJ%QF';cZEckoSU)c=<>^[=Z`%3s8OJ0d)6';,e6,Ls<;r4NfRIP-b'(Q@"7\D@H
%(:9AnNQ.G+?]A8tPjFP3>kt$Al+*OeR4s\9_HJ_WrD&[hP[mNiWP<$bA[MdWkYW#CO:Z[G3+4<n#;o,^da/#$?3cD@ai'kRT]ZfK
%-S->A!A+VQA8QP]Cm>U6TF%;@We;Ru,:a,GE.-_hVc9%de<04$Ff!)`NbW'BT^7>pP*#:b8IK4787l>R,=P]iWBeDp[gq#;UI7%0
%'mPH#1abum>QJ0l=9ZjH7(HE'_ho%iS1@0E7RSX7fO[hnN1MT<NjR3Q8W#PAK)4@:XZt592^M)X"0^`C7qEut95]@Dd)DRO.RZ/X
%QL)'pVAUqlQ_ol]dKQL5jKqDhR5A..4"]i68iSho=d:8[R^/-.OP=dO2R*b^JFIub$rCJ#2?LoZ4V=VXil6</bYju$nm+O$O9,o)
%jQ"Dr;7YD7%TX<`J1`Jd\tOVM'e9T+$&N,)>N,R!jQ3Ojg(NRp9phRu[7"K<S>E/RYu6T])2+;&<k-WZL2-qTQVbWfg%ThRBo1Mq
%QGHHp@K9WX#.NAJACuLqo*HXqF9\(BjnR?&dt%t44<ZKm-%2WQF:12J\JZ`GV@GE%daXsXFXd2JeR[?@W$\4d9k`3>g/O94IT]a"
%F<b9m(?V#gKn;]&3+8qd;<>2Sg/lOmXh\sO[O)5+QU_%#\,:26aaI/\[[^)E9/[N(*!oCtViF^U8YsK?\Wea;,1Yai?0-B`DhDD<
%g!o\@e?Yl+rCV96T6]G*"Q#!N^-UV==qHuMWnb(r2Rh5Eq3tWZWKWdjK^)S-E[@TPSk#:]EAU[`9S]F@iqT`i\Meq,=$1fqdsZaa
%L-.aM/9C'N599[s,sLACTdmUM\:%\r([I+mn`Pu4mQWr6kiV:LkGNOef2j=Y?giHXL`Z05\Eq<Zlot@FmcOH4Mr!ES5Q9m=o`"Ef
%lamf[qSDT49>SAMrpr\+4rhubQPAWb8lK(M\=U,ZBiNa`j$Q%u`<'pZp8Iqi59SMo<J[^<o24<[4HI5:6`be')9(2:!F>IO&[VW$
%E/=FDpinB&LMYKgQg$I\*@e5%EhBGNfu^41/D"^[]Mu-U$7npiSsQScd;#X"4EIp(Uj&"35D#u+R;/G2Wrh4=fY)i,S&qGTMug$5
%,D0;!?m,LTg9q;u$ogA#.6P0nYJAb\^qlF7\-cjC&n4:o%@2c<(a<-rW,O\<&)0R7;uqfBWl/eUE&7][#]Ad,TU1Nb#d/$eMCjgq
%2FSg.Rd^NnLQc^llNS4.U"'@P`'EjDVeQb]#MKPNK#']s!7OE.X5[]B[rdm8o*]HNs$hc-.1T,%?=W1ZYYIB]!VdqI^bD:64EBB-
%@)dcH7pBtm<]6`U_Lk2d$sJqC!"mdq2,M;hLO.QT%-fOG"f,MdAa$7%H[YC3oImLh1rCfi`-,H3pDC*7'0A(ipegd\ItRG_Z\Kj1
%2ak00A1Q\W[]W3gMYC&P`^'HS*%^=P#eP'FlSE$>!t6tVi2V!bT:@XIm+:tGJN=qAWN&u]+uja@'TgZG5K_j$ioUj?Uch:['tW-u
%FI1P#U>n$6_YXp6?4k*BKD<fhUbWPW+T<5rSRfYW6!+Pl:?jS-_17-M[_"G4\[7FNT,QbE]U'`@3GkK,F.F*dXIKZNJ78ZB&1YMK
%X?u.T$,7`i$aXt(kbKCfO+bE]>ce'FGhrb+!#cGjS#^h*KpqU8.Qd8XGYEbtSG(fEf%WdgjsI%)m`i>gf_9io@a<%@M^g/*M9t=n
%3>S'*s8#:)Xa-GV<>LjtXJ$^$='$<n@<:%s3^V4W6^1!>Jqq&%?Xt<-;A#U\\=ta%7t)L2'o*DDM_JpK-.TE'N;kGgb(drp;d:X>
%:j@R5#8JFtbVO]P@g!$4]-!Q)c$[FcS&KAl;RX:;#"R)Z@'^/O$mQ).Il$@'>.#+(X9aT28a?Gp*>'(Na3i`K&ri"F?s+?JaRl_?
%Q6?K`aWNB:A)6ur9.qOjlq&b/MSpFPbsK?QGNDEPp;%^'ask7K#Kk+s7?N60'-5aZ6D%0.)lo3q@as(/-XJJk"hD*&K)p4m>dKq'
%J:]UD$:'/[qkV"F02,@LPCq:fjJlOe77"-sX60'f+\4AW?qEag>M$m#UAtW4m_l*l[&>__OUPc5,<Dr`/Ppm<-":3"8r"+?&u8[#
%*Xe0K5osPN;7Vjd^V(Cg0#>Okd,;Y37W('r-'2;cG\\GGR,STs4Qls,Rd)VG)*)nu*j@n<o@?DhF%P#1$SS\L:t/U"1FA9__.+.3
%#<u+`l\oP6<"1R^BiN5U32Eh#RNWfqIpOg2*..o[2iRasViDUt1#A,`JJnOSe0J`FR[)%P1jjN`k`r_NdOlPnNb(CK__I2Wdk"MC
%AdgeK">$e!S^\Ge.>/I2@#H]YdUI1%"%%ZI1H<`ND?Oqo4$F`sVttbEb-o-T<%JMkEp=Iarm[h'9;8>+:.K\71J,bjT=$5e^5)kK
%3kHJhJZ<H'8CK-<P8#i8Fb2%B&$auP9nBchF0I!I0j^kk\?9GMF+fA^r5lO99mRud?UZb[YGSDI/@,V9fIUIN<7t]#BGMa&]*/YG
%&0'G1Eb#bY=9=3F>9E^tn$OEM&XlQc:tE%5:"BT6SWQ_9I0qAo4g4KV'a+[Gnqc,sXL^gM633UIh3^T>ZZk(*%8f6X.#>>%*@uP6
%l[q&S=PI])*pA7;VOhA&rtD93k+Nl.75unaSGkbfGeuT1;+d!P&$ld3m4T?2c%nM>[]<R#deU1-\,Q'JKCeS`)1-=GGG@*2E,e^G
%]pt$VVP=5<a=`s-\e9STW]o)f2Zh\*K,Tl:^F+ZH?dbm@QRE1RQc5V*/&a:,'rf:gFu+[l+]$%_[9-i"^l:70DXe&hDu.t$?#k`X
%$)9`n3ld7q<"K=E#S#t57a&VU:Y9#i;(#AWXm1KQ.'/')G55iUbs-4koE6oYB7Vk/Y)!mVf2t333)`_s6S=;sZI:6SO0]r8hF'X6
%3>K6Gi0j9u2<`GcB!0]mBqXW$4f-(sR6[c5JPU$E"DdRC;0%M^E,YJBN4:VC!==a5_G-qS9^>-%AlXUrLP3)!?*=eJKsN'"C^dO.
%j0_B1Ztd][>kZO5@<P6\``j'+/UtVLksq%LVLt4JY6O"=E]427muZe>8u;k9D,s*=71A.SShFCkQ6Z\3B%AM\r2j?\5EJ;ILN+3=
%Zq\cF4r?80d)bc]o-<*N._epr?>,:+lq%,iLf4X'l>FHo6Eaq]$fnmB[7@TdLTG/1FLM/_*667"Y-nkFp^gf@$X-R(_P79,eAC2R
%>ikPT,!p7u'3\=.>AWCmG#'SgXfNZs,V8.2cA\DT.Z#>pl]&k,dG)J%"kX6s30^Y:YUI?E4:N'o0aWYK:9O-bAi(E-[1$!A'W+'M
%o'gf<o8fGS,R1Rc#7P8TOMrA^U1p_1F,5YS3]LQa!c0&;Cp,,6Yi(8lQ"jmsaIrq-W\dDQ3V<1O#$3qK6Go@SR9$R(8T-H&=;\ZM
%ENR*<&?9Q]U6DbGViMlIGu3OR?U%ZAK5E[%r]5&4RVe[;oo>Rs^jtXKfsrYq1YCH8`1Tapp?(\L2H^<7-tWg=![&5K@K)5HL<F=`
%hCrit>p*^Q^_l4%s%=(@]@hC=8Ii_p$XLWXnU''!Bh(_h<gR*QPt!GE\PVY`Aje#c&;/ed>Jpi4loaTGR:QMYBXRUL@a5<'?O#qf
%=h6lS`Pd5?f<U$M8oG$Ri(N]Ci)P,s]8,pXS!AusD612X5nSi7Y"sRZVF?,hW)/MV;<;0BR)+M8Y6Mo(n7aN7<+))l_;;0=]T;QW
%d8Ra;9g0G2+qC+<Q'[GO^5Y95Bd,XN0&ii>dn8d3(a9&D*"BMI"nl,=qIY':%0DVo\l8-C!@,d=2FArt7,62t-=LA?N/2V,NY/k.
%Q*)5EIeV4tKd/7OdLShDnO:#I)j05]&MU,i3od%/,"H%t(t'ZleSAfX0s&Mm'iUCHmC!FFga)QY45(BP>N_':&FdDO3H.i=C?NsT
%D>_;Xm@U7ipA(%&0?ubq34jLNb^qKtp[sG#R;%^HI^%2&IkaYe8#,&!nio'oaK%pHW0W`4F::gNf2rW+c/i,&7W-K"\%FdZOc*#$
%d#%h"/VZiQJOt0Y\$CQ&CKt.ZSV3pB"p\UU2D<P%TaHZEZPo3-7L->lb>-;&>.8pq3=2:S)@=5\.8YG7(hH[l8Ff-/YKK)6dUPLM
%4H'n9dFD;3Qh9oL?S<lrIq`AG;3W,0V4"_WPg2UtJFqG)HcrI,=ug7bo?!^.-Bee0Y&i!i<C?#Z#IM)Ej/>RQF]YobpaeB#b<9jO
%^u^T`D/sn<(1%%hWT-g/emESHf!>3]oeEVVc9eW6q?u:jphnP1a[tTr@Poh_d(psK*6M%D)HsUu+<AJ,N/h3I;hoMhc@b%=Q%=L=
%QkFtkSZW4P4=Mpj!q9"-Fs'2.kp\[9dUSmE5A%%(:hp%j2oNPbUJ7e"n.Qb-e\HjB:J<e::j03]d^nZFl**FP3nY&u*@sA+%5:@#
%o#j19_..fE.6-FF=K_:M:50!prJ\6L$E%XCNa(1#0k`r=OQlN$pHooO^"0!$Usk\\TL-HG;;%r8B[ro$df\**EY:SGM(u6>\[g%\
%gr,YC?o6]X-?1(SDmG$$7EAr10Fg<[f-[26RK`:efe/t<CTTt&2*e?29VDH,=.?RCEW3(UTL)L0C-.\$m@(D"qVXH,aWGq`1O7c9
%Q;^q1b%/LqALk;jZ"lnI^hZYu"[VFaanE7X:,)_qp>12dXd``N9<ot6Ld"Fk&f%"<APRlhVP;!ZmibZ%h+gY:@_^&*&-BaUnPuc+
%)Mg`m)d1BLYIrlB/P?p-k+K!^f>[o:XL1$K,E11h;Ga_M:<Dl'*-"7&6[/8u_Z0Q$p!ot`R,9L5roAolq+<mOiR)RN9UG]R0CG2,
%roDa^SXnV#HMl1^lXsjVec3n9e]AV?2nMk'StFhdnFF?]jGueY(Dl7Agml%Po))H[rpKXZiko'T]srF#HZ=%GpYg[t+7,RM.d$<Y
%nIMe;3k743oS[kNY^=29?MbPtOEssti%HkcioK7aqWdnP6Q]\Np7(D,XoA6_7r5$ue,-20o@pV-c1V#OB-0`Q4C%aCAJB@7s3E@E
%DP!C^TTrMriEop*\2db_rTn_%r+pS&Edm\eMYuc+rqtd8N/FouYKjnmHKZ<BrpKW1.KAE(ioL#L^Z9Q75<ZQf4$UEn=DDo(s6Sh7
%qXXQ6h4NN_GKWbUaVAYhp*48Wea2;QUPo-nZ9/$UC_qTkn5$"Td?c4>c`XIK6EKB9akto*?)"@tfdjE^gSZmnAQ@lU2^_s>?dX+)
%S1Qn/='0)"?9QU54Nco_5+q[P2p4<dMQr%?Pl:R&(K94/b,o=AY:e,gDk9'UHZJZLm4nd9g+K_c*T$9<o>'WrG*@4Ee%[MJPOH-F
%XJ#TSNrKd2jRBItI_0NR]l2MnYIg%`s65G[lapT?c&4jdT3fa`/JhFd\pk[V?>XT.j8;XJ2#ZTS2LO4)q9-roMgTMi'r7XkV)SG1
%ZM3$XUIHp:htd:ZUUb;`0c\n=Q?r(uF*:2d[/4eI;dB-;L]8URgP<B]09MeCikAu:4]Da@:\Q=N^ZS4j2c[!(DpSE9]knSNW);,[
%Zd^I&I@fT1<Nfb8r9aNJ6YW`R]UPrH4i<g)he%$+,h]4i?M+]4#P_!:!R\4aR"-1sRUt%0e)B]EO\X`IrH5lDrOYb%2n9\G3`LC3
%a$I7#hL5<CnC'V6l(@#.c[gFG`hY6iOa1n\arD;A_"uKU)r)C#1,!DZh(87<'\]qHk=/,S:#d=^d[2r9bG>P)7Ag*]oiH2X(nA%s
%]C-@cBoCbop.$K+%@CntbLeLbKfV5*l2LNB:VH-IHYLNJjd0Rnm:G^1%QpVEUdd(<'(W^5_hU?k;NaK@eFB/AN0\*0iN?kRd3"u[
%]&e<pd5Y7qmGh\Vq45PeV]@/,IqVb1qHs)K:R9bN'2S@qSX2'VZaF&O@AJYLWT*l(RTN(7bl<W:5@M\)?b-BQ<WA%ZG']kPj)!PF
%<Tc_hPtege^QBm3,%RcK#W[@@+^A=KpF!Vma?TO_ZH<,ldg^Q[$+Olnb0qbU9%?L<1^2:5#r+4rJrE6a`QB$4s"rqjn"hU%0$X6B
%4sh*'BT)$)qgmuVol%.8o,Qc7g]^i]pkKl2HH>`@(!A*aAY)pqbK)Y&RM!2N05\]fhNYVLAN@%\^\`<pT1:"&e(+,`Y4u@I5@;"[
%o_eO<#>=*C+kln]d>&g7hOT.=L-L04FFEuEqYodUYKef"Mgis\`b!nf![@S.3^AW$m*LeW^H4ISj3)rEn]C1ol26I/lT^uSoI#4i
%q;RSW/\<F!9r^jUY4"P942&@R^.c9&O&AZ@[X2<K2OA[&W':*rmdG@\G)n".A8qME*Ii5+pQ'J>dP<f/QD<R;Fanl75VqOEI]Mnn
%q\o.LbCB#e?<R\b]W?Y>j+"d+qrLml=._U):9ETK*aSN^13)aM:6mb4He.H#18@%[E:dk&h#3^DiUYn+Z$Z#pL]T'8l>uk!C\B_,
%`P6gKI)s&mF+&M^C6/4Oh`jrr+6T;H_t!X!fs4'VBX5;%T:_`]h<io$F@\:_7jcAA]A*`!ES(9QOT5=TMabt4+29>4+M?N%n09"#
%`8aG*hK06+njC.#Fs7b$D?K``NU?'*_`&Lg7j%a$cY'0M<!E7's)rJ]?4j?`:>aCD04.u:kt=D)q$+YO#p5ODnXFBhT.W4Ih8A-J
%?<qaEGMrVm-FQ3Fk\e\<4^3AWZ:pD<rTW\0NuuFfd!k`aUPjU4^+:)Nj`0e^jS[!F!HQ^oMO\B^4T>!>jSf\Qj:PVqr4DR4Mc\ai
%Q>_.oG-W[3P@qAV(\`,d=(f"O1deSIiQLO+&pPtTPH3.c=+]c8]Cdhk3a;XDr+bp!7H%TSJu/D$C[R;A__#Y9"F]+JlbE7dlV/J"
%mq:)GRIkqT]q7l7C*nAp-fGST1&R=Jj7g$nO3diHEc^gc]1m]sIK.9QB31SilBf![li-hUp>N+\"^ZDJZH_D&r%C/DhR9TMG:+3-
%rT<hEm`Tfh5G<=%2K1V;,:,)QU3?.iTe.V(_hZbQ2rsKV4Q>nGoq=^g3f_u1K=$t$$%.XimJ@Q0S2a/qmVgBg!V/7_rQ-'Db:jrB
%hcu`.ghq&SdcfEjpELCI`qpA$[dJ'@F2.ObQ;8X'ATn&.cJo.53T&<Rg'#UY."L2"*QHs]M@:`d%T>mKqX:f+^.ZcaCL;C7m<e4f
%j/9Y[!fM5OHhUGoMS9H/lLIF45)7I?:[[[(cEF0to_ZlVnI)Y&S=WuUI.?^>p%N*sGLqM5]%JYe3k`8=]=u%*h*^51/,HqbX5eia
%lD7[6d;/D`UJT[ZJD2%0L?9Y:rIcf#n#[VfEkD8"ajo4hmH)G+bK>*#[`eCfP+O_*!6C=a^HC_;-D2*)YIa[.U1>p"7u=V<GBHEj
%?'L1q)[lK?XKYjdR(AI]SWp"F1RE@?;>b<YVru$'g#.AD\*TRaSp[c[V=Qjmj:s'8"[hr8:[Z!oDgG*`]p@Y1OIUCThQH>9LHWA$
%BJY+oIr@I5K\j@#r9M'U*dA+mi=ED1GD+HEnlrd1V_YI1qBskJlTa11Q[>.&^L#3Va8^:)pL;[obDYu8GKd!&-'=cEo%e_$7`D#!
%T)1`i:;4;h2giG+S3:PrD*;R]Hn3t<pY*(J:tsicDtaKRgW#/.[_3P3jq$1Sp/'MlO1fB@H4]WXI&Zr3^+sjtnEnb)Nlre-&AF^A
%]+a5t>C1Y:D<;Wnf.V<>IsLV_qG3U8bU8b'DCE<jk)QSq&)V'ob.[5Fk!3j6na3La\#1$$X,GrCMgHQPq5X)Riedu'6Ak.kp#>%s
%A9Atpkk%BC[l7P7&"q:kbo^#kOV]D.2_,p+!/^K7\VZh@];>SWo/@*gGfO,2>J-@#(?hG6)R'$1'^d%+G5UYX.fJb>\3HS^,u@"?
%CVW#aM;B`7m`0MK&cDj]1A8LZ4R&j;*c^jYG16Ke\%gcN]@>a;qC]GIhV>:4s."T/Q]j'\H^om6gthJ#fA>0j)hALRI*?;QF*@*$
%jmj5E[>IQ%T7:jh/pLj%hXPCWgB.KVfX@`U9DO@rPQ&2>rL_/;I/LIg&mOVk<4b3+HT--/pBZEoQ*:#RVdJ>O>b40X`AIH)jo=3/
%=8[_6aKGRM`;0KJ&lI5ZjaT@3Z#f>0b!Y:TI1bB6R:!3@X/Y@GqS1>DL^<MKIf+*Ma$8)F;of"P)HDL_MM,p<[eD"-I.0+?S%Wh2
%_Y^C'Za8I@c>W0SaV(uL-"m$*/bI5MX8B5]MjJ\3[q/q@6;3g:@)'<6%:AX2\@G2n`VS\b=nQ\$_S1tX/$^3BDqZTj$J$;Vq]B"a
%`</`grbnbUs-Bqq9]Zc*4Ndf&nP+"(+GJE>&%,XlF?kCjmbql_IdS!G]#MuRHa-EDd^OA*purlfT3e%X5Mr$eS3AsFH?+=\G4GRQ
%I'Z?*O6J?CA!"e2h(b%1H+goIIH/@k;0ib-rBBu2cgIEr>jYjfgteK-^Pt4fG9N""^LeV[RlDKrSrdBqWP?$Y=djFn8hU;9@'^@Y
%T"<i!*]oOJ@eVBF%5F#Z/Q^R@(FNS5^[h7!+.k[mYKrN&oCLcfM8em_/cBW8lWrZ>A,bKnLCQH:?[?0Fm_uS8qCa;(p03KKHp;l5
%E:@t&*ZV<SI^It*dBYXLs7<O9X8`WKEpr$q^Z@oDo<XYXh;A4hh%pkTVseJnmu"7=Vu5OY].cE/429GHmB;jh2^e@<iD6_<_.tNn
%6JdXmZkLXVdhMC8c)k:/Y(Q#Sn!$pd7-P]a)GB=q.?WY775+\.Vo4X,F<@AamtEOMq9Ybr8i]aRI[b$CT?<"=J+N#=l%P>%;pF[7
%]3kodqpYEiFF(^N(7-,b`q'PAKTAa4&J?0<0%\pCfTqFb's8#G"ui<$3D.<.8fik&0n88:_(:h,omQJTK7!=\c>V"rDKf16k;Tl^
%ZTHjKh[,Ul+"HX9p!&62]!a01T1heNbs(mY<qG0Ko:!;4^FdEKci<^j5FgNdrPqPEmbm.N:sQPn'6#r$%d2jKjjis`//-nke+nE<
%_E!ah&t_@7,\_>umd\&?G4sp6J%[l<ip8lXGNSJLgIHV-8"ZBI,u5t,&EP)8]A7Cl9iV,a1fuO_:&*W555NJ$c0jd;K#?J'"mN&6
%1)fmd..;WV%mKnBO3_cj/,,)PpQWTor[:t$"[9IW\QUWCU1O([Maf51/c6Jne:0iX*@7N_l[llY%S(ES>Y`&Jf95$`?S?i>']o`R
%\lZ#].&k7$YLCq`[-U8[-$5SUI2(']>Q4FW;_-B!N^E(2$@2*dem$o3ficGqK'93#VK/,TFY9R4Pubm!ZY<]llR!\Djc?H+.TES;
%ohcTT<2YRQn<qEA^m\>Y[$N7j-.^VbWd-)'mO6Yl/mqsR>*dai0sS0@d9UlI.1KAqeG^q8/gk!ZHS)KDisP_H+%fg]=egRcYKPY`
%1@;4+k$QLX5,Lh#$O>sS`S>HTL]#CR1GkoinZ'?IJi.p<^5S;],dj6(ag3DF+s$p7>P,%s^_FWV=So)"$ZI;+<7q&&=%&[F4KVlN
%nY[a9GLoo/]21kgc0`i<efssAQps9.EDpQ/TkDEGjS8\oPcTKM=T2_haF=*R=6S9i9mRk1FEM_LErY=Ya^=IS?71>4r<#pe/J;c8
%J&J@I-j]#I_HldP8uCVGo4,p+X;Pq`kP'&nWE3f2r_2JK.sc:e3IZI"I=M+Td`"l.DO7nSri36ZQ<.@j\%H/6.mMeY-[53A4aE=L
%"$\cDG[kfCRF8dch!NuI"D'(-5Q:WWl'GcGjB;6r^Rg<m0,`FH++O.7Dh%N'Dh#;*XmV4Rp/WsFdAJ)@eHImrDj#_Iq#'i's$AVA
%k</Otg[`VWn_,!Mp)HD$*_`$,Ak@68V/T'@^5YK!GnmeC&c7#EUgP7&;0.]dk1[nipMCO/HRF=>r9MO=f,(7FIoGm3BM\DREZN5.
%>bBk[SmC1NioKOgdGOocL\UW*!_r\Q]a!]Xs5c2[^V,)FG4:QB^O,nAbDWF_cVI=(Q;N!PIj\*Q9@8f<Q>Z\.<4i81;lS5!cS(mI
%S6\](0Yu_OoNufL^GqFl55mdLDZB=/PFL=AT26/AdB?:tmST;2[h"]Jo:-NDRbY(Fm75kl=3I$3)BEm=IJV!jkHE>j./C1k[U%5)
%QVHZ.$i_,^>:.DRB6V,P7_H<\F6PV?r84b,r(DCr[G$+Zo'GB&FXI)<8+jp0d!u&FCG5@QJ+\H?BPQDgEZSOorieK;gREs_^HE`5
%&Y43j&prI!pt"'9;O;U+.R/VeHM`I^]u-c<&%i<g0@!@Cm!J8d(0l7@@d\384ZLHb282<Ik.A!ujJT!RqPs7:rAs?AqM/sL0<rJt
%2<E#fo.Rh*SZU41rkOMFHfq(,4hJF4:=%t,5MU[-F8c=t]=kdigY_o77da(8c\[PJeZI;Pn%do.]AD`&pG]!_+-W&d#=&0R1[9au
%_WBJ,an+ULoNge1^LKG+pZH:>Gb$9@'dcK^.5_#&8&+K(PFK0sf-`N'GGj%/f/L=Gqr6`HomC?()a#ZEc7qOgddNc1m9a"<Wk^..
%=p5uIgLl1J@@AX*beO/Rm-<m&5GfLukh"\[b\jcBh!SNgYQiKQh<[>=3?o%4nW#Hh2#e&V\GP=:nt*S0^K[^`IK/<'7F.=SSD9Ye
%D*R'iY>2r#ge(<;c.VKN]?a5in'5grs)Pu!s6L0==DpH(r9i_.lLr3=16kVL?E.uDHj:kB0tk%ZopWcY"t@,`,sSrTHa,F'jjflI
%U$l<X]N@5fpAFL\ia`bnX,c0l^\R/2pUdarhsGmgr;?!Dg%iV_h:JN"X1B=\j--MsmSCPVgO8quZhL'Ukpsr0n-[g#Z&O`;;@\^t
%S0Q=AjG46lSGU(m@Fk%q3bDl?<OF(t+UMS)^<L_jqn&`UZ+=sWFa(FZ0"BTKB\aZZXYlTN3I]NTT<:3I]:FMR<fO8C`?NjfKP'sA
%D1L*JOLN^,=k&blS]_HI*=Gj/er8P_RG0m(o`37pHiJIq#HTG"^'FTmK[YD9^TL^"Waj*[!3L/E.*]S*lg!lNnTN@H]Y(^X<em2H
%c-f\,eTBF8*r;[7`mJ4Xp-#^VVEmjGCT#&gesSU5rR5MBdg.o,@aSK57"W]KX^2fLYPmA`NV7]80GY,HrrMtG"^"H3d4sKMlr.._
%aN=V#8RnB0LhO!FUFf7>6dI1+eSF5)2\@3CM[+6qVE8$nio^m]bD\9/bX\S&mK*^A&Z0W1h:2KmOV%aulG6g"qCN\qk<pqHc2QmQ
%[goJ;Zsc+[1Br?qFm?Tr0:b+.dWDS$FE/G@O%7ub(Zp7lNa;G>j=T"e!AUEY@*4lX;o\,ahp_55&SJMOKcR10B2_ofOa`$JY;qrY
%j+W-[)q?HNHmrC5bbTfJYr\8WdHU^EOmB8Q`'<([Gk\k&!6-/H"U"YuW)i-D;=/(!7u]hec8g+K^#o6Y3SM@Wo]JXt]k4I?#"8o1
%HdeUiW7K/]]4"M;T_ue'HNR5(08cX\[I8$4$s@#Gj'<R6dPo_o0+E9!DJO.ar"sqaUu%Ul+'6a.Jf6a\j"&qsgu$6!?$--[>4:>N
%J$)'80L"@gqX:=H5\q/sK/]"AGV_<_.<D]tNr7FARYn@3i[nj.^_9qZlf0P9?EZS,Vjf:%YWX,g1$:Z-0<ppBJ#&'ZC"$qYHJ78M
%-e3'gm[O=,C>lQdh/:O>F2'cUk_=c?AM7$%H8^CVP6AX(G(0ZKV+':!mpGjM<?&#hX0UYT-DS_9NhIQ;)P7cm<:5b.Ta>I;eUsnY
%B7p<cS.rU<f^.@1?B"X6E.Q6JOr\!4?$5@BY_ep]Wf9ppefrQf=GLRuqX:WF22=oa=cl7MDYOqn<jZkF^j<D;rI+08lNUF%Fa>Zs
%14ahWTk!]6@FX_u=HQsM7ct]m;:*l"=?4s>oO1S()?rhL<6s:3B"HGY.6@S$=RcOtV4!%r?`VrG^Y9/n4tS17-S;R-?df4rMEj"]
%`d(IM=k,LB'0'o`KNe=DXkbbES656P!9lb6]'[Le-e2pYpOhrWl3tJp0l;0m)<%I#CYa(TrS$Q8'>S0d^HO#\(f[PS`emP[A#diL
%qhV,dZiU(H?uD&\'+CE(if$tS6j)^U:,_5tEELu6`AMt4!.q'tBEl/&d4q=5)N.u*:*:0-.!e;H[9c(*+%Ig]p1]^^+Y""=9:Ahh
%2hB@<CYL.ui`lA^f)+eqB-!_P2<tfrD6j^LgHKC+)L_E&UmpaZm`Og:HS:rY+P)G#qSTm9m@kC$oDpRfa+[TSqE(,RJQ9EgY;K#&
%$EV`r]6&Gd;)iN&SMo@J(X8=Ujf6p^X+?Dj$@iaiC(8P6(`=4JWY70X7^Xdod9c-g\nQqLKVmm3X618A]^/SgeQpY%Sfr&CmMmnX
%)V&=]U>VL-pAfpN'ft/?!%XcNrIBm'$I,:+4Scbla3/T<^p'L7`sI:@4-MI9g&*W9^[65XjG9:Ps!C5Tl2m9*'ulS-Ap/\TB<o36
%NbIn=TC)UX9[QWg?#'s96]qM<ii'9c(A2H)8Eh2aRJ5kRp5VG'FD^G$D_'Dq4)00gDa;Cc#ZK7hrUJ$:q7T"ue)Q/^f"U<rL:(X^
%I:_sn7]<.W"T:usoeXO]$<(g"4b\I#8[J*G+$0PnY0>?)N"4.G]GL"i'AT(;l;krh@IHIdM+A;kB7:6o!bZ?=YV;?]Z-$M;&WYps
%-Q-o<Fi(<Qc<[&q=8WnA9irlbZZ%%/&-c\YKr#2d$Hh;(>641p6!EfC`:i'D6o8>]7bB4cJE2qGNur"[J]-N_8P2GY$[m#XCLnJK
%6a98"%f0Ra+JuitnGVW5!>E\83&fV?bIf8lLDZV2EDEAj&QM<.-W,Q\5nROk-r%Y7LA=6ejMaj05<0NYR/gV2_M+u6:BcO<qDOu^
%56Sn"HVb)CAA!oC-F:U(8=uAH/rEC,%i5)['M*"Ps*S"@1lEfI'uA:AaBdnu3rJF?k8`V7fp)4;Wc\/V\(r*ge"bB]lcsT5ijCsL
%p.pS-Vi-"^%#h428`mE2\.#J-&PD!#!mU"BUkikB(bPkW'l%"i2"KMg:[Y-4p.0&IWkJqWlJK#DG(9m8[OKi)K<&&Oo"F^gaTE7(
%DcH*$kF4ocn%X?2KBu^4An(j,JsT@%ds)[)-?Ad>l$#rN273UQf]G7a.jNccR&`>h5X:L`q,l.0kC3)=s.(4"c;rBpe(Jm_=CTIQ
%60W,@"XL?aGX*<n^,q=`?K\BN"\ru[9MeqP:o1r:_&iN*l6X'_a8Q7.Z3Ii^JSnMkp>3Ood2P*Vl<3F1A5,Da]\SG2cendK]7D$i
%&M'YEAXl)0,h@A@na>LE[3iCpbm)41+BSi`"8MlEl$XTU4,SI@jX9l!I9W<AG,j(XkIT=tNumnF@&L]5mb%_-]VG$3F3%/HI6/hS
%DFRq%JM]HG/#9Ddah:op5p6@TF6lnDOf6%h<Ot5Fn'"uq;EK9]fV-2\D*^b]p*!m`4l+fM!s*g8*\O$=6t=!Y`j"i"DXh,+_pkkp
%UXuKs"p_R9[X,c2,c1!X;#>.]HGR6t?j"afs6b(5oK*&g8Z2M.FCo<s1Gf]Ng88RbD"U)<U^[jhKV9<3#(+IZ/Y]2Wq1N6WO26mo
%7KuSS`@q)')rKL>7mHdUh$*[gnG_u"1+(01jc#bJr\p?]!IUd![DMhj+Sl':Ifm@*_Ih*;24%P)`qaM1il%>0_sb.&pVtrLhHXPH
%Jm.',#^pl]-B++Z]>4%:Id;L.2-A2U."G`S]Puo'c4E23rpTm_#8l4q_OFW@3_`d?rr(Xjre"9WZs2+S:#M(mOZPpCB?f!ld*__,
%?GHm?h+c;k#YPC*A#ou,KGibNnA%*l`!]$Qf^?qphaImb8`C<SGGsF:#Pr.V^;8Uhj8->E=AoZTZd98<rN8F^c(R.KFD+Wko\R2)
%1]g#Zar(F;==0hllg=p_*RNUbG`L:lIphnmgJ3-<l5f/qmlj_)ldY*XfdHZ*;Z>LZIWO\+h-E`-[W(7$;;+3?\k?jED(`$DY*44l
%dW$b/m8^mWem?+dHf\or^0GodV>H1n`D0!-=Nb#M[LT/$[=eA<_ea8D:s10D:lFk,[(p\[i^`MraXq,V+4I:DNF]MjmI(FN81_B%
%&FGmNp'1?ES^W5XL=A7;]Ph[FMWsd(le##=bo7Kq/XBm^l>:*/r-6:U\#Ep+X)lY6m@FjF&mNMqY[!D.YOWe&jf:qRpqlFK4ZckI
%ob[;lo^4nE/Yk&u#IW/fHcU)PQ63DJrUa0cR#DKtnOiC!&gLeLT7PFK0+V-!^7B+JYJ'#S#),#/Q?Rl>H)]HS%t:f'gWN["+..)`
%nG)k4J\RM"MS%-hBKi8@/EY5V$f>b1f<s`p'%9))M+4HfT>h7WdaS%^/g`1snjggb7(0=I;(f51X':p;$ZG?j7dUlhH;Bc3%c5jZ
%4I<%H^%]M/[J._TB"f;??;C/+pVYe&q9ff!IjM_@pEi@=b513e2YZ$0r^puJY%Q7fqos=bc1GA]>d(EU-U-.,X2d\LYC?jd;jU_R
%Q,ki7h@#_iln<ju),DP_q6kV?`E$r!&Bbi42\rPg8R:c%^?j]*$X7A>o9e1?Cu29#on<Y9G3_3o$eeKZ(N<%8PUkkf)r\/hs'/E!
%#&7I&%ljPsiNS]KD(LsIM;')3U>Uesl@l6+@U+>1=/*GC>NH=SYDoU25-&!\QC_5l_Mtc-W-cc8[^Je"Tt('4C%QJS\Zt#h3-qBk
%ZmH4[*Tq!D'W@8RZR5/qRK+Ge4MscCM9=mm^A(*h"r=Ep.C[Gi,?HIG,`47CrLZui[_.u/l5-Ap8aQ9tG?i4]'OT/CJ$M9LCTik&
%?Fm+"0jrifc.gY[T=E*<f=Bp^n`/o6nG]+lemH.#YN<XE.LuO7H</S&AnNrlG5h*@T0#5=h(KRGRemLO-D27E_sS&Hl-mTEAaP7)
%BM6`fg%FW<5$-PZ%*+^sJufCkk!iVMU1RKi5WQl=5pTLBD8on9kDejQ=2*"<KE<+=)s&8Oa(dAln*#i#]lHHj^9Qfi0[/4!lOO:o
%YSK<jp'rR_V`gV*Ag>]/IkJcKp<u$>UO"Gl/3[sUM)`>F%+"QH3PO!K.D.*BT;BIl\idi/+FopkEgZGr'/;<O7.mqj93YLI]Y9[-
%l?_LM/>q>3=7/42fkFeSqOXmT;TZN<[3bZ^CVLF;jf4*\"E9_[]pM$oq=L+-e[3l-go)kk1aR\d.am98jpY#-.js`WE`'Oc&mLXa
%<$XA*(TaY,;D&\q26Wg908\Y`q45\S%9gt<G?=AXKB?7LrI*A@<SsqqTo8kLX+P:=ff9\f9.BNdGP:U9%*afu5[;:cJR2Fp[A.8X
%AWUU=$b,XsB`1kd<??5dXQmXfRoWfu5-3P[MeP\pqBrSr;rreH^4R:e090QMd(]1dfPKI$AU=g:K+ZG,/HK2S?*iokF`44F)P95e
%#-cBR)9_[N$9Yk)m_!dnn"&kdjf61#)?>/mWh1j(D[Og_`@UmIfH4pqTA&NqmX2P>?E.("EEM;P6ZIT7H>\/UR$]uq-m(^NI1e-+
%SI=l!Y9p]]&s)>2bAr4h=X`]cD$a!Fb?=O?H!`a8jl)j^4KjWfj22\"(S7D$*1r0+FQ)Jm]+p0^)R@e#F#BjFX0E&+'NGM,la*N+
%W1Qp%55G%doN89!T@jDsX_ni,d`,%ML8&96b31q4bgt.A>8e$eZ4Ac(lEPTCQk`5&^1@/[?EC+r@XR32.150ak(N]Nk&&D\"s*PC
%I`S)7(N)u^1`KJL#%^_bW?]@$-dUCOml'NL:A`dFO*-1=`&CS$gO(6XR,cX7m3CZ/fs3=m=qJpss+4*]hDA2K5C%'=$E)mgNPF+o
%*"#0?JAB0OC.>\c>"=cHNm6iln?e16D&L(?l<Tr]7T5(j)*rAo/`?^4(4MqLgNM;U[:=%cppMWfaQC3=#Wl4eX^Ob"1<(P8dQX.9
%Se9#E.GH34YlhN5+nrbR%'/C)(PYlpB\Fuk:lHl0X8ZU:d9I:(Y]SAH_c=PoRZr[##'O4TA!=q^];X/36Z.5?,j,c)&:^F#l.+r!
%A"kq(CLM)HW%3cS&<hZ0)(:#`,>F4Ib<TMVJA.$JE,@_BLCkq)e,0<JF@.!uC-g8B$?1MmCeWQ8f8Lj7A/\E*L3sa;Y[+Spik(O%
%oWkL/+\r3!^ugE6%STW9k&ci\<Ttn0SccAFf`<V&+'5m'UnaHOBkoVP4ZM(WcLqJ4qbgq6TV3C1`9gQLePJ0rVsF9F4h"PKh,SnJ
%0sD;:b2oOdkSn7LX2W]?au7_4%DA=sKO7K6_bom1ESt?DVA;a)"l0g!<Mt_:Yh@9Kri)/Eqd(]cR_>j#E_/@I)(eBb^HF".,T(+[
%LbHJp+agib(kl28?7s8KTT(=Z3mF4LZd!XEpO'SYb:-M:%r9.tc01nF1,edZqrEdTGd`/L!ENP"LK5=MNRhjriUZZn@V`Ank-3=*
%>r9i%o$Wf-DJI57.N%./`-Qk!9h!%8SF-"+/u5nmX)55_^m*4,pRX.P.=kd,-T6bMEj<mP\NP3Iri'k0_3tR&^%3V[ObKF72!/.I
%#98)>3rWYZ`NpIi5[F)qd[dR7CX''/B=8$iolSE^ZZYDK4<l3MR*U7q4@`kpk4@*BEs`=e\aEmuh#\qT\W,-KX4L!bXcq"Pg9#?S
%mG&NPo?&g2a@`#MSeJO_b9krt^uf@YJLtKfFLJ0AnKlqhgXqK!"4&W0T*>=$[uQB3cWCSANmeG8kIHqeX,^ta0FD!?lb!,@9B!Sa
%XqY4uq=hb\?"!p!GkaDXm?fnH<-b$a_a4$TRHpD\pi)Z9Q]A4D/M!g,`2TBHq?_AM?ge'V8dSgg`JB*"?@PG&YJ@j8KjA3_LGuKn
%EAtXrQ\KdG:L<ZFHiG5uqf2qRT@;Ed;q<<(h9eYg?#@D9I7cDuHcuXj<O;#g2tMRsDc$nKf$K1pS3*o25KXqAboUj'lpXld^4bQV
%k&)t='O(='lI$(;@!Ms`G.P.M@YEYkpV5&F@7OqD553^E*8*_N,nI]EVlcep5a@B@Wse%;p[D=Al!N/CDbY'gm,_#=Z7!N3c.A(p
%%o/220+$a!%p'hs6NJ@<eg]r$gXgrpVl<q/E,eaT4hi=O/Z$YV*>@rnK?A&n\PnOW=5IrWpUIob:BBW'Njpm$aj&T<c?\16JI"kc
%WE>Kjk?dqXVm]p;L0)3c?[HE\qXp[kRfrAY?G(BK/Rp/.h!;(+:\Ml^-K93>j:@j=9G`Vh5EM0+[dn`',.*KMF)=]D`Eh<RWAesD
%B#.CI*c]aa-!$:tOap&HTCS&rbJh<5PV8O'eXp<J/7t:0"Y*LQ0^4P6:O:[A)oKl^_2/KpbksrQWHQAE@T#e!nQPR`]Q/'K+F.Pb
%$[cl)CeUJehd#9gWepW$ZdKlP?Q]!e(rp6kP?0*7QgU/`!M<\EG0+UN!urgK:00@$f3*_aoefKL5@5n+QSM'1Q>^Q^/%4F4rHbeT
%.^"SXVV,^(YCE!GJ(^g9B%O1@=1N)9FZ$'\]WTm$'uL9gV/4)V]p(\`FeaA=PtjsElLLsqj>3Hp*'ca_LZcY!:%kEn^L-*oWO5dY
%;Jm2G7oYfjcc])l996<63>le[3@kTM2_:iPR]5Z-dDr.Z]]!0GoB#FmiEeIc%T5OSlQng'dp]McZOjHkk\QdY[*K>Ze<7#BK<VC,
%YD(T[f6U136r*gR+:,uRB!3TH)rJA05U',Q\T7T6;+]*C1XQVG*1,lHPL2ZB_fAEAGtD?>0ep`,0]P-GLH^P!BM(fR)l7lC[d/Jb
%TM,FHDBq4',^6n%g<Zqb]/K''^kb<t-+j.qE<9FB3o`;pa$EMXl^p:O2jEO^H:8LJQ4e"MU\::_Q(CpXD%JK"l-a)/r$6L[1585R
%6W$01:%#,jd:nrQX^"p77tjUmIUZm4lo"JCLnW,s:R8Ei@F^k,bKHmC!DbG^Oc"=?Q/g1`jKH-.<UT6e(/TF+f:"fqC/Y^7G[gKl
%>mLN(Ek2.:h:V!.JVC4AV;"K<ei$Sq=dTF4C;"60!I"_$Gjarq.S!Q(mlW+7DsQ!Yro0uNf\F(ZWFpGOB<G4YWVY9u#c#O4DZ;29
%kir.EA`4-.r=HL#fC>0n]2lsE%5lJbcSO2oK#Yq'#)L?a[81k5G#I#:rTe[c+KtOD0,r[*(OE"fp+Ee&^4=R:UY2:,7a!OMnh?ul
%]<;uOA`Tlb%c^_=<a$5T^u*o`A)-KXA](=dd;]@2>9._NVlcfec/(q\Ag=:ih(Nl.qg0ug4.Gu-i5QSl2#a(.\_F^ASI_bg6W$cW
%\Pf3-`TPttbti,>X%b0ihTf_Ra82i;3)&4\@#@0?is:"$7++aA0?%fT2u*`s_/a^/o<Se6^TArCo9gGe,lZ<=:oZ^SC""7BG\OCh
%)`>6UeoSkJ46>7#BCdQ"n#k:,5gX3F1(\9g'VFq8.uUY:.#-N?ZFE^IbD"^RE0tZSHX3o(U8\>G2AHV3!(M56qknJ<qF>K"g1qD(
%o$'qS2TstocEgT9S)i)jV7kk]Xot33bL>T5YSKEDo$5-jmUWSB>^Ue2=Vr7B0V1@mSgplQbYbg5V*XNsTs0m\hHBe+Dj24>0U*Ig
%mHMj33;[)223"[(b;J8S@&(73:_h1Dc7*\p5C2`*%i5uj<Q$lK]`@HZFI;o"<\9eXEtq6>T.99s?8(;p<@6TU[Pf2iF/Q(,90AhL
%5UD8R];^_JW/]&l3S[cro'LVpR5m,oC81eF&ZsN?V;gppHQCWrd)YK&XjNn1T?=]fX^qsa!KJ0/MTOnNVJ-Wj%P=?&0N5e-AZ=1H
%<uulIU-8'jTQ]:%p$0lKf`@Y>Y.o?9/V-puU#boccG0<'qdK"`0;X4]VnL"tdhL0g]3i<&-'"<*q6p-e$IUB3%a0QmrC%R6S.6P7
%._F(\YDeS!eG:/MmYp1T0V6>4\M?E,D&]ueg-)b3Bd0@L@CJ[+)7Kj:[)7)RQ+l6]-f7[cgA-ejPAG6JGrdAA`T(O*l.t];Fgm*P
%76%a@?k8I.*e9VNn*0N]RXcS[&lA"q;(a]>GWVDN)\.\KH8=/cZVb!iHE7Y#c]>pZJ9P3CA4LK![XFW,YBO?@Mal?8?&UMnSa'A:
%W7\jR$'ATP?S(%MbIOI_m)DdDmAPEI!4"Vg!U!)jC!D=oVIa1V7L?TZ9/h(gSQX[Z0<TFe?t8BnV]1uk5UB;[Qe"?-a.(mtPdUAX
%;GO:b#;"0\XBPL]`&9+4DqM2<B%&XeEAbJ)$r>3P!T"VaoNRW%gt(>K%B3%(g,BGGPGQ302YEr`:ru>k<ib)0KZIF6?f`TdrESOQ
%G]dP==A6lu:DR_Tbfn^q'(#^VgVV_$`_SU=P3oCmp4jZdTqNl!]RC&)VGX:?(0BBL%<Y#h[7[n]]-YXs8!V@c90"YlZeV4>do,FU
%1ls3L!V=F8>(,8LP`*F!*a*u_JnS;A4o*ADU9;4ns'4GP7:HIZF7o<sD5/4iNWNc3h4DpTjcsk`e6FMUrGqhEiV6S^-telN<=<sd
%!&<D-ccXhbb,<L&8Pm\cD]G")&,@W\(.MNFJ@1LZhS2Fae\,Gj\oe2k[^B&EH0RRTotUBd=2>2gCNGl3#E&^3<F3INjmD'No(E\]
%i[8Z:dV4)*NpkOWP`(`;L@D#Zj5[>!50;ejoS!C=4BB/=/!iIR3@<Tm#O7abho#$5mH\udV=Tck08?Al)JKIH@8p4I="D11pG'.,
%]:t:.T4C3d0q<aCNd&FA/gg>Db>67'290qW/QPLbi.e3M(SWWk+8,46[XEE="C+Igm\6a]Eh/hO`^B0\J<;*a_63..Y3jal%nEZJ
%G!#7ES:Z?@=C//Kauc7s(2KSHBqS4#Y85U+]u5M=+1XO:/2c_7-@2f'NO#b`-/A9niX9tBiGcCkW+]<rVM8bL4Fn>`/qJOJeT.3c
%X#ugllUQosf$P>WX5CNh^A.3o+>>t+kR@*lP9s,`qZ\V'+alte02%R_mO7u`*F7)H'kQk4<N2j5DM:tFQ-[*k2f"?JlW"I-]7Y#k
%k4ul@oPV4(=DdsM\]*&WH'.3%@?h(]isY4iRu;Rrh2j?tr81^ZhOQIlYXnM<A)O'#WMA44?+!.)3U>]sH)#S'SZdoZ\2AVM%'QNb
%^I9OZgKrkWlBp4eMk@5Jk:NjIFIo>$>PcY)a68/Cf0g(Xd+@YSlFG]D3&b'JSYoM^fA!<R=5&u_p&+F?BeGbMjr`0`q+Ij"cl<,F
%_:HANi'BI"#.Ue*8pt[kh2M"8QUr/(d`1P*]!u#dj?XT]I%jE;#&&%`AUP:+RqKlJFLbWSM'h+DG+sg_3YkFR2=I82TmRo@n+:$?
%=E'H>%s6`"S)'Gdb1f2:lE4rF@ENq(`ft7OH/l*k]kpqG3n'FFi32b?=;=qF?RpV-Kt)R6as4]YVe$j/B%FT_^M5I.2G@peU.\Bk
%kT?8LC)-8RIGk?Y<nbpoVJ%U[T\o(;pMYBhlR0_X7QQUZ>\R"OKah8Fn"o?ZK;@\'&$PdLha&"9,89_h[,-/R,es\/%;QAuP[@S'
%kdD#7#44'+.XAcpGIC8smn;9*3!p*FX^!7))om_?KD(&GC[os-7eGAL:p/#ZDtja@/1bQ%003OIa',=/H`gVuT6dY^^>*"P*PW\f
%Gn+"\kT%):2<]aK?/@Z)%fHBTdCX<&HT:63(jIS&=(4iE/424m1Ua2sMm3)uYU@W;Y$I<mC8FXW!]AM$c9WOu&!urFT0_)#jGW/9
%Ai+0HAfLFu<B]mn<6`(G07+5@&RFYof+NN#5u6!#(ra;JZ*j:l[r-G_605S@ja=,g4fGaYOP!\8ZE9?X[R[r5P8A\4iM"kr>^??+
%mk^oJ&<etsgLnm&-c"e`Vcraul[38`F6T@jG2YGpj]&ka"7ON5.[kfrK9kpibCF)G!7.k@Qa96bnESZ!4&95ScYAf!6.N,bd"C/L
%#@l,M<8=n085,;tl.aUiNj[a+\V%(aeU,[!q4VtNe'L2^4`7`P7YARl3/?<cs)aGgKAIoao7N[/pRqECj$C5g*VC<bp8,@t^?`D^
%o0]ANlo/U?]At#Umm.I^$e=Cgl8f@mM7M5aq7,,P*V;,DHKt>9HH9Bg[e!gX7Ue&f.<1X'H3I(Eh^5Cb^4UmY<tFjcKAJ-66gZm"
%K-H>dep;H.rj`e+8pV!Dpiubu4(tP"*Im`#1_R]7&%UlO6.$XejU6P:H>pI]2/'1;PZfaFXc"\^U.ORL-'8Ck`;&'aT]5$)CV?ED
%i,I'(fV$9SnXmkMFVY2;m(!<pXEAED`h8t#l=a#PaZ+,'j_gZHEZoqMmlD?))-8l1X5KYMELD-;>5T/f:LMPd^^]-ukp&oTikE?(
%8J`m^DC,dp,VH57p78:hQ.XTHmVpOspn15qIe./a#6s"BNWt278=^Caa)>drgM<^$(P"_2S#&n=kk<!3JJ5]#Yodm)P,Y*@SJ:Et
%Ku$hi=So6?g;Wj]iDNWkIW`?=8h3.`>B7pUCCcNcn9srZaXs@D:$s,S$M8b:L#6ch#A;eShq&ild+h^8^(MdM(:_9GQ0-]0`#Ud[
%chtL@ET`&%J^;r[,^4^J&2bTmnNG,sZ\NP8Y;1;6rCM?ch2$*b@8o+uNlr7'DMPj:Li0NeDF0NSp:/;te@+8d"7Bo$cZspbLts(k
%=%]IMfD:04>u2X@^4(#3f=.eE?gh"_iSu4u6>ZS3c95L8Mgf$>glq<)qg<hWn`eSPH1]VjZ!*[LT7oY)f(B21^[tY%qg-QVT?cp$
%6EJSnO$88AT@V7%roR^?anr.:pg%1_(u0Fe(&B<*jd!M("(K.<<d_s`4Vpi]A@L2m2fB?6mHB;3pL3r&8?JK:/Za3'R`K^L7ja""
%(7:=K6b\`hb\Q=RN(_'9gu`,"b[@tXY&::!`S9rX[<Pp084+7r0'(K@66VuS:Y>'@k?+4U7:_A,)EY43+>/k_7sk^sRCa&Lb8b9S
%b?SZNHAJqJ#OLnj_m2ZH1@L_*'qh8r;I;Lk4)sMN]m4%3o-D9X"^3Z>5&MHAIR?c*j#s>_F6th5822$+^>*i$EVlD>anQ8Oat$RL
%28;GLC![G=44ZH"8a3ZLRnHB^UHqJd[g!RQi'm$^h&NfMVEo3/(kCf0p9dNUMk`SSioAM%K9C]P1T7U0gAUt@[kriIep?L@."M%b
%n/[b#He4p$nJT6=Ic'c:[,jNNG'&&t5:Ge*2Vldj@+6*dr!#;)6`#LEUbP"1A`3BQa6n<+>S#A[FFW4Q0+r?U>WH4M)8?^m'W9j/
%6+H#"f[@reKolatF>V!B9ZW)<LOk1_5'aslXafd*juC-qJ_IM1drXLf]/[.ZE!cg&;?nRN)#:p9_ZM7SaYEK"DWm?kbr#\b[['cY
%l`No]>i);/]lJ)o5F5j!5IG9r7a-&UF@<]:rN=5.*r6TjK<n9tWt[Ah8KN$lFI6BPZK'=>!!<T;J@=8U5sCodCDC@S&"quA[l^%C
%f9E?d5#Y(>aJ0%@B0qjWEqg6nLV?"qJXl]oejjni\NYp!ZPB'"m3pu-55OGY_Z#*-HoThEoYPn@i6uYqS34,]][k]>2L31=7:HpS
%E'5p%Yf=;l[2>G\6Za(Nfdf!e(Yh`WdaXZ'^$tVPP:4J)48E7d+?p0,_bgn8jE5>E?o_@c\hh?PDN\:u(]+3`qPW,.&h]qglbMZ,
%#674e^@T"C7!Rr*]:7k(GW*LnkoU"Nj;@Qcb0p6"e;J>D;^F5*4I3G#miONfd^cl,91pji!&R030%"Bai?9(kEol@tnuA#.Wk=Jm
%Z,F'HT3$d9_J?VImT%jf+[g62YO!ns*'<b&/uAGSAh(UkJE<bCo!*2MA@^:L,%KPkKuqP*na*@6p[&<2Iq!%c]&UD4FB99-K%CtK
%96Xrh'CGYE*V-:Cd.Im4(/KgKd),2kL$H(On1`)T:YJYCa-\u11lpZ$XDc#Z),GEtQH[C/8_IaBn3P]1R<pBYmsGmrHqNZ?V?8ld
%Yb3S1I`AhW;sOU.>2!s`\+F,nU[#(`lb8uX&40kh[Rm`]S$0C,;pbM)T\-@8[Dh5JLBd(<5D@OW55"+b?u=KT1aW#:T@]llr2m]r
%/M!sV9V)l3I@p@fn"`En,M`9H/pcn,e+njF/d1X9D?$+U?&8HcEIKjN\5r"]ibsnZq:J4'no$Q.#o$HB^lt\blt-"UqTg9B6*Haf
%@P;NegHU:WMk`uS0uL2+qI'S45;'iRaBq1.1*P!rVpLH2GJ]i$%KUG,@lnpiZ4g-Pp='da6(dau7$TiYb-=0jTtKBCA$7uRiqiYj
%o['kh`oI_t#5\el4Jfra$3=q1`"YO4KH"&c'<N&-M+lh/k!T8m9:UkNg3iI`#S=Z]h%@L^KV?tG]VXauWuiJO!)"Nr[NQYR3l?ct
%2CY*CaINdHq:Gj':b)_0@`1!O_l[@"h*_3(KMuC!4B>\e1a5q5;D,puP!/.rV8:"OHTs%`fU[m#0HJ0H_U84s1Ou.k7:O-O+L+$:
%cu"$cV^Ya=`Jq8h])6`a38dm0+6BKQ(Q%tSi*1GX%'n!kii1`53%_i^J/'Ka/`/uV?j2b(0/=A,fh(2fE>&<*F-=%oOlk\0Z?o-\
%`O5O;)1;fuHVRq73/Y58eu76`pQr`V!\>uLEYolrJu/"\1G;JX^8rC0cM7;X*53Uf>h"85&?CZk4#lqAPfq@r$UP<R.93;?qeYkN
%6RP*BK-_-G0_0=W8#O,A`qf?14Z6WJ^u9!HWm]X;-\IO2D0W2%m>G'PBB!H%]"@Fm1NV!fACta+n@lUhIkg0O;;?@'6>qgeCVmeY
%,;D/&]kh%lY(XU^81Y%q]DHL9pBs)j4,os>hCeVQ\"K*&b1@HN!;9"@c,'HOmK6j%U<XE+PBC#]N`4=#@WEl&Fr<bU=LK6h_I!Hp
%MgILsD&-JL]":-:5+h>]#YTpjm<RgSb=g^j`eB.QTso/"]nGma6>'%6oN+-mM2%YA(XMdYpMD3?X&#@6=nV(!i5sI?PF-eWNbDY'
%TB)WG.Q-M1Big%QI*U$cTsT_s-P\-^j8.n\2=(VOfIrHd?I7B,iau_&ililJT"u<DB7.FdCb?$^;#=]djppBa@(OE0/rg-ICGn&q
%*BuFs8%T&Md3>iG;`ml,s+[9l`3?R43^JA#]K"W0RM,In`BU#D4G`am78qUJ/+t+la!UMD$9K36OTYFd_`fEn-KBt-E#cR(FV:/j
%(4#3Ic4*GA>0u?@Z5jrt4LGkJd*!OH[!5X-6![=LccW/D\LPCMh%39$XdQ`F?EZ"p3QQ>eAMMlroDK5(4a,tDIdlVP1,2n(Eml=M
%H59ML=g(D0=OSr"TjE*]qabP7IR8cS\9bFW@9>aF-?[to\,q^R:3_CjEd).>*EeM$d]bW:8[tU*D>kZ29s\4h8+r4&=4?L0j%,%K
%`BVi?msf^rTbGJ`8Ak=s@/\pi6(Br9[&a+P(n\tSIUAR/r"CL`rIgJ#5uJ-fR5okTHJq30_G0HR&!hp3=D2CS)jUg<O9gr%VY05?
%L26>?Qo&'+LY2qd=ZE9-_,Th,U#N:G@2Q_Z?]4NYP=5;l*/_^k+T5'm^f1T:mDq-6%A!Gme+N8]4S;$<G6iS!M^nf>S'&6oS\1Jc
%AO\#=T3bk0\urq=k1Ml11b!nj70loB-'j5^ohC=^P%,2Mm)6)eZl>?6ElF%WZ"noQCWDH\^%o75D4ku?WVI`2+[*Y"$6O,CSV7\.
%IKB,eY*?]lO9kZOq5"WaBp8FC;2D`KTn72#>56gmotELkaq#`69khg'Cr><FjOLZ%"oQ>Nb"nVmD!V/6CutFD'!&AmCJT&e8m,NF
%5*i6R-`-'Kk^kVSN3)31F6LiiHY:]n&=YP4/i\L/aEjF<LX(6C1P9RUn]d@e(S!d(A.-\Q6Pl7YBA"pok0PCU1[(oV_&7=XI)/Gn
%FT0sFe)ep[f>ATb^W<)VcCjdQjSD:T?#Vp5mC[J:*'..dZ:eN9r%N?6:r+bB^!8hQkf5!g_GA<;V$ZZjT^.tbI1nB5S1^\r`NR]]
%ia's2s%\<4T5Aq\lkrH65NN1Z-`;mE+&4%/H(Kj/`ru?CB[MFLj9eMr_dFL?TE"Z\e-SUhM!#+nei/mT(Nt4%T+XmK,]ZYMP5Qea
%q>#LJoLYXT5^Ea#1cJ!CG+bmS[-_AfQeoX-GVJgNJMXnr>VLuS*gB!]bsat1N?:gBql<1Z1NPuXp\,'%`&nmYDEaa:c:H$ua_nj$
%"``WL(2#gM.8A1b_ZM5.'ZA`7$,GU5)-R&!N?\Q6WNn-u>Y;qFB5op):`"kM4="A,KO@DJ'*9R,@?XC.JS3XL*+rcQ?M$PkiS5\B
%N\dTf&2i8hMs_GXmje[2d`gtZ922aKbJ[r'RkoF5)!:>t->A'1jRGACK>ln.H$kftY>r3`b(!#8G7okjh@G`RBU_mb%/fX`.m\5S
%*oEb1phB<or"#!hU<dfiVPe;L^9\+P2Qj4(gZ.0ok&2#lSu^,Z$+C%2ZUiEkMr-j;6F?c7&//\ZjN-l7FA$c`Ua+CRF_=VG9IO1i
%LO?ge)+,WXpWEi3O=b*gi.!Af1R[25Fn69WoBQluVYlFY2q[i%D;/bkgt.7;>qC[ep&-ko@&qUJ\/`KABg7sf-d"keTf1SH1(n!b
%pd@MXMOXWc@lS^Non,uK818FN9T<<e5/8p5$nb'X]:_`hr:+7BV*uRTpKn/(fY5(f4sg4Cpb>GP:-Y2mK!l@apY"m#hmdlD8gAZV
%d)W#WG^r^0Ej_IQ"Jj^FjkfN([$_-140<jBb02hHp=#g/R8]Qs,9q?441dU%ofIO>T9B(HQ/BJnEo(TIUmrKoc%4UoK.0A84>Jf7
%o5c((mEP![M8[?O[J448V&E6!ht-N^\9o)94>L8jIh4mK99\?kVkLX`1;CCrM:0bJn]5rfUgb7r0*6g_gLPS?r4R'C!#%+JB,%9)
%Q_"<+nOh,q.QPQ3l-5/;bME+gH)RF$jaEs'=X3[Lf1m\]DFHlr/`QJX)Bs=Re"u)jaSR,iB.#?L`O.NmgdO12h4O]'0X!P]0sAke
%F<Q$<h2'1!g^Ou^Y:aoJUVE)$+#8Pg-[!o>)iRSdGCiR`Y&ad3!KUK/T;+a+b+olnE+`aGo&2plf/I2'SF\;Rb_Z/^I(3PDfMqZc
%!>2>]Qk/or&ZR#FiPK-$cCPPZb8(MMc19&*3,`^1fD0B\XL.4i25\QP$bhDWYO^YrI;rl;q=!e@o&5O)>T%Or51Z]<G5`Vj*lZle
%21+R"hRY"V(5dNnLl$efKYN=<?d5-s3jB#k<&+&b`bS,eI\D4&^=Im^E>m/PH/b%bq+Zm_4-StSr))<=N]+HLf_[S/kp)cc&`6c7
%-fUBY$f+BO"Q@Gk-Hr<jOV#&s'5gMNU!B-?(=8KL=m2*Daie2Fi\.\/_XrBg?J7B9%*j;@0_Jldi@NP1p#Ac$;r-7qrQKH8"nb2A
%p,B!79r[Q+RA0^U'ENYs>i/X_&XN51eFn7J_ITInk0HAi021A8=+?R!HM*UBWE4S5Oa@'!-Q/o]I-M4t;PBFAa[jC"rZWR%qjBSl
%'slM^k+U8`S".[h+qVL^;dD[YIb>]Y148AHPMoFnXC#a0[-\s3_HBd\9SWFG;W25t$[R\0\B&3ur=;fbC_0PE`ier+KaY1:I2LQh
%;W4^d"hc;V8#^IO9!Tb\fg_Bs$5ZSpXS6-TriBhF)rWOAaVc5[4;jPNYO44!/97B8O>cNPAqQZQ"<[YsN<q/_q>MN3Wjf2nb`2KD
%EhB\6&GOgT$<r>`eK!0DHXrlfd[>V1SEY\/9F5Y6G!t0a.L($kYik7_&!-7^Lc]q$14H[1ig\lh;:(X>U+%\e'OBO%kG-/Yfi9kS
%q07qGJle_JeXV5@SRB,t1q!?/F.)>ieIY3>SPT-9G8<COT9;"`/KU#?G*:hN0Qn_Rop6IVp'4?`)0YRT]Y8Xal'$>"EZ^P4p6bCk
%PUkp^@n.f?1E4O-[$Wr.m4g$B/Ll)VC1c*u._Qd:XmU#,J@r4JkX.T:fP1''TddO8h:C<s7m;RJDl_QleZN6\fM+Vc*<>lb^8p[4
%[tc"(%(k/)k-FD6BItpUY/7=:%bg6`mOe2D)SKKS/puR:M^F(J`nOd>m4+97MMA%DbY5ZXe#OP[A7s0IKiXQ^kDqQs+mS`T:S0A^
%4h\Aj0ic_F(.7Cuga,^J9IbD1Xl!E!/e.Mbl,t(on+NX``GA4ma3'h4ns`.a$nDW2Q2M"NWPBtY^X;$YF#DE>EaIJ'a6a<l^*Mmo
%3o_5@s-N:C_J+:E\sTOKGL7bO39#b[$[h\cp.+2FY1ugoNG7E]nR1ot,I[9M=9[SR9ahOC2l/4sN(a5_2'r:4n1!UUHT@2U6VY\j
%oB\NG^;%ado0#hCdqh&uD4C>Qs"^(hbMhREl('Dqc7>7,s5qG\B%)#/JG@&2cB(c`=HJY<2sIK7l*KWOpKISDRk=])s"Kqf/!l:/
%$@eL=kHtC-L\\8m3\S+u1P:%OCqB.^*<r(Jr\Btg/!k-?cH%ZEl,Jr,gC(QAQVHYN]4:R6bh7)]@$t3*hg7r0c__XiM;=g%f@b7P
%q_sBUq5\<mY?X+!9khU`3j5]f4!FVTRkEWPpCFUp]Q37KK%S$&S7s*(>rLLAM#C1/SQ@Ea8[1M)VXpN4gIlgAPYL<_V=p8/FC)M"
%*cXe.B%)%eIX,&!1M5*]jjJFF--_`MkI!\F=R4YHl+D'$!piNdE.h!$nN2$rK5<TP>e2V5&G[=gi0;(rJF5C!B11ibIk5jm?C[s'
%N2P'K=\0^IPFe`^S+pN7MicZ3'^sRt.6M%GMs9*!o*V+o^W/91]*JWhO-a_>ENgVFoJTQo4&E`e*YNkpcK?M-WMeh.q*X,;kEH%?
%TQOiR:R]d4WNdtf*!ReP+%e7.SD8=2L6E`TMb%+&5;Q&mB[;+=aS:$l3&fJCT=K#/bkn*G?`<&2BC8+#1G[uHGJV!$j.X(fS2'Z[
%h<a[R@@k";&YG#=F>H+%LE'pc6['[Sj.E40o?r:fR)3d6\[,gXcpN"X;H<3BG9QF/"3Ic$.l-Jk@@fo3J#^^:ngO?G1U!@pSBJ67
%U=2&%+abJ>LrdJ*Z.?GJ1M=L$(2(/@h]TeTkNSMBni']coJYM.AfVRRk'/*cTVKdD7-;W>MN80WgH/I!^7oKp6&2UgG@K0BU=3PF
%dKJHHph2)(q>Vo_MR*7pN=8&G%>:0*o5U'T-7sS:qO'4=Q?r'4Gtr5p[\"ZL%0')^+$DI&\cQ/[1:I[]=SpL'O!WA+ZmM@jL%Y:N
%B+pG0,#]b9IC*$B0f,<2aRoUj*LQ$ITlQCbL1FZpojroL,W]G600=Z(2aCdc2_n<Db/I`%@!M4.0,S$>IR*tIPinaTs!%%h0mt7`
%GZ6'a1\9QXlXfco!a%Z1Q$?oUq"GF51,MG$WprhnfMmTEM$u=K(D.S^fH66Lh[=YWj]DHTKfbp^\%d6ug3DRo7Vt9K$[6#7+(p)^
%c?LdVFtsJRiGRA9npY4EO1gc:.<9?9IYb*Vl\_4J>L#P^ekU\Qc84`4AH'OG:Y>06+?g"Ph1V$bY\FZkI1'UHL.SK.k<30DTCT*s
%J9NM3mR;rUa$3+r]lJD)IMm2qrId,3I=:/*cg6Lr<tk"URkha,m%S6-N8cKsoGS7C_,RBAs%M?AC^MqFlMWJpa]"(&qkc+H,)L#Z
%ZQ>)/-OYWfYeeWAr%li>\!i(,gnD(#&6.o[[raqfd!D>$Y'fMs!?^$uoO4\6nT9R4-G$$66lH_4._u%TU_k9tF/t&gYnL1gRmAcN
%]p.+gqJGW,cTN&l2HDMT1,<^,CV:hL`5[aiS!;q?S]u+2Q0Y$BHN11?HRtuC!/O@9j-m`3$M-/E,WNj;B)3M!J3/R+;BapP#SIUl
%lJ7U6^IR<E@RuG@39^*__I1b^dbE5h0Xn6Cs(%m]7X>Toq?iJAQPL,(7;M4T>a$uCHKr`gm9@,"I&ptY:ZjfUo>6sao??%gP&ENh
%Dtoht3A#766['KdX8e*!!H79q2n,qUg$W&N>9CNHTNq<SkhLC/-%><^iAYF+&ds#@/UqXWe<ucV?[-A^jhkdo><e$Qek4>*mEBVC
%9Z&Xe]G^A$SBgqAr[@iP`Nq5Vd4Yq^+Q7:Rgm@pDXX'Ml7tW#Q4,.$Y`RQo^/B;kZTEiZSK19=`rl%pfGHK9Z6`TG(eWt(_:Oa6$
%Yu8)KIehP>5%`An*.E<3lqpp\Gq<5C:TPqY)0cBQP0lH?akZ&aC8^<YM1:MAcLS4&c]0PB2j/>o0,cgX<SMe\a[,BQdt^Zo]jc/j
%>kW.lH$W!_*hYlk2t.QgYciFK%)e+C66(-aY*D0=isDdNg2r_Abb8#]34T*kJg)@jiT(SSja/+0+Y.E[f=[P1.r@V3jqRUO)l5E'
%C_*[e@SHXnqRe?e9Q:Gte!al@[d;`$J0#n,.kJB8#J<[TAhtJIlb4O\j#YE)d\$<%9B0rfr5&\cP8o6pDM<E6#pss9*""L<r3^O3
%dN>"Mgn[%7C8UT`Q%%uLEr!a0$ZP5QCWlg$H;Zl8AZ./q:m[DM@.BJHV8'XJZ"2X41IGg#TFp%/[Y%_,5EemD_f1uHq<r.\\i;p4
%1YD4m@Vu,6cRug2@(H76e)!4Jnu7"O>uq#WbJEE@H>30@2LiClbT.;@<5;'KnWT\JX`NQ!D8JF@;kuk4UFtZQrI1Tl)sa-Pk't]C
%-uI`oWAi^BrTTp(UY&EK^Rl[7e+_+Vd@HAm;`T3-7%Fn1i0V9>SP:k<_TrU.#RPs%H]$*r1&a*CS!_AT%E*^@kD2(8-GFI>^,+Ze
%h&Mj"AnR_3TiW";fGq[tCpJNRT*6&i#EW8WrH/l`fGm0=kPoB7i:$Tcdq/W8blRHcJ_d5^?b`NuMMCt%(?!gTq;_P0,#s)S"W/#H
%QE:!a(1>c75X-2J>Sc7.F4C6^/N=.-pqhAX6'(T)q8iU(UO:pc*1XDor?H'KQGoI\aqs8q$^it:q,+jsBK49-.%a6"q\L@9S*5S'
%P=PEMF%6/q;*L%Fc2WJfq0_TL%tIU%Q[5uS2O!TaqXqIL+mt*]K6R9G?hKoVDCGO/rMI=Kl8S2.NA&QUWo#JiPfDSQ$har']jEee
%]7,33GN.t56g]R:R$s7Hq)>hq7S_sen+p0=4C@bKM#G<)IXgn%f]78TJpe-39Wha;lfVTCe%G_:qj$41qYe9Lq29Iq`pqOWWaG8]
%%,p+:qfRSW<:BYe^Zma$(,#6kI_cmX(+.B&Y2?%6Ttbm)076gS+/QSr]^"\Ck7;RkNT4<Zha]t.o<)HiX+#Qj*oH7Yh>`sgrBe9>
%2q,Bf<\L&JqMh%JrUO7/i%R+a]*Z6#f.YcSo8g;NmTmTCoTX+SQ]*9(lc29TpT!-G8`K3qoeR9U]O1@'oYUe9>^O6OpPZ,[?bG^f
%QO:`fdk*r$lh:Xk+6$S@?o;?a*oH=0&,rd/:&c9lDlsfDHB3"<]Ee23IdT#+hnJF>H$3biE(7_0ne9mQo341!_N>P%m9RI\=_Y4W
%lY#<tGu@B[+.M7q^L([7^NeAV"4:qgqT\pZ?`;"&6bLGuo?A>rH[L>4Y$\F5bEePOe%:(D\l!,*GQ!+&CA/0m^O=]epf0Nhlh+?J
%q?<o[O["0DDrRlnJ+BaLn>h#e^;ot0Dq=]1I'`BNY?1[O'6E:*Y2=nCGf$^MGh4T.3lcPVBZ>8p!rZ:+3oU$iGQ"W80i(HlOCC#\
%lPFBGe%Yar]7.S.]4&JP<R-fSX+%gg/%sg4o=$7K4Rg+2f.Zo!^Tb2lLJ*HrHe!%4Y%ZI3rIP\l=[^3pn+m28`-U`Ze%b53T+Hpa
%qM"GfL.[72I+<-r*QJ+b^Ym!5YM4VWo<-sfI6(^-Rh0KUqH^jDN*nU.L:f%520R89AcBQ_O:12t8cGmKQ]&81gU.E#!KjH)JbP3!
%`E\7X%XdQQHs!U5-\W/c3uhR`D`\5B;K5p<0LjfG(CZ+gSJ_m/>(p:$lg-d()/S[$GjXd$=PfK";AIERg.>7>C;"<I5-Yej7o4='
%ET\pBhYbG@f!g)^PA=\,lm>SXs6O^$dRT$BIAGH(o)<?c.sKh\\B:eBiXU-mT"'EVQWNUbh0S,,%n3%im_3%K(]CfZmZJNr\]`%<
%+a93_N,uJMM\YZR5(Cd>5$l!C:M8Ye3<-=0^!&V]`_Urp?7F@hhfmXu6iQtg2gj'5rFL*X'nWamAp,f)hO?UI4%K-?p@@2927g@5
%]09BIf%^#Qaa%H9l0U8b5He^[iX>-CCff&ONp@e=`JmmX4hfeB3BBiWV5%\W&si6W.p&c+DR%`FZBL:r%l*d3Z:k(C9IDuZVXc[/
%m0Q=L@@()7YN:1_[3bo6L-OJb`oB[pGEb]&XAiB6:2Ga0=g":PcZA37`ZA2A55OOt4=YKrYLK>e]7jHRV8T6SFN7t8:Jo>-4QT2%
%l4Z>Pa(:988Ja6EaiEp^hfJ^2jD@<rM7'jUr38UuYS:AgDf8'Chl$4r6mHgm:#*apdD_i'N!["@ps47CQ'5:DWQap11o2LjfP?rF
%o+JeR,I-ItcN:2Zp7iN#c(<>t'$*?Tq:,P]??iYbG[0-)G5WQ;UMVKIKL64J3q)X]f@MVLlgff>HnP"NT;K'VUAd%.\9L'PGk*&a
%a11Zk7r&jnm&[G]?C$'RpbQ@V>`5NLB?L!p+D"Y2i!4m4j7>e(1@d&aqs#0nF8K$?&&8\[5VL,F\($\j-i47Z2A<M0[Dg"[q4Wlg
%I1YtY(Ye)-h9>'bk[:U)d4!&Jp$!&H0@o8@Q-IiVR=4-g+_gg])nE8D#&#Ac6)`TeTU1?IiM$9+`8.Ven`UugLt``n+dY42Nr"2K
%FV2d=8Sk^?qK=AbHj,q4#$ggd"3,Ek)gcUq_-W9MK&Pkr:G$7$E0QPJ0lqU=.73>MJ:D!;!P^!iJFjYE\N(K-k1La9))bg39bfIl
%NMX&7n)]Ju7S3H\E8""/XB_B$f'CCcn$534"5W%2;g.Kle?G'*h3u!B\m="<:3E[:c7ZT+`SIE]?mVoCRPut3.O9nnfWZ@Qg"dBD
%g.r(\U>=<E$Nr=*AY:!3=$KG'Y`\uooc&?dA.0*L?ZUVn@!;eR]&T2*S>e^[>PbK&]2l+loTrJl(7]AmJ57D%@&)%^=i%ej$FZ)`
%pS,d%mP.]Bg35:SK,(n'e]fZ(,3+E;!GpLmcuEidW"MMfq's2]1ORr%X#[oh.<F!),URD9Q"oEYQ+MHT!,3_F3.$%Zec3RlkFGV*
%cM@9p:e][kJ@[\'k.VrS!$q]h$>EICY*j\Is/['KZWtd8?XY"H$iu\K0a@0n6p@8M.8Hr'Rdp0A8^V=\N&Y0j>h^sUZ:&-"B:SoC
%]kit_2HK@pYCG]hoA=+Cfe%0^]o<L\c5FD;B:B1nJHm1r\`H\?p<TnNOl!tQQD712g?dOX%<6B)F(G(,a1U<,jj1IY:SjtT(JBgp
%.EMCac<C>Yd@,YBD9/_127.e$#c=ok+PsT=3#V$I>-4TsS_P%5N-uLh^!4j&lWs`oLc/.)h^/e'M!I"Z8-rf65qKcQ1qREPfb?KQ
%0c2ME^&U5u:Pha1G<DEt(6a.-1!LDB.KtiVR:^"@r?l,ppO*^SSd#\TDddp5eUr">!F@COcPp?-EI8THS=^n8li>R)F$X`FG<N3K
%l8i(q<-.-0Q2(%naIIOT![%3E9>NI8Ngj7bFogmO`ed(W9R[X_qX`eq`ZLU%6/1j!."8J6eC]A1rH#/tW7gu>_Iq_@Nf,?XeWEo)
%BN'=apL:ARADB'-_"KfI52TUth+EprXprf$/=<g#mhh#0qpE+im>E4@2V>Z]R2IqmA_#?tCa8d=]"fL&)g-_XIGapEi<Rk/F!/cC
%P4Y;6a>p&J40ZD%mb:0V<`!g+54Wq7NnZgBSs(>F0U_R5(Q!G0BMBO]6TnX6npCiclLFj0F=r_9N7ThK_It?PkJe1nqZTL'bc5MP
%hr=Kh3MeCFcM<$2BD]oU['%tfr+W3P`?a#*9<l[>j4:]5Y?ZRSKVtAQ&p8pC'@8.iZ#/3Xa;=G^lIHZ:n/(pV6"!;8oFo;'M_]L9
%PgX+UJ+,7`@Qtt2/Wu%8io7tt1DB10O4dU`5hO-@NmU7Yh"S/JC"<3V&?B"WP4fD&I+.qR[XWPXI'GkSN_r]4]5Qi0,A(*JQ%Sn$
%<L0jh#.`*b5,@Ne\n`:OAP@g@LbK_='n/Y5OKa877XY.hB(^S@?rcJt*f9>BAaq%mO1+'3PWMUG.Li5)89;ocbN'U(a7PQT%!LC8
%"eCe?OZ2BTV48ptX0A>"=b*KKfdPXuU;dN,o2mH@Y<6FK\][Es<^?3ZXA1"GbN41r*EPM8RH_>+FZOtM.s/tf]&b^UrJeb7H;E5*
%OH+AH6ShJN0<Es#7nq8*:)Fij,=E2GL<WKq!HFJW)qkS:SP>pY.u*:TnTL73,Z&:sbJmoV$c2URGkXat[np8-4dl;J"4_"SZY1aS
%iSD.Tego*:NbEF_7$7)D;$BK#Ibs^)s$4EE%,tu!2Cr-W)7,f]d/6TTjtH#9B`?F`ciCfEU^`L17NW&].ZdtX!fG3@@lO".4\2oS
%b4jt#JiF"&VPQGZ;gWN]nn=Y('E/Y":Z:?Y$c?S!=j(?t\.%Kph(IC%9G;T<a.-Dlh^2N#CoNa_L$-ce'049J2fG.pCFb2qLBLgh
%1E,!\^2afUS*'Cr:hXqMHRkfsS=%kq=eF/f?;8Up-I-2JL@&%1\G-"!r]QU,X@G%V?(Sh+DKa19<iasNT0]a2(k/m,#BO[%RG<'r
%G?9udX[]5ARS,[_<O+VL*NhFXYDJ]gX*i`@Un5aMoh+;6j,Ue+GGT``;9qHKT&t(8DuO0nS%mI1$dBh#TjhHnSjC]?'hbIalf*)1
%O>"?3Q-Z"TZcu\DKtH$DSXG[n^"fahTR1GZDbD>Pln4_@b3.1I:-Zi/[Mu)q0uLePC4V1#nrL@u!n+QePh:8_X=p/&$P.Rl3sf3\
%T&b(5\'s\:[C]bVarg%?@bI*+lI"eZ_UW[E7qiqjF@EqrhNhBt[+<+3mdiO9HcuL%Mkor(TD2CUQE6QGP<U(:O$"27dcL-3;)7'W
%4&(SB>)^B](r[W<1F^>:-TSkVrl)q"W\H2,<`b]Z@`SlL+sWQSoj*VP75OiLX[A$E34g;9I^ArTq^_@NqS6S+qf\*a4@iQuA)AUg
%d"21p[]E7BH^en],SYO9R*#B$8oS=-L-Q?:1d&':_of"_6tLd=PG&G_A<p`$[$)u7N&]gb"PMHl_k3k#^?_s/K^<F$&2K1/RUK0G
%EQp>#7V\,7H9'4eP%o=[_00R8gGlm>DFL%aB]lA8S9r+F8j_B9:"e>NgY$]WpWrEto]p8[V"&I*oWl4N4ngX4$dPLi=)\V)LRn!j
%=-$\d)'QPSH9=@C*7:ZH3*C&t*cAC;h"bpZ]l`!k6#E:;O73sQn71&-D)[Mb,\D=`,eG>U<\7jm8f?XP["&q7<Q7H(/*OVEJFU!J
%]I?LVaN)cG^I7d^4(uXWKkrLEM^kW9!6&A`I4#XP(6Dm;pJ/#^J[1Im$.Ya\"0d$0_#Tc1O)[p!-:arDTTbC%_UkF(WJp*9f8k@B
%.=RmR=gC0/IFG`rAd>MoRhM#aMN]&0V5>2C-Y_tk4kfeC=$(+W3!LP5W;i[8l%@\2V@`-*I#].s1RP,HA;^LU7@)oH97peeTY-;`
%Eo3N@cs5$@8o)Fg%NTMSaE6qSKh4X@$Dn`G6?[l8<-m>.k].L=dQ'^pCPI3"hfB:$O^ktXr]TEUn79^*o^=eq?sbJZd(e``ZM'".
%./GSWLKk>*J&s]=k.9LmqY-LI0Zs/[r4-l^FJp)21%Pe9O=S`Q?ZHXEDNo*Gr73kbH4kIVqtHUJO]Z"PJ)hS)S7k2*o*<Pa/"coZ
%\UVpc`3aMr2#hpJ+e,Qls*N$7gF1jlk8^e_..Rs_3JW:&Fq+P.Z.q_HQ?+JRANiHCiQ(bZ?c]nUf@aNLX2k8'')I)1Ta<?FogfMi
%4\qpCVVTi;M8c.K]JUOLZ%Dn<DnWl7+4U;El:(J.p)aP>iP2BV`s^Uk+Ns7A`mTKc,[RFWItk'cIV%pIR/'Z-f,GF])h[n1GHLVs
%\MYqL5!6@-/^CKC)3pheo(lT2k/0>JFniCs/uC"`j&:W#bJF4]rt?8>1_,!,i7D+b1M3m6iJ\X?Sc?Qf4o"&IN_<#ds-])5%d37$
%\@Er0E#.CY3NWXo17&XHZmI6egm>-:(".sJAaRS7Umbb]k66u_?:=Frpr_Cb'hiOg#lejb`rIM?X_9\l1b[($_XILmUpR4D,!VDl
%pp:)E^ER]%k#GQR9?DK`kN+]M/SUZ(^U:GIE718FQ8Ms3TKl(!OsJ@2,4J%^3>m_8[%n)HS=Wc+Q.M]p9P]M:bjer,j)LA]^a[XA
%&]#Y[_F?jq=#h!6l%5jj<'Wf;JYWW&/)W5f)F9K<:r`PP"X]8Ca>0e@b>8FY.%8;i'c!:;7]OU(\-*k!j<^`LldUZ%mRKDlkV-p)
%J3J'i,DrLu;ir7pF';b2AVmfl2+`<">nn'-<DZ,DJO*n+KV;sZA36MP1L8M_\g9qG,$Eu?<FT-2F]Kd'r",Y:!tuGi1,PgO6/i"q
%!cVqf_J0)W'e4eV1lVJgBUm/$37\Z7Jd2Q1Bn;ImqCP@7%_k"-5XkpG8;i0T!,7S(<"_0\&lrTe;:;g"kY:#XA(t!LTDL!f"),8>
%7B-bb1+ZXp=<gQ"1b@QRK"R8tAV$ba"AQfaYX/pU6UiUL1f2Z6Wi9)CW>[8u2+aQ$S>^Eg'hK<;<2,fP<1r1d.BP)2//"7hJq-Au
%73!F"(%Dp?5TNEtW#%$;WIQ0j>(d(+DcM?/_)=DlZV8Hda\W+?<8M9joRR+4>6P9T90>)k3*p6W6j[f8E*d*?'dNiM![9/A"iPg4
%Xbm/]$HPsGnsol!jocR5<<S[RD"9eeLZ\r1:o*Ca;QhK(A5X+rVC@O6*;$AsBjObX%9*TB"]bnUNqFZj0[?UEM$b$7lo>'(<E+bS
%A'd5mbuEU$l(F1j.u86ZPR+KD:dn6[)=SaLW19:_^i=?UbVCT/<K.et$2fXDkFa&(SHbae5o`^S>T;lm'%fucJMoW03E7n"l\Ggu
%$m:g<'h&1?'`#*]M(h.+[R1$!-3>b"<mbj@j$L[6JM"j;i,;q1IINu2@KEZhCdl-7&U-W.=$dXl/-gD-"[!tl(<F9&k<p1+!RjY4
%^jpCe?m*6E6"!-5"A=FMW%(\rVuR$0%A[R8+i;[+&OMB*iDg3MLn)\8OZB(9.%m--!Y%s;)?EIpMG-HhjE'fpd:D8r@PSWgU;dNs
%9iY=8?:ROX4Ra2MlL6Ql$l0sY(54U*!`2-+!#bmu77N##JcILA!Y3m+ej99C"cTp"%AX\QV!oSo7o4.M@*K=Y.hi!*b?+`icY>uj
%E#EBn]V"j!>Y<#,"bn1!JZ^+8GiCui5Z`5I"9V1M!Y;5!#Ln;+7VZ$1jTIL$1kF0W9K!e$6\HXijf"1^M`Rnk/4nn3ab2M_+eTDP
%r<]P8lnM0E+>'kU&l1^mVqF%[QTT$bN'a6_=iG8es&>d#XJ5hi`>UMP)Te/FYspj.*P`Dh6i^C%OkcT02\LRT_"6g"/oc\k:o&n<
%2j28EN<MSfXFPqPTn)0"-:!.#M26?W#W,:VW(7+F,6/rg#]bH5$:lHk?pYJ5#^N*Q0P$a4Juf[E%\7POoa?b0LL;?tUQHilACO/4
%ACa:>SOH@L\3M^):'EmJX;=;J"G\1-i-?eM"X#Te@I,oVl4-?..Zd(#VG')k)_(,,/0`1@gd9IeA3kbji0lp2#nec86k4DIMEjEU
%<$W[q#nl`MKkDDNV\^nYPt[2KN<$LgWWQc9ZOn&r,;]EYT`DN^p`C1u!bs=h@N2]e6/1>&>@,oa\&8HD5i?m^5h'HekY3si7f7eo
%K#"]VF:Q[b+08r=!66O)-8O=GNe`>)\@P?j,(e1(,rQKG]F7"='o5rL)5G0M8KaN,PY*^35YM:6!')NtJPu\!+>r5O<!Tr;'M,$g
%@1D9re-Hd><[;)_'E[VKmXp%KLAF.M:mY;u5YJr/DaZ%G;%JY=r!LJA%3Y-?1"JnFXiV`OE2:3%1(ln5K*#O0W&O9:,E"`_\j.!9
%2jfF+9G>C+Yoo]@NPjF8&LWC9N<n%OX+2,rCI:DtO0KF*2#%2F3@HYM*FOC-@)b7%aHd)[/7X7L)9bIp=VJX:(3i$n&66`47+Bno
%L8qOS7A^tj&Z6M:JTO1+i-F#>(3OR-C4`T,F-ER4LgYkiJ-ac+MI^g%EXs[NemqIGP?8dPGH"-,,r6j"Q3.1(44+2Q=:WGi*Yh).
%[1Q@LM--Di$e//p=HO%V/SGL;g;jJf(0&ke`poM(NM77a!1q[C<?tUuJq47ged:RV]Z^d3#"V'Y*d%h7/AcjIVIY^;NDsfG:lIku
%1c=S!d;g.p*Gm,;Lk;m".Y'u:a^s!Nd]!_[)iu8U#ms3)YlY+6jNhWta9ka8i]&iV$qm%!hb>Z`-.^!I,,AK5a>X5[0PHApEC^8=
%5p!6Nd)MFR'`eC-^_-d1og)7c$=qM;)7_/aB!a:('-JZi@[b@o:.*5I$</?SEI:2`7\<@H3O'Kflo.9>@>kU(4=9/u?(Ai,0r.p(
%QQhJXH,jWV;4s"6a6Q2BA//Pu69X=S\/tNcAB[<[T`-^TU8`eOW'TtmX+Q]dR!=@O/s2#%^D-jR;OU,Wlj-HHA/iTm"_n;e;icHs
%,@Ef&.Y8iAGVXVGPWZ=(^seDc<G)2-'b0XOjJ>UP0?O;jTI-rjMIl-L-(JK)Od'i#20`UTW7#&mF+%^?!UP@c/`BD^%['"Y\1#rg
%73mRl<P[a)7EBikP>fS^l%=70P8Sqg;.)FIYEK"t-,d-_5Z1,r"KDKn&aVM`@'gGd,q5c`^`Nd8"PNt>%dFn>NWdq4K_?FRW!#U5
%@%Gel.,pY0LMd>/brJp:J4,-fU91:2W\c79W09n2_eR49PRs-,8Hh5F[BcK3_r;t?ggHV2aZs\a\ND:(VMmrZ()_cJ)i-g_%>^Yo
%R%pAGNWPIpkci1/87G_3N!R[7T!Tr_eGd6IQ'lmX)4mTD!a>iV7Rd89-%kj<<1XC=71jbo!c$f$N\$8jJ7H)T;N!XITTVpkdt2bB
%bkb1n0Qi$3YX$7$A.d`qSL5p.<^[3Y74<#X5U.'UcPD$7KO@o4\3Z*R7:n.a`W.jR9epda#jA1:!`>fYo43uh7V"'4mfiA,.,^Nl
%Caenf`[iZ]^#2AAXOCbCcll,<7mDpQS3CIIUL6PG63SbPW=9Lq1<MKh%N'5`14KsG.^(U<_ZED=X;$NpKf,#RPpEVCs.bjsd7>6c
%*>YT:+mf]))(Jf>'4&NoYs8mmr%[;igd4]/TM7(:#q9oaS#MWKJ/U+u1A5!=rtDeJqCWK0FJ43uOZK1$OT>=[;%7jn\/niB9\Lq3
%?qn[Mi3t8C.Y+c4\J9^uJaLrVP\@MhMaB-%"jDZ("[FqI^_AdW+O:jfO;tPi-mDF)bD'iN!]'4qalj]pO:<<t&a;=>if\8,8CYXT
%>``L;C)QC?<G"rn;J'M$;8>C^fP/Q4,VtK(8k>6F0/?`f'<4/M>pr%bb+nGlh4&j$,V__n:rmXq!CL@6"GY_>UK?=%`h<BK6Q$7k
%[+NK[L+4:%86o%p*>u'k,qkX7bTj!XM1_O)2]QZA)@0$>C,0k<Bo%k`@8rC/%8A0#+:]Y9m"?93jVn)2W+A3p9bRm;&OeaB!qT?i
%QL9B_5H@,`#_%ufM$8R*:dBQO!nC,QGXElE&\2.k<;\W)#[&X<Aj;`Mk]fIqOP4Yi$d_BnOfk?ML;/`Qk*Rfbr+lG0=,q,\8n!``
%-tnr&D]LBn<!es-BI_[9=@DF73p4k:#mH8BUH_Q(8_kM]+r)f720(/3$nOI1DPN69P=sR?4]"E#%r<LIQNe3+7ts&K1UF;N-7))'
%SL:7aL4_6")kiE;;N\bBaG*$T(oich.\'093r7mYWN;8$9gKVrUkOmsLi#tbe]9-TW<+_,GJ'W'-tmSi=9Vtd&h?5^/DBLPR8S9a
%QDcJSIWIUXi&()tX-u`]6([HD'Q>f7>fG&!8MadM4X_MN"`8U?<ePi:2FV3&"8kl0*nu5EKDL+MC_mq?8u<8CFHVW7^1(o:"Z.TI
%'aj;t!XO[/[1+]Z6%5eA,E\Bb$G$g@/1]e^'W?gM%7$g8S"3)b'$rPRJUVA9OcaH3')A5S/o3e"NjU#J,;UL].`fgsXYDIf(@bLZ
%B@`(e0h]C33Y^Xn)H19fdr7V:mhX#tc)aVf!""DVN?W,YWYI?TaG395P3.\c/:\,T5BDu:1)Wa+$]2nR1=Ho@NPK@%.&&SnIn-<V
%.#]6umL!E"U&r5t,+>Mc'Tn5%1,gEU7N72kB]SSX5_:!1.'bD.3d>+c/=#THBNAf-MJ.ofXAe-LfLB74H:;C/"*>Op2hqIe:U%tZ
%*T1kA:C?;I2[E&&91?((&63LfV$lW<5gbtE?&/KpZH30G5`h_hR,k!9PHT?D4b,Sq:M1"l[c'*lQ_B4/0dpFW%h$`P\VVG(P>['1
%ODtdko$enMb4+#Qqfo4SH&;$37?TmR]0IA^Y4dQ<X=l+kG92VaR9]21nK3oQU<EtC29@+=e<jE24sM*`%*kf(\c@R'11npk+9s=@
%S*hA`SKf9[B@_^TAqSm,R360$$*4TH:U,S7Olm2<+rS`mY"t?6YXXWjrI!<Q0Q\XlE?++udMZ>`-t-un_lHOlJF0RiR)fM%U8VlN
%Pt)!H@&=Yr@QFrR'$_mkEe"5EX?e>4TpegZg:n&:bg3(@Iks]3VN0ud_T!$NnV.4WXfN+K*=+'!Pt8;*-S-%S4=ecL<K^0G'b(8:
%kRNMiZ.K@Yp5j$&j)/C@!1':`9"K\-)N`6>Ad.`I+ef&U[5i7QifmHgR'Oj/<?sb+-%Mc]80"XC9[H11eJOQ1cT\=YA%&]e*E8[h
%6soMlT\?QC1B9*t5j*l41rA92+A5oNW<66f`j%!Kh]!@#`m=cKDaPTd3EoLJ<$M.nfLS9-">%geV]g[[$71t-JJbr/cLc?YiL)Bp
%ISop-AL<p-1?n!JM.c"*bc?Q?!?+o!FO[]$>R1fBRO(g-"'9$4nN-MGnam-Q;DPss"pS3U3u17;:TR#A>^*."P9hD,Y;&+)'Mp!b
%Fr%P+%k`)q0MZ"u4P@bR'6`AOB`)t(_],Ho)D7c&oM37Ko\0F7"kdD^aT^1W7+Cn^M%_rg@Rs%&C`7SOTgYYm_'2j17:ZcE/'s+J
%RpJi@d$]Cqe&Jp@O%4kF/tn_/Hk+I9:t?7@1Q6>EcV*J7+<).T)>)mWLsM(c'U6=jSLLAW@#8>FOUatmfg/ZFVGMhuVs%5JAihlE
%,A*`;e@2Xkl!:en.-Ul"6lm(6kjN?GM$%S!as^DTWK,q#"ed)qF@'G]$8`Me5`L$N$J!6=JgVEc\U/FANfF9(@mkE`:/).hP0Vi:
%=?p=:G*PE")]"Ol792Wk9TEA7BW`S-Y_kcE'ZWNo"Hru8>\E6de;Z'u`je9T+Y/m^q%E"IPYIQ)S2j]g))2R%0O%a#@*<dSJMU.[
%<eE502E<h-^uu,r!K&Ik_C[SK3HAr/TrjN$Lg-U3bc[gq>Ug;D!^&?\!bT%gc]JWH@)<@e$QU"7l((;==k$Q))-]B7?l1/&L6[]a
%%C(q'"KLF;,GM$[$\egYc8."LajcNUI]WZ,Yn=YU;pgt$p.:7b>=>nK*q&%XPGkhG$kAP=4FSJt+_+a[RiNntU]t9?)OsdB$r]3e
%_Xf2lLE\O("$<f/'HPPO'T;/tLT;PeTf"e53l7Wd))>Jp_@X=;_H.FpqM>Bg&ZS--.\Hjc):klY-es;a\?+%XQ!r4ad`LHC"TgQU
%'2pYlGpX@>X?<ONSkep30qSg2"c""ca?9E7Kc3IMW9Qpt0I;>ncdV+U"p7'9l4FHV2K<h^i/0tIr;iER<pAg@e2bDXV<J>$,9-kd
%6V^]b,E>p5BP7EQJ4O,^';IsWdo_B6BW<8I'MrTp\m]67;M>9*VFImee49rkCK2K_(JhK\JW@`!M%e0V63-aFPUCr&@?Ac^q]r[&
%;$NZ6FiS_]g6id25R"MB]&AUtfo['gSer#n10$7?81%^F`U,nk7dq7D7:uL<Cm"Dm"f#_sNDu%q`V(M($$CmMd!A-nUT$eIbquh?
%Mm=8_"Vi_\P,OHXXKhn]SaKnuSTUWgamml_-Afru'Z`51)j4Bu6P<lpjPQdX<MYXH.+j$=SJYdOe;_D(F?6&Afhi!S)B>@:#b9j&
%<UbfsN'Aj+aZ^No8IuZ)7OP>EJ!6m`7]4=\%>SPU@8a+I3lr3a)NY/<n>'bH&j%P=2MUo1;BKHMMm8u5FOga%,3bMQiUNg(b]0OO
%/<0f?BN$3(-K)@A#T6Yk[390,(/]_iTrH-":m-!(^^NAo*EPRY@f.Pp.K62p"LLKE/-,XoJo956ZG>0JJjq7)/JfgC@>.NC@Lq^W
%Jel_)A;;(*7.M$d9(\jObFI?d=F^ln/3oC'$V2jWLVk[o8nIi4SJDUWJ<Z1+,P@4nXeqMq!D/l-+dD2(*)I)D1)+7N*0%im'e%uD
%_)P5&UoJ)B,=[Fg,YbOoKI>)64r*:'[Y=('1_GH;Jk.Ub@tPJ'12d?6f8=!?b`@EGZ5L3,DHAkki.[;qMQBW4)NdC;)B$g3ST.CU
%d#;;pcqL*24T&olV%b:"ZQaG$#U0YZ6\@`K^<N=3p'2Y#;T&Vu-%mJ>22MO*Tn\Ut)X>PVbpq'!&kL>\g_?gtEe^>;d[BnsrF8A&
%7?sg+ksob-UDTs9&)pG5P(t(<AI4C&&Z_W5'KXXWL_kUn96;J9,)+o.Ijjk&'HpsYGU$+pL!m,16s(jSd>IPoN8P9ZF(>VOp3oG,
%"'1@*!ciBm*R[1:\,lY#&J@bp,LsDVh&*kRN(OXYVPA$$nHk4"OXWOb6RYi8J.*/9X\1.mHuO2U>u9;<,^hMe!]Df/</`"^80qN&
%R2q$[YB8j((oMV<#fR9nP2S@ZeBtQ9j-1Pp]-u;=8JnkR!l@:R%0E@Maj_.]L/A2UqelT>o-AZ[)iJrqX@=uq@RlJ[:DdZ`Qjh[+
%n=)G[EQ[L.V((`?e$Mk48S^CGF;XiR9Dc.u>E\'[?a0RJH"i?Kh,I]109=On"G2>EYV#2hdB%&A%=MhVcQM7tn+u%8<OjE,3%noo
%X"lIdne.(I&Wu;pC(n)8"3-h6NZW[lcK54RFoTl<HB(>u/>%"%!DBXbSA!a`>&&tjQsfVqrC2MR#W\+&3$pDTcP-VI0\S,n!u5Y<
%d%M_<c@eBI_!#+Q#1NIJUC"l?>;D_%_3/OM+`pNA"*uD=QTXRoN[V,:`6'Jq$B2-.6Z#hWR#EL+G!,>(-!JFDii@'iM=%Cap?s(J
%ZNA+m2/Q]N`*F5_;)&UaEns5t?oo$fPE3g6+u"ERqIDZA&VsBP$]lc'-PW?Om/k5[.in#]i[<[hQKqPsd#L#-F!,3cJh.K/U7gGP
%Rh=)TLce%(8g_'NB6Inf218g.lR7/[-36<OPB&Lg+*,-!8c8FP\2t9<?_ShDM;S=64RRSARG"i]MPCP"Up,8BLb:h&SS6$*`j^RV
%l"sqnMkPEP1F=`EW6?*Q(gMB.DV%i.36i&coBC^<1fdrXE'P(ZSDkRq%3:4U(NhGieun6O1HOi@U_dB4%3,`9g4W-XTATb+Dq`X-
%fD$^o'hHPB*(`4"PnRcPWsft-L-Vt4c64g0!,s?R@UZ(o_:&.26kP'f*W@PJccl[fCQ2#4,4d-Q=+=:=-f5W%Y(Mr)XE&5MisP',
%+$?Mm1s'@h]0Og(iR!Kk9p6))Uooa".Ob+C:G0NP:uq0'_1Ip5,*$R8dHj/#a;i79Un&t)0pYdpH2](?$KApC!T[)$-ZqHu?M,RL
%Tlg.#iho8K!>feuX878%cJ]d:o1R-i4(ER*g*:5M+Jja>/S1Hn8rtXV:'V#,14A@-G4!_SaOr7V<K@#]QG4*bI;K#!eO/\jADR='
%SnLa]eKu8fRg,n.hXD^_9KUH$lHbh`U]<DF8reFL^4\6)=+]Y=0?P<&]i+9Y!N@>G+a7l[:#BW?NQI`bC8t*[eXuV#L:UK+&J)'6
%ZCk\PJtH8!'*I-13htZR0P)b6VW)RDB=VO=SIl]u6]j3%i)YscjFY<?JQTf+7m.YH6]LJB0S]<7eT=NG.@6NW$,]q,*D9qs.X=Io
%gs/qY*mr1\EZiD^hMWM6?iWY$(LZ7-]3soX%C6\a(BfprPVroLm#\8[g9@1!Ir:Rhlf4V'`M3AN2AYhZJV*llO;Xrk0;;`*&8rgt
%N$*-0E!VeO8Z!If[p>1I*@s%g0*fOJ6hP)Jo$7i:Nf(u_L2k3VX3%rJX"[fWl2;lQ!<0/4m#*`$LOT1]jgKpRE7`)8i"WqkM,!YM
%4qP:n*Y14f@u!+7bAN+pqF""#U+=(Eim]7bDcTu>VWp&>5!R>qB4-gB&b.C%F3)(JBV04InWCkpIWMns-&t6;!EU>V&8<+a!MIM6
%//<J\^q5@Q<(9[B)g_[c@L@_XDlU=hOJ[0&F"iI>-+Mu:^#lF#%:W][_C3Ftb"Oi#q1+Fl@h'BlZX3]AKp^gm#:?(!?>n34RWr;&
%2Ah_Cee[..ik]nK9#)QtH;0[M=$Z+$:bc$j1hFS%9IPM6d=AY^";nKp@4b(scG[-:8G.C6XNTcko"SD%-t5M-IY8XRm>Q/OE^F8Y
%%+fBb<9F5SDg`LT5^uH]-D\eh:U=;RqAqpR]h+??s,M$@:E10qs-0nCIqQ0YDnT<]<(31ST</b]k(%aY5tOAGBi#6DVL3FN'eo4B
%D%(.3*N!Ct]gh]VgL&345=5#[j4;l!\m9,h6=g^@H?`^O,iL(GBJ#Wbr;q%$d6J?m;^3;[7Y>XNW-&8:.:7Y"[.\?lD4!%tSe5UW
%;Pq3!%+,pEh^2T3$F:a*:kZ%WTud*\-ZQr\X29G4*4(3]jp6QO-pD(Ui%n&6NC+m&$660u9_#./KApK.!X5>rN5C*VCr/f5,c6L.
%SdCT.?!rO1$4*-B.brriZCM7;OAIiLb`Ib;-#5NY0!TlR<uh7!d)?>,(@<K[6R@CIf?$h)^Og>T'iA@h!Ot7bb=sXdfS_J)&jqU#
%XXkmLV"Z"7ORuZ<^nG??@&)(+Y'kH0gQ]IQ'eG:LR3oGaJgEDcJ=At/")/HG[fd:K]PBZ'H^t8:')_5+%j$E9_"NL[SE-]m5Te_?
%b\])>'5#>H"!3#B1nARo'ttofH>Cn>Xir?-cCVuel.D5^"o7H%3omL>8-sr4F_"d*DUqEb7nKkN_O`NU5F8Wk!eu:!Yg*??Cuj;9
%[Yi,doA:>SJk!cjgT:DUGM1bP\oH-MDKIBERb+8QB\/CMa"K#176&W$-,h&iP$$PKQoCYiF^YZ3P"Nh+gJHbKT4F3'*Ok6R'i'K\
%**'.cX;<_?@CqdFqE"8bC>RHO8s!hKp/<SUrMu.,6_UB-,`Xm//CIPObAiGKc\:=k_8ra>)E?K6_Es*Tl>f3-3IK&b;MJ=C#"WO%
%)m2Yjj!K#:L#\uTc+3J`YV;5'M;GMVCgqKG4jUZo6:n"aLM\GX'T09C(%km=.#1aNZ)AFt4VkM'/."8po*`c("/k$d?*L!^S?$6&
%XOm"H(5m4B2UI0djF!QEKaZs)E0c2qA@+>ndLr)A3NCo/-AI+E.7.\V?ob"r>f7202:pQ$1Oh%Rie+[H`Es:nOIHnR,@6ure[;jE
%(t1:_R08,O1p-FY^S_6>lZ3OVe/hmGX`FYs2H3K5;Y%DA%cW`%B^P7Bmjt>NX*Z7Z<(_>dApiPiFe#M>K<J=fWPO=7o2]r8m95+r
%B4GN43mLH7aY:41,n2HoB@qh"IdRV"rn=:^cZY0OQ*3s-FC6tsT)4&lj)Taf2+tj,:JGRi8tE@+<'R/#^G<s6VL/@"3ZHHNo.K[j
%YcR'hWa*6+c5h87RQ1F(LElq_YMaJmQ^S<h4V-0gMc)$&?.,3`NRN`iY<lm3U3l@cle3a$Z*>>UYQ+1,;4(e]@r/!\9bYl&Og0+D
%/U>k9"m2!^IZ\=sVb>B&-BkZH(35hg?XU,eGA@:tAj8C3CHP(<$h4-:H)6uSmFIR7)3jCqZLD5W1L]YtMd"'%K@S%YD%tI'+Eu7M
%)ng^ZK2pPnOY5^b@4UCW,Y*W.RD@7pGAODM[Z+n@a:jt0k0m=3:oI!B(SJd1H=(+/<GPtEm1eBrhL4IP/p]-TEDjSSj5dFlJH-C-
%>!1HR,9R]'6VGi^MNQ!;XJ1ob:j?KJVPPu0"F3.e[*]g*6,HKW;\'"f6SSak;3s8MKjp]b%WOJ$q_JHmnccX)(:kUZMT!g/XYK=*
%6o">fd!;)q6Tp@E0Q_tFjg5GK@IV2uj=kPWS)>>\S?@FdSjdO2Fr2E'DFGXDiFH=_$,qLDJa(6ia#6a69in/iRVh-g>^=W#n,_+f
%RH&[Jit81m_%&?JJA<IVY[,1%Eq;N7eS&W4Y=.;f]EaNiNjK2FftiqeBT4UN]iK;\b#OssB0JsVE:$Ju.Y2P!Tl*gF2+rCt%K7`'
%`^Kn8aKs_@M=UjsXVOd[,Jq1_&Y[e4YoG=W=hL_;iOR9iWfD0IUH%hA'?:8Na'K?6Z>9q.csm*s3pX27bCK2tM./-T%\9POEA,6M
%cB]PB%ShhXI2*1'mY@V.dIiF;GlP&AlSR;kI?8_Y^Q%duP\&^[._]S9hC9;l.f2V]L&"o+QfSo"G*ji3=S)Xi=p65:(gg`5a0]=q
%BX</-s-G%7Ip?/&*>/q/PW=&_VSorsrK(<DK5ff<:]g-`,GBA3fLH7W5g6/MQ_4ETQL,O;G@eKPQ&:HDJm3"ZZ`B3E1Z]^`O3eW`
%S1%])\D*60S#\8Ib]'^+B6$[@ECK!8H"O$*EJ#eG!sJf5iCV+TNtR4Ko=\#d&Qq.GfHHAM<YJq+k1RC-"h;H-WH:.`KJg4cK5ae5
%DeW]V+3i-V#fk>2*6T:&_0KbqNNWE$&EY^hnVP+"cCFW2/1^-@)p"qU=13[u#PLX-'D%sPXUVXA"2^GHKdr*LO_hqP]#T;Y9_p.!
%lQ2XbjOa/1-4<$RI6bO75tO8hQ^Dr"419\uI)&$iVR5pQg0sdI,k(gm_\.2c#<>ZU=Hk<I,e62jaC2b4Es=o?oD#<\:dpI99EdE^
%.!#()Jt*>',6^C$L^A*W<0/%n.`^dI2gtE7!fhu:jObrM2oNiS&.)JILl-2m</aa>[2K0)-i">Z:_i#H_`Q0elsC?GZ?5k"cpNc4
%3`V,;_S$q"-MQ'GJk1bt-R>3TmV`MR.3:3,O%p99,fS/s$4r?Z:6J3=#F.4s?3W.fZpf9UbPe0`X,NZ-FUcM?,k`3jOAp-Z-X3;b
%rX)dga/go,*:V5.0pQ'OOU<FRcG^T5b,MONM(Da(L#03^aJq2P$Y7YpquSd;*on.&3a.V=OT^qV+MA/Vr"[FFfc2nKO3#a\_,Pkd
%9d[WV]cb*UPjTeB^But[#4[D-ONftFYK%2EqZYEU[(L3W8=8*VW*D84_h+h]/>V9*rP2lFjBToOO82E>l8F_3X%:>Go:jsD%CFfu
%OfXaa:]hf\/+6a?@TX1Bn6=td0K[L4'`p'nq&0o\'oP6u(KM5FH^nGPdV8%"#28QT%Z8`n,g+=8goCrW7pOPB,%+>&1!OKOK;h0E
%%&$.bg$LJ('=\d*5abPU#pkfrFGgk@96kftSr!(i1'*]IPm:jJlRNJkeLkE0&P!LNk]A5$6F#UFREmfoTTCr(U]j*AQ,u=F<K*<\
%.$.kqGu="Z"5*5f#+m5+Oid_"i9*-;RLSj\XlouC[<.4=27B:mFJ1!?lB;h5),%^@P2k[7XX2Y.]Yg8\$Xt?$T_f9FEo8H%1)Or7
%=HpG*JMpcK/T-_b;WU4uH@cNH#>A3$-O7N"a2/0.:XMA?`+4_DU(>>UV$(_0:&cWkMc1H-\L0*[Mi0V_qC%bXUB#9lG,0R&8)@bh
%afXXn<BntN>\e@JRcAF?@>f"C)94VN_4IfYX?B!kcr@%C.j\FN\p)H&LX6+5&VP$`L2`m22S=<-8gX1`n9tb^FHkJ=7nBtJQAQ+@
%DEC<j]"V<1#[:oMqU"IMQU=6*IH>!44cd>5/r("Zg=s3A.3heu=(7qhgB")Ke1CUOQ"X2$CJK8j*5hL(poB]V2NUH<8,c*NmjCg>
%Y[U=CRMkA4-=aCQUs+UQC"&aeKJsjQb+Lq=O+cMQ,dCn<TKcR,>c`p.`hc$;aJ:`ad5=Ud"aWS8[J.^n*B!Fi1X#'Kcrh@%c@ERL
%jMa;oMS14rAEaqKTX`'WZH#")kJIkRE@eA&gt+PjF,YFm43t$%!1k]]MS!04,ck5@4X);?4'E/Wcnhg&'^2qJo7#X/MfW6LimRu9
%FP<=N5$#*F"ZSZ5!m$3qDl&QGcsEZ\@ErEE.&=3^46YVX3eDL3P6r.);PgcLc7ph)&`u:.Js55mpK/uhm+FXnIK.e%"sQ"be@DRk
%RRB$aR`'6S5\8)-=k'&Hd6"'6)MT*c]P&G/0iH"H\K@WXNsR#;,thTH*ttGUQO'as4sjDL$S-YS8gtMO%9omFbrDN,iY/?`W5<]u
%25\u_WLTk/A'rC>R.h=%Gg`UU)&,^J8p8j8FQ&u\\nIlZh?RWBC^gcsCXETuBrOom6daaZP#;K1d20m!oL0!j[aS\1bu:9NH-&IK
%c)ADqr!XJHU7B79F:(4)k;H65$=3gKbb/T.iW@^d<=c/Xdiba*TP*2=:>;.ceTIe<RN1kk+uWB^Ep".EpnYAS$?Der=JP$d4uXI(
%hZ-&,:>V<f>X[3c1aoLRF*8m=[3kU/ck3]]a9q%B*Sk0:OsDDp7'%&VM08pCc69_`=TO@A;`07AAW?0k=NqLRl>^2L+i.,tdX"Tr
%nd47^=OGkps(Y(c"<\.3ab!b0_C#ZnqqSFIDLOZYP7<G+*is(VU1>*?'(K4L$jdfm27Ddm#\_)&_OEANG/thuX$n""_H/'iXX6Du
%^6[h^Ul0>d[)XjL`H0S7bhP[!V$HBOOQu-Cn+,Q$<+$-@M@>Tt4uZa&=aC.iaf<h@%6%b-*P*8'K8"pm=`s]Y9MSWnkQ>jHL08Z-
%R-gQtYmn)!"2ag0luM\M-Eg&h+EL1rn9"iF(q:tY",Fh^^lGe<_htcbk8m;2#/$8Y@@:If;h?FrpDu`07aof@`uV$_>aSDHj[E]P
%iWMb%;Zc1]c]ZsoK1-C[LG3VNV/.8e$f3sqO;CN\''PsPNi=Yl7nbG1_"HaC@q"_9(,,#+Ajb`M2is(>neFu=fe$h6Z&W[o*?XdD
%`E;piV@#KL_gp`1H$UX\;]rYDhEYkuSBBVs:*b^[-Vo8S%1$!O3+e[i7+.IT/`p?iDJc$U(HOu,VhGL!''WN_mN$4^/9LVZ#&D@Z
%LH)hTVmN#[FN#ka/&op7KJ';?1t6]HboPRLcDHVY6`D$W0l5uW*TJ&_QB8"Bdou&KG9Y!Ip"a.4+u8G#,OBYs,3P4aMSV*G9(YZi
%0(fjJY1J0Oe/V#3&/d;jhILp_P&*]R.\%k5<"omY:5TW!aiZiUgT4GSbG1F:b4J^TB7DKGr(0sk:8T-RXE*M=Pcp<S<fmF2f]S!a
%ED@R>C-FDBZ?D%"Q?FE\\euY/=4.,a@m74ISTI'):ad1efg'beU&.`biiAR5&0n&\o'R2`BK?SA^Q;\1iPCYWaSSG`0)R4^P#.L6
%%$C8?+-)J;Nq>H9WBkG^>A-eE0qRm>h7ce0]r$/VhSHS:B:@KEJ4\&$.d%:82"io7SdY*9P7VA6oWRb)@9RCQM"TQ-6^!1;78:'k
%LQ2bZN0_ACI:\(I7JGZP2\r+<QMINrTeKd*,/bMFAeH:H"@npC3Xk+FIahs3q<V\acPAN#EJW;#nqqQ]8J4W*M+A*&Pe;dV,`Fse
%I=]A3baf3M=[ZeCWFKM:7eoLhORqjC/M'5&g`Xlb(h=.[K[NsW[0VJ\A.`!JHDbVf#g!cXH,LJl[)aJt#YD1FPs)$kJZdX/ho6p`
%c;eVsr1ip5QQi:g(n#kA.sYOZ=kJ3PDLM],P(Ac:Frt'Hif$m#ZMA-=/V\uA[HIhK[)<.W;6,^j'&l3Z1R`uA@ti@7-6Yt,c3FP/
%$-AXor><TK5(hWhRo"%^/%5/A@Fo\@pFa@"YI0g85IU:&Y0Aku\@39rbj.,('&&7GCM"7&Z5%Mk$->AY7[m4^l"Ul`D&kgbF0u<_
%gHKL5+\E:`CdPN&E&r34&.9D*V`Q*R$,^;GAt)WLh?2)O_^AZK*5Kkf7\NY@"3V5n2MN*'qABF$:C.hMC_`u?.nV[mg7MN%1*cA&
%m$",)X&)uR%U"/(<I,Jt1t%2b,"YfYIDnC<<Ch:)eO[s:`kTZZn^hO`LoR8*7Coe%\_1@V.<S=K8[8\[2CC$&8G/7h<hUGH;MJ=C
%#.R_1i9JT;'KC!E5+rc)lZZ^.*>ZrAk3K@mm#^R&2isYoblY8kC_O4:D4hgirWa`tq4GG%BTaS&8).gp#>'nIj;p8nNf\)"'(GSa
%=9&*"^\t(,!:6K4[^?lIE*%Pq]XOQlY!AlFk3MbnD$cYYe6`LpE*!#G%5VY!oE#A7JPF!$Z41eO7c])QnQr:fP]ce:6?6JL1rQpm
%7i(Pr5]lOmaI>mkHq>DDK8?#H!*_K/dKcrha!rao=Hu&Yk:I&3At'NJ715_63W5#]M'a)aXaF)sM>>EP]G0u"TGYj%"kt0l%F9hD
%1_84^`l[Jk(J5qr3Y>':Zg\^LB6%:Z7g3Sn]RV]hj/1Z`_nO$EZ^VNj!P]Bd5"kHu)+FU%5&igO5#TGrF#WU9,W-mOnW5+/^'c8B
%G#q>X=YhA)ZuLO)a^c7nBMpJK*l%"2690c*RDm6O0#L^D.]:sLP6W,aeen*)m+Mq!e\r:pe4#_r`q2fS%aCN66J=XJXlP^t!G`\F
%EH*O&C*foOg$Pp;W1Z*Am]_10004/V,A0dT64YClLHd_&2m!9A6G7se>N5im;ltVDNA?qsA0I6f_b2WqV^iHa6-i`p=&[<Z+RWW<
%(`h,]kECLe(4ZfP==Q\f.JC_Cn\VD:Y8*gko7Bh7]+pMeQo4]g.64#jVapmG`l`S*iMFMsn6gP%rJ6qdV!-RW!B^)dAi9Y\V90Q(
%S6BsLE(*beDc.c:b#qt0GNpppG]0MPpf67j`/8PX'n4ot*Ea6#;XSHG@K)^$W%+!IY`Pi`j`Rd/7^#=qf!8'[msiQ)a2Xc'9uu3;
%HRQWhH6JVeaU=@d/Dlt'Ld[Rp+G*r.-7"'K<(T7ANs2;K^eF^.UH?J<2m/&/65'NF9LkHO9!u0V74Jkh&e@E'f[dU'@"C+Ak3QGa
%`p$=nM9/+d$WhQ)F/4rnM%XQWOWHlq0SHkY`o@;W_Cd(]]8@>lXol_7KBF)^qW%Q_lL$&:Yn<aT\[X+a3B#qeEb^WkP8j?\>t!m>
%QhO"cI%G[$GM%WrGTJoB7Burh3GO^o^k8JS6"WE'oTC!3"pL^0./tF:%M:3BfgaNRlB2V1`[O-PA4+i,$>>T^W^p!XLbu&@"7>9-
%Wl]taCG$sf*-'BgR#3f*8bYtucZ`L`LE%H7X"'Ho-JO(#hA4f<i4E?i<8I4P\:O:I#2'2]k8^=!,YkgJ;KuhR4pSbb=^AI)3`NON
%.(EWq+@5ueI#`3hXuSte?4k*(S1,tC;oF7s#m.uV+W_iQIk1p6/s5A.X"`,7L8(V9+6u;NNW[2_FTG"L=;rU5dY4-q;]tK'=G&*G
%Nu>^l:`.:8hO.,b[#Uq(5DVoK*BY'`74du`%Bmk)*@?1,;"VO8>&AZ;QKbY5>CkW@E_>I3&a)^''#gu"9fdD@7s'?*4>E8`+fJ?1
%o+>aFLp^l_;.VTgb1HX++'3r?=]O>_UGIJh>Sg:.T!@,Z7BsgXJPiSrp^ng+Z@/bi:3%6HXcCV]2/)5-_E(--g:i9Q\_Q5*'Ig8s
%I,]"g'#/1Ohq@`U7fk%Ids]DTZ<:r0Kt1G6l)9)3FEZuaL&N*8fsVqqpZYf@^&,$NFa=QNmT[A^o=7Ya5b(QL;[&82FWs'Bn9lf"
%UANMoKR;:&.9R77pa7Hc,@I\iRsG=]DB"TY`374`(%2YREb6Wfh^AnQ0&f*).fODsRWB#!+3i=SUjiADp`&;kXnQah4_6jSL7bO5
%-`k6b/S0[?EDJlHH:eJ_<Y1k2U1^8!/)8G#GcJ_%>4`Y%=@;TCDJb[;%4Sr2Pl7P]cRAZ8%D%9Z4(UDAY8Y/>j_MpL?UKk<)Y0>=
%Fa/8IL61nPe0t4A)bT70CT+352_:[.hkM\c5E-[!&\'.so,7\2b7S<8,Ylr&ZBU\uJi:8"&S-Be6eB\;K)6I<VnZn(C*&#**5sV!
%FUXraZRmH>\e8!T^)?'+5lV18`Gu_O=$]2i]F7`nR+GlTce8bJ'T"/_PQgH9>]jWq"+gcIUKrh+;FdsV]a/C@e5E`4+Y4d*43KsC
%c-\)9iVli>LS;s>k"+^B@;6DGRV_[$*nq[ROY3*ILiD<5=i168,M9[n2l"%J9]>12<(l1SoepO@]B8+?gG(*Da1+M7`.476E6UP,
%\G/gA(_7WS:<6DoikrA1>p^Sa0cY2^L1@qhiYg":kN)s2V@CSqZuL9"Q*VoeRd&*F3h?AFPS*n[1P..sc7HG@3#8GJk3k!4IN0n$
%>?K0^M[*9Q$<oV6`Y]pQ%-4>9USTT8P;61?+7W:O[_j>]\ZJI:APtTj,mcO/oNn2-n<>r-`2u+!TSj&>;g>9kFn-iKDt&e^ic.XN
%Gd#5$O0oed=AdAt<sSgW;+X+S_H-ZHiOO:[?kFK]N^PF6;+J3Z6B>gVC^IK%S>pgN.-a?J,APMs,=Oq@It*Q!O.ns[eZkQ6OF,pP
%X,/*2drMM=elROmmfJ?tabuug[VQ4tb3E%K.:T;%SVOk?Ai^R$V)VXTOs6W(P%.q6=;Q26;ba9O'/]oL=7MMG*^SfEOm^f[E7E2)
%4UrAM2;5?A+E,Md]q-NV7!&JlV@q3jdadRKq2tn],MkX]B<%D433+c?D\a?b,p(i?c6rkLAL4DAJHR$]5d-^4C5aG%R]YjDi*QqB
%m*t*e!DA3;W5L7S]Gb(5Oh\J809U3c+/2s*h(8$A[h33+kAuI>kZ:dM?/-TO$]-*pFp>KfX(KpdYZ,.)'[<N3>?!.6_,+K=9dI\b
%mTGY*<`^4J4%EQ.3Ta8RC)#tLF(+7!$9P$gU/r7\p>Y\:k.TI>VpoAmLjYj9bBW-ScCdFd0n+m@73/ZaBA*&[e5^gdq$a"#*]gWM
%7Gq<Bb3p1u%@feGW'-:o#jYM@lRnuqCN9u0AahMI6.Qcs"?VE#\=&H?hA/MT^m<4g%QV7>NbbB=*(6>B@Gr'#U<[Q&\`<)Q"=s$7
%b$PUj,?TSs"#<8fW3CVfh*$h'KTC(=B@!>R<(;tRK3&*.<HPf?l>0?=G^(jd.8B?3Z7aS!ZL1#p.dPMAW5?(@^NNr=r>0]UM^D-F
%G+;c<%0(palcZAUAgJqJO[^mmPq7e`#@,1e9F,lj8=D'J?A*ID7,fLM_^!^g<oBoS;,s>oUEiWjkIK]pXl,gM7"6NDc2!0R3#]k>
%<K7<imN'B]kh[BkdIVYMPf-.MO;NVuad4P3D^rUlZ=fb<m(RM'bIs0/Y2;OCQpe,fqVQP/0G2tM.h_Z=%M,g,mP%gQ"\5'!#$#u0
%*4_S<X3Hd9Ao@$snIYF1YqYBE(NMc]jTf`K7Q3m!RO+9]l^6.XKN#"hjNGG(ChF6s/g0=E*DU2LE4oGEPS+DEQc@gFgPAepdF@,8
%*FU-r(6M;CMt91]\Q>#Y[MiP=Vqglu<-m6`F0fDO?WNM+0-R&$8bYAW8^%j9U@!;t&gt,l[S/#o"Ig5B-52Bd17?X%f5!<5BR#"0
%$kFMP?0W'hPa>[hG%HKYi2h$(SX&%V.qu]*g'nW44u`DFXY`D%&Yfd%jkh:`j[ntM\IQQP[#kgoU5iT.<Wj+<Nc-lC7GQu`M7mG^
%f:'?q6\GXb'u?!EJtob!<p0Q)Y?bV!J#%i=73iJ^SE+K&_]tG[7on&aD7'V%B_^BPl^lW(OrilKq]\Y"%3I7G:-T_Nn'`_D?SN\*
%aH"^$H-;;nccj*f(6#--.q7Ms$tP;L>c68DRcrgiTItKa\+%ou@]gVpT6?UKD_oOO./XK4F+>>B<X^Q;4S+p["2aMgJ`#OD*0Gt\
%Epo%m47ajuQXTfR2/9%j/K!A7r9]Z1>EOUAK"X)7haTS64)/=I@JH2_Fat3i;^M7OM6HCao:iJh-P^P1bf@NBm]aPhFsLW$Kp(#j
%*>V+I,IXc*96'?M%k#'Q>8G@%$eMjgG)&68b4Oopb&^,7j64[l9!g$!2Cp,!jbGTX>6hk!/3\s`#V)].%.c@4Yk_[HV&-O?iZA="
%"q/ms'%9-a9"@)!+PHMY%%HH1;h>_O-.dE%.!t9sIZ/^?H!s70Qia0C6)9c-`/.1#k5uM$i_1Lla1FX\3&V*m=J,n%ap;6kcP5"s
%eE.C2J<un/aB2lfXjg(g/s9?\YX"i<$7tE#]KbJB<JIAack"2*_@J\g4lj9Ar#U$7&F1c/7c^,[:`$1M"7h&pTagWr("X3pHXc2f
%L8.sYHJss&EL51fQ;6.$eoK((7J;8ETFnG[Sg67cHVQ>.>$AH&OLO!dPP.k?2cGf"Fqqjt\jKWo<!5Ij(P"ae^bKIOJK6EF*$LHZ
%%Z0sL+G*oqP$CG_6BnfX20arIbYe!nA6nhVCnTPZo&;!>MafJ4e@hNDB+Ss*%]5'B$-Cs.LrbR;8DFK5^b%uQDX0F#1[F]BF!Z"`
%k/r>AFbQ/tLIlMe&O#"p;8i"u%g=2YY)_G7U?e,1HlV_'GS57Li,Qt=_cM(a[)_cj"/b!<AGWu,U4@U0U8*(qVVF7iVV?GV"S.RF
%`=A8Es58s_LAk,P;5O75+ORe5(e5)kWbP:+E@kl"(SUFuXRoc;.Qs1eHI1mGjA0XO\DVo%o+%0L+!K(A]jaj\OmlLJqP)/;0U]!4
%h@2&K*L2L,+F<s<5O5sLQ>JhRgBLPq,C_8ENC/sE4Bt^LQZ./1/Rko4"$Lh6M?)BPBgEjm&!YK$OB8FCT#dZ9,YhuVOkHXO-c[SK
%1JcEi!hpj#Fm9+[iY)J''5j"UDMW#l]NUreV^[q2$Yk"?k@/TO@_5V;S'4b?LfFe#'/]6e+EQ!<f>uYcGb\%l+2K3kSJ69&1.aK6
%-7O_g,R)!'*W#u&HI)(>;9'P%I!;9WmL]j:G^HY*2K`;9qO_AXMNF3rd*"Vr<tGd;-TN^I%5"i@/gOZs(<fS\CSmH=g^81=`dB:K
%6Rt'n#`&d:680^Z&losj!(GMSi`mf'-esQ:`]usR.E^PtpuHpomE$M+4e[a1K=QZHR"@V\8F'gi"3LurfrDsrEA<sC@Wc]VND>OG
%i%'J$$-H6\4lZ&2"*lP25:5IQ#i<Rqna^-.8BQ3&8>+,JUoj<m)&Rb',ETI3E/f'-fSXuY^1nJ)a4s%j-,>@70Dce%\08X:pIG_N
%4ghg9b,Y%oPiQ*b/!_G_pBc)<j.T44QkK/tp\(lUPF,IY0&:]lc5$9j/ZFdo"NBPcJoYtg5_U3t@_iM,-i$s*JmtJ,5i,T.cisj5
%++!r]fl#66BLFR#.J1JYid6%q%o[&^k/]DHO1Ljr\<3M@.ft2R#tud"!e9C0(="$@#D0KS7jB*\#NVoWrS\;CFEFKPTSh>Yg,H3;
%\D`F>\m[[WIKmJaD.h3gN6oHW.\3P#ieLqD)_i"j;aMYGA&u_gZ3gD4f'iLR&3CR/,j/qZnk)@FonH1*G4J<kISd]B.5N+LeZrQ?
%D=uDF,G7ED+tpHW*m4u^?h>mRBP+85c^QZ1aIf$Z/@LYLga(A7%e>3@`!1OLS.>-7$20K;kkoIqGKb43$G^56\/f1.!E-)RWW%b-
%D@jtY0\[+'90U9+ie[h[NV..DD0UV%Nh`H;i^GoH%Dl81&uQp-$qR"CR8\+))A"0RT]^e?9Ob1,<nJu)85m^m-'oPoM8^(.4%GIF
%*%P(AFc;TY)T8^Sm6fdXKPV/)U4A8tFH*s"YNY\jc?k<rV`Ip'8e;0!lMW1qjoL-VZRTuQGTd!o47ikV(b$D`*Hp2C]E3*4iLrn3
%P[D:\@eNq=N!?f5N^M,10*km/H[dTnR40<,JgKX*eGFKTVp:@1CgKl8/^F[h2tL=,4h<<$8qN>"*P')#_uj7#Hj?I92U1jAO>&<i
%B(OG)S!SB";kh3A?6Z=mW8Ub=A]0JV-.2`N08Ba!ft9-ebY,jj,jZGD]#2D/%%'^_kf`XX;mU0tRnq:^i6\pX9ufSi2C:NP4up<2
%0KX7j,;rbqSK2%"29sK_S5VK/ljS]qc2cPa%%,8a/nn73H8^bIn`f;6qYY`&J"*+@]&h+'T:d&Ld(JR,.A)sj4BA?@lYP>-R-$f'
%PBF.:?OHA3/]u?OY`e<hj+?96ZSOi0Z[oqG_6tt<T.QMdn^6Q1d>RGsmgK6gDaH>1>7mo4`Oj^3XYtB2S7Z2bKsFi%H$3:DN$",X
%LeDbno0c8qC1[^J6/t`lPdS6mYbt<oF>N+&$Za%o8QEg$bN4tT^:'CZ'6#bUj73k)A\uXY0NTSd9.tW?E7T?D_r=WG9gTTm(m9tK
%MI%h-EsTK![521Ne,fF.OAgd?p\Fs+lQNI@"b,&QDit6P46F2pA+dP&+m1ECGr+h2kGo?Q5gIr,E^H-V(9WOr=$(5hFcT3YW3O3d
%HXIN"B)WpM#^H$;+`]O#4MkfH?@VkB_r(Cjq2`;fj6p>>s1_oiqsh^f++F!g5QB]/s8Ld!s6&!@If&oXT7?j,?bZL:a$9Rf00fKu
%Q[c_uq=]U$IeiSBrq+quhu<Pgs7Cel>Xe;V++F"@J,-^;rssE3m\^~>
%AI9_PrivateDataEnd